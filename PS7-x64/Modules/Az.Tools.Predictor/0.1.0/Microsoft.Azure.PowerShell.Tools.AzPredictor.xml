<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Azure.PowerShell.Tools.AzPredictor</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzContext">
            <summary>
            The class for the current Azure PowerShell context.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzContext.UserId">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzContext.MacAddress">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzContext.OSVersion">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzContext.PowerShellVersion">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzContext.ModuleVersion">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzContext.UpdateContext">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzContext.GetUserAccountId">
            <summary>
            Gets the user account id if the user logs in, otherwise empty string.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzContext.ExecuteScript``1(System.String)">
            <summary>
            Executes the PowerShell cmdlet in the current powershell session.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzContext.GenerateSha256HashString(System.String)">
            <summary>
            Generate a SHA256 Hash string from the originInput.
            </summary>
            <param name="originInput"></param>
            <returns>The Sha256 hash, or empty if the input is only whitespace</returns>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzContext.GetMACAddress">
            <summary>
            Get the MAC address of the default NIC, or null if none can be found
            </summary>
            <returns>The MAC address of the defautl nic, or null if none is found</returns>
        </member>
        <member name="T:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictor">
            <summary>
            The implementation of a <see cref="T:System.Management.Automation.Subsystem.ICommandPredictor"/> to provide suggestion in PSReadLine.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictor.Name">
            <inhericdoc />
        </member>
        <member name="P:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictor.Description">
            <inhericdoc />
        </member>
        <member name="P:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictor.Id">
            <inhericdoc />
        </member>
        <member name="P:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictor.SupportEarlyProcessing">
            <inhericdoc />
        </member>
        <member name="P:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictor.AcceptFeedback">
            <inhericdoc />
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictor.#ctor(Microsoft.Azure.PowerShell.Tools.AzPredictor.IAzPredictorService,Microsoft.Azure.PowerShell.Tools.AzPredictor.ITelemetryClient,Microsoft.Azure.PowerShell.Tools.AzPredictor.Settings,Microsoft.Azure.PowerShell.Tools.AzPredictor.IAzContext)">
            <summary>
            Constructs a new instance of <see cref="T:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictor"/>
            </summary>
            <param name="service">The service that provides the suggestion</param>
            <param name="telemetryClient">The client to collect telemetry</param>
            <param name="settings">The settings of the service</param>
            <param name="azContext">The Az context which this module runs with</param>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictor.StartEarlyProcessing(System.Collections.Generic.IReadOnlyList{System.String})">
            <inhericdoc />
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictor.OnSuggestionAccepted(System.String)">
            <inhericdoc />
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictor.GetSuggestion(System.Management.Automation.Subsystem.PredictionContext,System.Threading.CancellationToken)">
            <inhericdoc />
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictor.MaskCommandLine(System.Management.Automation.Language.CommandAst)">
            <summary>
            Masks the user input of any data, like names and locations.
            Also alphabetizes the parameters to normalize them before sending
            them to the model.
            e.g., Get-AzContext -Name Hello -Location 'EastUS' => Get-AzContext -Location *** -Name ***
            </summary>
            <param name="cmdAst">The last user input command</param>
        </member>
        <member name="T:Microsoft.Azure.PowerShell.Tools.AzPredictor.PredictorInitializer">
            <summary>
            The initializer to register the predictor implementation at module loading time.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.PredictorInitializer.OnImport">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Azure.PowerShell.Tools.AzPredictor.PredictorCleanup">
            <summary>
            Clean up the registeration when unloading the module.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.PredictorCleanup.OnRemove(System.Management.Automation.PSModuleInfo)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorConstants">
            <summary>
            The constants shared in the project.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorConstants.CommandPlaceholder">
            <summary>
            The value to use when the command isn't an Az command.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorConstants.AzCommandMoniker">
            <summary>
            The value to check to determine if it's an Az command.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorConstants.CommandConcatenator">
            <summary>
            The character to use when we join the commands together.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorConstants.CommandHistoryCountToProcess">
            <summary>
            The number of command to use from the history.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorConstants.CommandsEndpoint">
            <summary>
            The service endpoint to get the list of commands.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorConstants.PredictionsEndpoint">
            <summary>
            The service endpoint to get the list of suggestions.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorConstants.CommandParameterSeperator">
            <summary>
            The character to join the command name and parameter and the value.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorConstants.ParameterIndicator">
            <summary>
            The character that begins a parameter.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorConstants.SettingsFileName">
            <summary>
            The setting file name.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorConstants.AzureProfileDirectoryName">
            <summary>
            The azure profile directory name.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorService">
            <summary>
            A service that talk to Aladdin endpoints to get the commands and predictions.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorService.#ctor(System.String,Microsoft.Azure.PowerShell.Tools.AzPredictor.ITelemetryClient,Microsoft.Azure.PowerShell.Tools.AzPredictor.IAzContext)">
            <summary>
            The AzPredictor service interacts with the Aladdin service specified in serviceUri.
            At initialization, it requests a list of the popular commands.
            </summary>
            <param name="serviceUri">The URI of the Aladdin service.</param>
            <param name="telemetryClient">The telemetry client.</param>
            <param name="azContext">The Az context which this module runs with</param>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorService.#ctor">
            <summary>
            A default constructor for the derived class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorService.Dispose">
            <inhericdoc/>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorService.Dispose(System.Boolean)">
            <summary>
            Dispose the object
            </summary>
            <param name="disposing">Indicate if this is called from <see cref="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorService.Dispose"/></param>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorService.GetSuggestion(System.Management.Automation.Language.Ast,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc/>
            <remarks>
            Queries the Predictor with the user input if predictions are available, otherwise uses commands
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorService.RequestPredictions(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorService.RecordHistory(System.Management.Automation.Language.CommandAst)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorService.IsSupportedCommand(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorService.RequestCommands">
            <summary>
            Requests a list of popular commands from service. These commands are used as fallback suggestion
            if none of the predictions fit for the current input. This method should be called once per session.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorService.SetCommandsPredictor(System.Collections.Generic.IList{System.String})">
            <summary>
            Sets the commands predictor.
            </summary>
            <param name="commands">The command collection to set the predictor</param>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorService.SetSuggestionPredictor(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Sets the suggestiosn predictor.
            </summary>
            <param name="commands">The commands that the suggestions are for</param>
            <param name="suggestions">The suggestion collection to set the predictor</param>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorService.SetPredictionCommand(System.String)">
            <summary>
            Updates the command for prediction.
            </summary>
            <param name="command">The command for the new prediction</param>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorService.GetCommandName(System.String)">
            <summary>
            Gets the command name for the whole line command which has the parameters.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorTelemetryClient">
            <summary>
            A telemetry client implementation to collect the telemetry data for AzPredictor
            </summary>
        </member>
        <member name="P:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorTelemetryClient.SessionId">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorTelemetryClient.CorrelationId">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorTelemetryClient.#ctor(Microsoft.Azure.PowerShell.Tools.AzPredictor.IAzContext)">
            <summary>
            Constructs a new instance of <see cref="T:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorTelemetryClient"/>
            </summary>
            <param name="azContext">The Az context which this module runs with</param>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorTelemetryClient.OnHistory(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorTelemetryClient.OnRequestPrediction(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorTelemetryClient.OnRequestPredictionError(System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorTelemetryClient.OnSuggestionAccepted(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorTelemetryClient.OnGetSuggestion(System.String,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,Microsoft.Azure.PowerShell.Tools.AzPredictor.PredictionSource}},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorTelemetryClient.OnGetSuggestionError(System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorTelemetryClient.IsDataCollectionAllowed">
            <summary>
            Check whether the data collection is opted in from user
            </summary>
            <returns>true if allowed</returns>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.AzPredictorTelemetryClient.CreateProperties">
            <summary>
            Add the common properties to the telemetry event.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.PowerShell.Tools.AzPredictor.IAzContext">
            <summary>
            Represents the current Azure PowerShell context.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.PowerShell.Tools.AzPredictor.IAzContext.UserId">
            <summary>
            Gets the hashed user account id. A empty string if the user doesn't log in.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.PowerShell.Tools.AzPredictor.IAzContext.MacAddress">
            <summary>
            Gets the hashed MAC address.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.PowerShell.Tools.AzPredictor.IAzContext.OSVersion">
            <summary>
            Gets the OS where it's running on.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.PowerShell.Tools.AzPredictor.IAzContext.PowerShellVersion">
            <summary>
            Gets the PowerShell version it's running on.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.PowerShell.Tools.AzPredictor.IAzContext.ModuleVersion">
            <summary>
            Gets the version of this module.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.IAzContext.UpdateContext">
            <summary>
            Updates the Az context.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.PowerShell.Tools.AzPredictor.IAzPredictorService">
            <summary>
            The interface to provide the prediction results in PSReadLine.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.IAzPredictorService.GetSuggestion(System.Management.Automation.Language.Ast,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Gest the suggestions for the user input.
            </summary>
            <param name="input">User input from PSReadLine</param>
            <param name="suggestionCount">The number of suggestion to return.</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The list of suggestions for <paramref name="input"/> and the source that create the suggestion. The maximum number of suggestion is <paramref name="suggestionCount"/></returns>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.IAzPredictorService.RequestPredictions(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Requests predictions, given a command string.
            </summary>
            <param name="commands">A list of commands</param>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.IAzPredictorService.RecordHistory(System.Management.Automation.Language.CommandAst)">
            <summary>
            Record the history from PSReadLine.
            </summary>
            <param name="history">The last command in history</param>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.IAzPredictorService.IsSupportedCommand(System.String)">
            <summary>
            Return true if command is part of known set of Az cmdlets, false otherwise.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.PowerShell.Tools.AzPredictor.ITelemetryClient">
            <summary>
            The telemetry client that collects and sends the telemetry data.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.PowerShell.Tools.AzPredictor.ITelemetryClient.CorrelationId">
            <summary>
            Gets the correlation id for the telemetry events.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.PowerShell.Tools.AzPredictor.ITelemetryClient.SessionId">
            <summary>
            Gets the session id for the telemetry events.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.ITelemetryClient.OnHistory(System.String)">
            <summary>
            Collects the event of the history command.
            </summary>
            <param name="historyLine">The history command from PSReadLine.</param>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.ITelemetryClient.OnRequestPrediction(System.String)">
            <summary>
            Collects the event when a prediction is requested.
            </summary>
            <param name="command">The command to that we request the prediction for.</param>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.ITelemetryClient.OnRequestPredictionError(System.String,System.Exception)">
            <summary>
            Collects the event when we fail to get the prediction for the command
            </summary>
            <param name="command">The command to that we request the prediction for.</param>
            <param name="e">The exception</param>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.ITelemetryClient.OnSuggestionAccepted(System.String)">
            <summary>
            Collects when a suggestion is accepted.
            </summary>
            <param name="acceptedSuggestion">The suggestion that's accepted by the user.</param>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.ITelemetryClient.OnGetSuggestion(System.String,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,Microsoft.Azure.PowerShell.Tools.AzPredictor.PredictionSource}},System.Boolean)">
            <summary>
            Collects when we return a suggestion
            </summary>
            <param name="maskedUserInput">The user input that the suggestions are for</param>
            <param name="suggestions">The list of suggestion and its source</param>
            <param name="isCancelled">Indicates whether the caller has cancelled the call to get suggestion. Usually that's because of time out </param>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.ITelemetryClient.OnGetSuggestionError(System.Exception)">
            <summary>
            Collects when an exception is thrown when we return a suggestion.
            </summary>
            <param name="e">The exception</param>
        </member>
        <member name="T:Microsoft.Azure.PowerShell.Tools.AzPredictor.ParameterSet">
            <summary>
            Treating parameter lists as sets of parameters to show that parameter order
            does not matter to resulting prediction - the prediction should adapt to the
            order of the parameters typed by the user.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.PowerShell.Tools.AzPredictor.ParameterValuePredictor">
            <summary>
            A predictor to learn and provide values for Azure PowerShell commands' parameters values.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.PowerShell.Tools.AzPredictor.ParameterValuePredictor._specialLocalParameterNames">
            <summary>
            The collections of the parameter names that is used directly as the key in local parameter collection.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.ParameterValuePredictor.ProcessHistoryCommand(System.Management.Automation.Language.CommandAst)">
            <summary>
            Process the command from history
            </summary>
            <param name="command"></param>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.ParameterValuePredictor.GetParameterValueFromAzCommand(System.String)">
            <summary>
            Gets the parameter value prediction from the previous Azure PowerShell command.
            e.g. history command line
            > New-AzVM -Name "TestVM" ...
            prediction:
            > Get-AzVM -VMName &lt;TestVM&gt;
            "TestVM" is predicted for Get-AzVM.
            </summary>
            <param name="parameterName">The parameter name</param>
            <returns>The parameter value from the history command. Null if that is not available.</returns>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.ParameterValuePredictor.GetLocalParameterKey(System.String,System.String)">
            <summary>
            Gets the key to the local parameter dictionary from the command noun and the parameter name.
            </summary>
            <param name="commandNoun">The noun in the PowerShell command, e.g. the noun for command New-AzVM is VM.</param>
            <param name="parameterName">The command's parameter name, e.g. "New-AzVM -Name" the parameter name is Name</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.ParameterValuePredictor.ExtractLocalParameters(System.Collections.ObjectModel.ReadOnlyCollection{System.Management.Automation.Language.CommandElementAst})">
             <summary>
             Iterate over command elements to extract local parameter values.
            
             Store these values by a key
             consisting of the suffix of the command + the parameter name.  There are some exceptions, e.g.
             credential, location, where the parameter name itself is the key.
            
             For example, New-AzResourceGroup -Name Hello -Location 'EastUS' will store into local parameters:
               ResourceGroupName => Hello
               Location => 'EastUS'
             </summary>
             <param name="command">The command ast elements</param>
        </member>
        <member name="T:Microsoft.Azure.PowerShell.Tools.AzPredictor.Prediction">
            <summary>
            A prediction candidate consists of the command name and list of parameter sets,
            where each parameter set is a set of parameters (order independent) that go along with the command.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.PowerShell.Tools.AzPredictor.Prediction.Command">
            <summary>
            Gets the command name
            </summary>
        </member>
        <member name="P:Microsoft.Azure.PowerShell.Tools.AzPredictor.Prediction.ParameterSets">
            <summary>
            Gets the list of <see cref="T:Microsoft.Azure.PowerShell.Tools.AzPredictor.ParameterSet"/>
            </summary>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.Prediction.#ctor(System.String,Microsoft.Azure.PowerShell.Tools.AzPredictor.ParameterSet)">
            <summary>
            Create a new instance of <see cref="T:Microsoft.Azure.PowerShell.Tools.AzPredictor.Prediction"/> with the command and parameter set.
            </summary>
            <param name="command">The command name</param>
            <param name="parameters">The parameter set</param>
        </member>
        <member name="T:Microsoft.Azure.PowerShell.Tools.AzPredictor.PredictionSource">
            <summary>
            An enum for the source where we get the prediction.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.PowerShell.Tools.AzPredictor.PredictionSource.None">
            <summary>
            There is no predictions.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.PowerShell.Tools.AzPredictor.PredictionSource.StaticCommands">
            <summary>
            The prediction is from the static command list.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.PowerShell.Tools.AzPredictor.PredictionSource.PreviousCommand">
            <summary>
            The prediction is from the list for the older command.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.PowerShell.Tools.AzPredictor.PredictionSource.CurrentCommand">
            <summary>
            The prediction is from the list for the currentc command.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.PowerShell.Tools.AzPredictor.Predictor">
            <summary>
            Caches predictions from Aladdin service, queries user input, e.g. "Connec" and returns autocompleted version, or null.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.Predictor.#ctor(System.Collections.Generic.IList{System.String},Microsoft.Azure.PowerShell.Tools.AzPredictor.ParameterValuePredictor)">
            <summary>
            Predictor must be initialized with a list of string suggestions.
            </summary>
            <param name="modelPredictions">List of suggestions from the model, sorted by frequency (most to least)</param>
            <param name="parameterValuePredictor">Provide the prediction to the parameter values.</param>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.Predictor.Query(System.Management.Automation.Language.Ast,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Given a user input PowerShell AST, returns prediction text.
            </summary>
            <param name="input">PowerShell AST input of the user, generated by PSReadLine</param>
            <param name="suggestionCount">The number of suggestion to return.</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The collection of suggestions. The key is the predicted text adjusted based on <paramref name="input"/>. The
            value is the original text to create the adjusted text. </returns>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.Predictor.PredictRestOfParameters(System.Text.StringBuilder,System.Collections.Generic.IList{System.Tuple{System.String,System.String}},System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Appends unused parameters to the builder.
            </summary>
            <param name="builder">StringBuilder that aggregates the prediction text output</param>
            <param name="parameters">Chosen prediction parameters.</param>
            <param name="usedParams">Set of used parameters for set.</param>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.Predictor.DoesPredictionParameterSetMatchInput(System.Text.StringBuilder,Microsoft.Azure.PowerShell.Tools.AzPredictor.ParameterSet,Microsoft.Azure.PowerShell.Tools.AzPredictor.ParameterSet,System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Determines if parameter set contains all of the parameters of the input.
            </summary>
            <param name="builder">StringBuilder that aggregates the prediction text output</param>
            <param name="inputParameters">Parsed ParameterSet from the user input AST</param>
            <param name="predictionParameters">Candidate prediction parameter set.</param>
            <param name="usedParams">Set of used parameters for set.</param>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.Predictor.BuildParameterValue(System.Text.StringBuilder,System.Tuple{System.String,System.String})">
             <summary>
             Create the parameter values from the history commandlines.
            
             For example:
             history command line
             > New-AzVM -Name "TestVM" ...
             prediction:
             > Get-AzVM -VMName &lt;TestVM&gt;
             "TestVM" is predicted for Get-AzVM.
             </summary>
             <param name="builder">The string builder to create the whole predicted command line.</param>
             <param name="parameter">The parameter name and vlaue from prediction</param>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.Predictor.FindParameterPositionInSet(System.Tuple{System.String,System.String},Microsoft.Azure.PowerShell.Tools.AzPredictor.ParameterSet,System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Determines the index of the given parameter in the parameter set.
            </summary>
            <param name="parameter">A tuple, parameter AST, and argument AST (or null), representing the parameter.</param>
            <param name="predictionSet">Prediction parameter setto find parameter position in.</param>
            <param name="usedParams">Set of used parameters for set.</param>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.Predictor.EscapePredictionText(System.String)">
            <summary>
            Escaping the prediction text is necessary because KnowledgeBase predicted suggestions
            such as "&lt;PSSubnetConfig&gt;" are incorrectly identified as pipe operators
            </summary>
            <param name="text">The text to escape.</param>
        </member>
        <member name="T:Microsoft.Azure.PowerShell.Tools.AzPredictor.Profile.AzurePSDataCollectionProfile">
            <summary>
            The profile about data collection in Azure PowerShell
            </summary>
        </member>
        <member name="P:Microsoft.Azure.PowerShell.Tools.AzPredictor.Profile.AzurePSDataCollectionProfile.Instance">
            <summary>
            Gets the singleton for <see cref="T:Microsoft.Azure.PowerShell.Tools.AzPredictor.Profile.AzurePSDataCollectionProfile"/>
            </summary>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.Profile.AzurePSDataCollectionProfile.#ctor">
            <summary>
            Gets an instance of <see cref="T:Microsoft.Azure.PowerShell.Tools.AzPredictor.Profile.AzurePSDataCollectionProfile"/>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.PowerShell.Tools.AzPredictor.Profile.AzurePSDataCollectionProfile.EnableAzureDataCollection">
            <summary>
            Gets if the data collection is enabled.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.PowerShell.Tools.AzPredictor.Settings">
            <summary>
            Represents the settings used in AzPredictor.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.PowerShell.Tools.AzPredictor.Settings.ServiceUri">
            <summary>
            The service to get the prediction results back.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.PowerShell.Tools.AzPredictor.Settings.SuggestionCount">
            <summary>
            The number of suggestions to return to PSReadLine
            </summary>
        </member>
        <member name="P:Microsoft.Azure.PowerShell.Tools.AzPredictor.Settings.ContinueOnTimeout">
            <summary>
            Gets the value to indicate whether to ignore cancellation request and keep running.
            This should be only set during debugging.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.PowerShell.Tools.AzPredictor.Settings.GetSettings">
            <summary>
            Gets an instance of the settings.
            </summary>
        </member>
    </members>
</doc>
