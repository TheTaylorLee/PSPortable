#
# Script module for module 'Az.Sql' that is executed when 'Az.Sql' is imported in a PowerShell session.
#
# Generated by: Microsoft Corporation
#
# Generated on: 04/16/2020 07:31:52
#

$PSDefaultParameterValues.Clear()
Set-StrictMode -Version Latest

function Test-DotNet
{
    try
    {
        if ((Get-PSDrive 'HKLM' -ErrorAction Ignore) -and (-not (Get-ChildItem 'HKLM:\SOFTWARE\Microsoft\NET Framework Setup\NDP\v4\Full\' -ErrorAction Stop | Get-ItemPropertyValue -ErrorAction Stop -Name Release | Where-Object { $_ -ge 461808 })))
        {
            throw ".NET Framework versions lower than 4.7.2 are not supported in Az.  Please upgrade to .NET Framework 4.7.2 or higher."
        }
    }
    catch [System.Management.Automation.DriveNotFoundException]
    {
        Write-Verbose ".NET Framework version check failed."
    }
}

if ($true -and ($PSEdition -eq 'Desktop'))
{
    if ($PSVersionTable.PSVersion -lt [Version]'5.1')
    {
        throw "PowerShell versions lower than 5.1 are not supported in Az. Please upgrade to PowerShell 5.1 or higher."
    }

    Test-DotNet
}



if (Test-Path -Path "$PSScriptRoot\StartupScripts" -ErrorAction Ignore)
{
    Get-ChildItem "$PSScriptRoot\StartupScripts" -ErrorAction Stop | ForEach-Object {
        . $_.FullName
    }
}

if (Get-Module AzureRM.profile -ErrorAction Ignore)
{
    Write-Warning ("AzureRM.Profile already loaded. Az and AzureRM modules cannot be imported in the same session or used in the same script or runbook. If you are running PowerShell in an environment you control you can use the 'Uninstall-AzureRm' cmdlet to remove all AzureRm modules from your machine. " +
        "If you are running in Azure Automation, take care that none of your runbooks import both Az and AzureRM modules. More information can be found here: https://aka.ms/azps-migration-guide.")
    throw ("AzureRM.Profile already loaded. Az and AzureRM modules cannot be imported in the same session or used in the same script or runbook. If you are running PowerShell in an environment you control you can use the 'Uninstall-AzureRm' cmdlet to remove all AzureRm modules from your machine. " +
        "If you are running in Azure Automation, take care that none of your runbooks import both Az and AzureRM modules. More information can be found here: https://aka.ms/azps-migration-guide.")
}

$preloadPath = (Join-Path $PSScriptRoot -ChildPath "PreloadAssemblies")
if($PSEdition -eq 'Desktop' -and (Test-Path $preloadPath -ErrorAction Ignore))
{
    try
    {
        Get-ChildItem -ErrorAction Stop -Path $preloadPath -Filter "*.dll" | ForEach-Object {
            try
            {
                Add-Type -Path $_.FullName -ErrorAction Ignore | Out-Null
            }
            catch {
                Write-Verbose $_
            }
        }
    }
    catch {}
}

$netCorePath = (Join-Path $PSScriptRoot -ChildPath "NetCoreAssemblies")
if($PSEdition -eq 'Core' -and (Test-Path $netCorePath -ErrorAction Ignore))
{
    try
    {
        $loadedAssemblies = ([System.AppDomain]::CurrentDomain.GetAssemblies() | ForEach-Object {New-Object -TypeName System.Reflection.AssemblyName -ArgumentList $_.FullName} )
        Get-ChildItem -ErrorAction Stop -Path $netCorePath -Filter "*.dll" | ForEach-Object {
            $assemblyName = ([System.Reflection.AssemblyName]::GetAssemblyName($_.FullName))
            $matches = ($loadedAssemblies | Where-Object {$_.Name -eq $assemblyName.Name})
            if (-not $matches)
            {
                try
                {
                    Add-Type -Path $_.FullName -ErrorAction Ignore | Out-Null
                }
                catch {
                    Write-Verbose $_
                }
            }
        }
    }
    catch {}
}


$module = Get-Module Az.Accounts 
if ($module -ne $null -and $module.Version.ToString().CompareTo("1.7.5") -lt 0) 
{ 
    Write-Error "This module requires Az.Accounts version 1.7.5. An earlier version of Az.Accounts is imported in the current PowerShell session. Please open a new session before importing this module. This error could indicate that multiple incompatible versions of the Azure PowerShell cmdlets are installed on your system. Please see https://aka.ms/azps-version-error for troubleshooting information." -ErrorAction Stop 
} 
elseif ($module -eq $null) 
{ 
    Import-Module Az.Accounts -MinimumVersion 1.7.5 -Scope Global 
}
Import-Module (Join-Path -Path $PSScriptRoot -ChildPath Microsoft.Azure.PowerShell.Cmdlets.Sql.dll)


if (Test-Path -Path "$PSScriptRoot\PostImportScripts" -ErrorAction Ignore)
{
    Get-ChildItem "$PSScriptRoot\PostImportScripts" -ErrorAction Stop | ForEach-Object {
        . $_.FullName
    }
}

$FilteredCommands = @('Clear-AzSqlDatabaseVulnerabilityAssessmentSetting:ResourceGroupName','Get-AzSqlDatabaseVulnerabilityAssessmentSetting:ResourceGroupName','Update-AzSqlDatabaseVulnerabilityAssessmentSetting:ResourceGroupName','Clear-AzSqlInstanceDatabaseVulnerabilityAssessmentSetting:ResourceGroupName','Get-AzSqlInstanceDatabaseVulnerabilityAssessmentSetting:ResourceGroupName','Update-AzSqlInstanceDatabaseVulnerabilityAssessmentSetting:ResourceGroupName','Convert-AzSqlDatabaseVulnerabilityAssessmentScan:ResourceGroupName','Get-AzSqlDatabaseVulnerabilityAssessmentScanRecord:ResourceGroupName','Start-AzSqlDatabaseVulnerabilityAssessmentScan:ResourceGroupName','Convert-AzSqlInstanceDatabaseVulnerabilityAssessmentScan:ResourceGroupName','Get-AzSqlInstanceDatabaseVulnerabilityAssessmentScanRecord:ResourceGroupName','Start-AzSqlInstanceDatabaseVulnerabilityAssessmentScan:ResourceGroupName','Clear-AzSqlDatabaseVulnerabilityAssessmentRuleBaseline:ResourceGroupName','Get-AzSqlDatabaseVulnerabilityAssessmentRuleBaseline:ResourceGroupName','Set-AzSqlDatabaseVulnerabilityAssessmentRuleBaseline:ResourceGroupName','Clear-AzSqlInstanceDatabaseVulnerabilityAssessmentRuleBaseline:ResourceGroupName','Get-AzSqlInstanceDatabaseVulnerabilityAssessmentRuleBaseline:ResourceGroupName','Set-AzSqlInstanceDatabaseVulnerabilityAssessmentRuleBaseline:ResourceGroupName','Get-AzSqlServerVirtualNetworkRule:ResourceGroupName','New-AzSqlServerVirtualNetworkRule:ResourceGroupName','Remove-AzSqlServerVirtualNetworkRule:ResourceGroupName','Set-AzSqlServerVirtualNetworkRule:ResourceGroupName','Get-AzSqlDatabaseTransparentDataEncryption:ResourceGroupName','Get-AzSqlDatabaseTransparentDataEncryptionActivity:ResourceGroupName','Get-AzSqlServerTransparentDataEncryptionProtector:ResourceGroupName','Set-AzSqlDatabaseTransparentDataEncryption:ResourceGroupName','Set-AzSqlServerTransparentDataEncryptionProtector:ResourceGroupName','Get-AzSqlDatabaseAdvancedThreatProtectionSetting:ResourceGroupName','Get-AzSqlServerAdvancedThreatProtectionSetting:ResourceGroupName','Clear-AzSqlDatabaseAdvancedThreatProtectionSetting:ResourceGroupName','Clear-AzSqlServerAdvancedThreatProtectionSetting:ResourceGroupName','Update-AzSqlDatabaseAdvancedThreatProtectionSetting:ResourceGroupName','Update-AzSqlServerAdvancedThreatProtectionSetting:ResourceGroupName','Get-AzSqlDatabaseUpgradeHint:ResourceGroupName','Get-AzSqlServerUpgradeHint:ResourceGroupName','New-AzSqlServer:ResourceGroupName','Remove-AzSqlServer:ResourceGroupName','Set-AzSqlServer:ResourceGroupName','Add-AzSqlServerKeyVaultKey:ResourceGroupName','Get-AzSqlServerKeyVaultKey:ResourceGroupName','Remove-AzSqlServerKeyVaultKey:ResourceGroupName','Get-AzSqlServerDnsAlias:ResourceGroupName','New-AzSqlServerDnsAlias:ResourceGroupName','Set-AzSqlServerDnsAlias:ResourceGroupName','Get-AzSqlServerDisasterRecoveryConfiguration:ResourceGroupName','Get-AzSqlServerDisasterRecoveryConfigurationActivity:ResourceGroupName','New-AzSqlServerDisasterRecoveryConfiguration:ResourceGroupName','Remove-AzSqlServerDisasterRecoveryConfiguration:ResourceGroupName','Set-AzSqlServerDisasterRecoveryConfiguration:ResourceGroupName','Get-AzSqlServerCommunicationLink:ResourceGroupName','New-AzSqlServerCommunicationLink:ResourceGroupName','Remove-AzSqlServerCommunicationLink:ResourceGroupName','Disable-AzSqlServerActiveDirectoryOnlyAuthentication:ResourceGroupName','Get-AzSqlServerActiveDirectoryAdministrator:ResourceGroupName','Remove-AzSqlServerActiveDirectoryAdministrator:ResourceGroupName','Set-AzSqlServerActiveDirectoryAdministrator:ResourceGroupName','Get-AzSqlDatabaseReplicationLink:ResourceGroupName','New-AzSqlDatabaseCopy:ResourceGroupName','New-AzSqlDatabaseSecondary:ResourceGroupName','Remove-AzSqlDatabaseSecondary:ResourceGroupName','Set-AzSqlDatabaseSecondary:ResourceGroupName','Get-AzSqlElasticPoolRecommendation:ResourceGroupName','Get-AzSqlDatabaseRecommendedAction:ResourceGroupName','Get-AzSqlElasticPoolRecommendedAction:ResourceGroupName','Get-AzSqlServerRecommendedAction:ResourceGroupName','Set-AzSqlDatabaseRecommendedActionState:ResourceGroupName','Set-AzSqlElasticPoolRecommendedActionState:ResourceGroupName','Set-AzSqlServerRecommendedActionState:ResourceGroupName','Get-AzSqlDeletedInstanceDatabaseBackup:ResourceGroupName','Get-AzSqlInstanceDatabaseBackupLongTermRetentionPolicy:ResourceGroupName','Set-AzSqlInstanceDatabaseBackupLongTermRetentionPolicy:ResourceGroupName','New-AzSqlInstancePool:ResourceGroupName','Get-AzSqlDatabaseInstanceFailoverGroup:ResourceGroupName','New-AzSqlDatabaseInstanceFailoverGroup:ResourceGroupName','Get-AzSqlDatabaseIndexRecommendation:ResourceGroupName','Start-AzSqlDatabaseExecuteIndexRecommendation:ResourceGroupName','Stop-AzSqlDatabaseExecuteIndexRecommendation:ResourceGroupName','New-AzSqlDatabaseExport:ResourceGroupName','New-AzSqlDatabaseImport:ResourceGroupName','Get-AzSqlServerFirewallRule:ResourceGroupName','New-AzSqlServerFirewallRule:ResourceGroupName','Remove-AzSqlServerFirewallRule:ResourceGroupName','Set-AzSqlServerFirewallRule:ResourceGroupName','Add-AzSqlDatabaseToFailoverGroup:ResourceGroupName','Get-AzSqlDatabaseFailoverGroup:ResourceGroupName','New-AzSqlDatabaseFailoverGroup:ResourceGroupName','Remove-AzSqlDatabaseFromFailoverGroup:ResourceGroupName','Remove-AzSqlDatabaseFailoverGroup:ResourceGroupName','Set-AzSqlDatabaseFailoverGroup:ResourceGroupName','Switch-AzSqlDatabaseFailoverGroup:ResourceGroupName','Get-AzSqlElasticPool:ResourceGroupName','Get-AzSqlElasticPoolActivity:ResourceGroupName','Get-AzSqlElasticPoolDatabase:ResourceGroupName','Invoke-AzSqlElasticPoolFailover:ResourceGroupName','New-AzSqlElasticPool:ResourceGroupName','Remove-AzSqlElasticPool:ResourceGroupName','Set-AzSqlElasticPool:ResourceGroupName','Stop-AzSqlElasticPoolActivity:ResourceGroupName','Get-AzSqlDatabase:ResourceGroupName','Get-AzSqlDatabaseActivity:ResourceGroupName','Get-AzSqlDatabaseExpanded:ResourceGroupName','Invoke-AzSqlDatabaseFailover:ResourceGroupName','New-AzSqlDatabase:ResourceGroupName','Remove-AzSqlDatabase:ResourceGroupName','Set-AzSqlDatabase:ResourceGroupName','Stop-AzSqlDatabaseActivity:ResourceGroupName','Get-AzSqlDatabaseGeoBackup:ResourceGroupName','Get-AzSqlDeletedDatabaseBackup:ResourceGroupName','Get-AzSqlDatabaseBackupLongTermRetentionPolicy:ResourceGroupName','Get-AzSqlDatabaseGeoBackupPolicy:ResourceGroupName','Get-AzSqlDatabaseRestorePoint:ResourceGroupName','New-AzSqlDatabaseRestorePoint:ResourceGroupName','Remove-AzSqlDatabaseRestorePoint:ResourceGroupName','Restore-AzSqlDatabase:ResourceGroupName','Set-AzSqlDatabaseBackupLongTermRetentionPolicy:ResourceGroupName','Set-AzSqlDatabaseGeoBackupPolicy:ResourceGroupName','Resume-AzSqlDatabase:ResourceGroupName','Suspend-AzSqlDatabase:ResourceGroupName','Get-AzSqlSyncAgent:ResourceGroupName','Get-AzSqlSyncAgentLinkedDatabase:ResourceGroupName','Get-AzSqlSyncGroup:ResourceGroupName','Get-AzSqlSyncGroupLog:ResourceGroupName','Get-AzSqlSyncMember:ResourceGroupName','Get-AzSqlSyncSchema:ResourceGroupName','New-AzSqlSyncAgent:ResourceGroupName','New-AzSqlSyncAgentKey:ResourceGroupName','New-AzSqlSyncGroup:ResourceGroupName','New-AzSqlSyncMember:ResourceGroupName','Remove-AzSqlSyncAgent:ResourceGroupName','Remove-AzSqlSyncGroup:ResourceGroupName','Remove-AzSqlSyncMember:ResourceGroupName','Start-AzSqlSyncGroupSync:ResourceGroupName','Stop-AzSqlSyncGroupSync:ResourceGroupName','Update-AzSqlSyncGroup:ResourceGroupName','Update-AzSqlSyncMember:ResourceGroupName','Update-AzSqlSyncSchema:ResourceGroupName','Get-AzSqlDatabaseDataMaskingPolicy:ResourceGroupName','Get-AzSqlDatabaseDataMaskingRule:ResourceGroupName','New-AzSqlDatabaseDataMaskingRule:ResourceGroupName','Remove-AzSqlDatabaseDataMaskingRule:ResourceGroupName','Set-AzSqlDatabaseDataMaskingPolicy:ResourceGroupName','Set-AzSqlDatabaseDataMaskingRule:ResourceGroupName','Get-AzSqlDatabaseAdvisor:ResourceGroupName','Get-AzSqlElasticPoolAdvisor:ResourceGroupName','Get-AzSqlServerAdvisor:ResourceGroupName','Set-AzSqlDatabaseAdvisorAutoExecuteStatus:ResourceGroupName','Set-AzSqlElasticPoolAdvisorAutoExecuteStatus:ResourceGroupName','Set-AzSqlServerAdvisorAutoExecuteStatus:ResourceGroupName','Disable-AzSqlInstanceAdvancedDataSecurity:ResourceGroupName','Disable-AzSqlServerAdvancedDataSecurity:ResourceGroupName','Enable-AzSqlInstanceAdvancedDataSecurity:ResourceGroupName','Enable-AzSqlServerAdvancedDataSecurity:ResourceGroupName','Get-AzSqlInstanceAdvancedDataSecurityPolicy:ResourceGroupName','Get-AzSqlServerAdvancedDataSecurityPolicy:ResourceGroupName')

if ($Env:ACC_CLOUD -eq $null)
{
    $FilteredCommands | ForEach-Object {

        $existingDefault = $false
        foreach ($key in $global:PSDefaultParameterValues.Keys)
        {
    	    if ($_ -like "$key")
    	        {
        	    $existingDefault = $true
    	        }
	    }

        if (!$existingDefault)
        {
            $global:PSDefaultParameterValues.Add($_,
                {
                    if ((Get-Command Get-AzContext -ErrorAction Ignore) -eq $null)
                    {
                        $context = Get-AzureRmContext
                    }
                    else
                    {
                        $context = Get-AzContext
                    }
                    if (($context -ne $null) -and $context.ExtendedProperties.ContainsKey("Default Resource Group")) {
                        $context.ExtendedProperties["Default Resource Group"]
                    }
                })
        }
    }
}

# SIG # Begin signature block
# MIIkWwYJKoZIhvcNAQcCoIIkTDCCJEgCAQExDzANBglghkgBZQMEAgEFADB5Bgor
# BgEEAYI3AgEEoGswaTA0BgorBgEEAYI3AgEeMCYCAwEAAAQQH8w7YFlLCE63JNLG
# KX7zUQIBAAIBAAIBAAIBAAIBADAxMA0GCWCGSAFlAwQCAQUABCAzLiY3LP4Pv5vk
# h2iSs7wNhLOT7I2la1hPS2XphczbdqCCDYEwggX/MIID56ADAgECAhMzAAABUZ6N
# j0Bxow5BAAAAAAFRMA0GCSqGSIb3DQEBCwUAMH4xCzAJBgNVBAYTAlVTMRMwEQYD
# VQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNy
# b3NvZnQgQ29ycG9yYXRpb24xKDAmBgNVBAMTH01pY3Jvc29mdCBDb2RlIFNpZ25p
# bmcgUENBIDIwMTEwHhcNMTkwNTAyMjEzNzQ2WhcNMjAwNTAyMjEzNzQ2WjB0MQsw
# CQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9u
# ZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMR4wHAYDVQQDExVNaWNy
# b3NvZnQgQ29ycG9yYXRpb24wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB
# AQCVWsaGaUcdNB7xVcNmdfZiVBhYFGcn8KMqxgNIvOZWNH9JYQLuhHhmJ5RWISy1
# oey3zTuxqLbkHAdmbeU8NFMo49Pv71MgIS9IG/EtqwOH7upan+lIq6NOcw5fO6Os
# +12R0Q28MzGn+3y7F2mKDnopVu0sEufy453gxz16M8bAw4+QXuv7+fR9WzRJ2CpU
# 62wQKYiFQMfew6Vh5fuPoXloN3k6+Qlz7zgcT4YRmxzx7jMVpP/uvK6sZcBxQ3Wg
# B/WkyXHgxaY19IAzLq2QiPiX2YryiR5EsYBq35BP7U15DlZtpSs2wIYTkkDBxhPJ
# IDJgowZu5GyhHdqrst3OjkSRAgMBAAGjggF+MIIBejAfBgNVHSUEGDAWBgorBgEE
# AYI3TAgBBggrBgEFBQcDAzAdBgNVHQ4EFgQUV4Iarkq57esagu6FUBb270Zijc8w
# UAYDVR0RBEkwR6RFMEMxKTAnBgNVBAsTIE1pY3Jvc29mdCBPcGVyYXRpb25zIFB1
# ZXJ0byBSaWNvMRYwFAYDVQQFEw0yMzAwMTIrNDU0MTM1MB8GA1UdIwQYMBaAFEhu
# ZOVQBdOCqhc3NyK1bajKdQKVMFQGA1UdHwRNMEswSaBHoEWGQ2h0dHA6Ly93d3cu
# bWljcm9zb2Z0LmNvbS9wa2lvcHMvY3JsL01pY0NvZFNpZ1BDQTIwMTFfMjAxMS0w
# Ny0wOC5jcmwwYQYIKwYBBQUHAQEEVTBTMFEGCCsGAQUFBzAChkVodHRwOi8vd3d3
# Lm1pY3Jvc29mdC5jb20vcGtpb3BzL2NlcnRzL01pY0NvZFNpZ1BDQTIwMTFfMjAx
# MS0wNy0wOC5jcnQwDAYDVR0TAQH/BAIwADANBgkqhkiG9w0BAQsFAAOCAgEAWg+A
# rS4Anq7KrogslIQnoMHSXUPr/RqOIhJX+32ObuY3MFvdlRElbSsSJxrRy/OCCZdS
# se+f2AqQ+F/2aYwBDmUQbeMB8n0pYLZnOPifqe78RBH2fVZsvXxyfizbHubWWoUf
# NW/FJlZlLXwJmF3BoL8E2p09K3hagwz/otcKtQ1+Q4+DaOYXWleqJrJUsnHs9UiL
# crVF0leL/Q1V5bshob2OTlZq0qzSdrMDLWdhyrUOxnZ+ojZ7UdTY4VnCuogbZ9Zs
# 9syJbg7ZUS9SVgYkowRsWv5jV4lbqTD+tG4FzhOwcRQwdb6A8zp2Nnd+s7VdCuYF
# sGgI41ucD8oxVfcAMjF9YX5N2s4mltkqnUe3/htVrnxKKDAwSYliaux2L7gKw+bD
# 1kEZ/5ozLRnJ3jjDkomTrPctokY/KaZ1qub0NUnmOKH+3xUK/plWJK8BOQYuU7gK
# YH7Yy9WSKNlP7pKj6i417+3Na/frInjnBkKRCJ/eYTvBH+s5guezpfQWtU4bNo/j
# 8Qw2vpTQ9w7flhH78Rmwd319+YTmhv7TcxDbWlyteaj4RK2wk3pY1oSz2JPE5PNu
# Nmd9Gmf6oePZgy7Ii9JLLq8SnULV7b+IP0UXRY9q+GdRjM2AEX6msZvvPCIoG0aY
# HQu9wZsKEK2jqvWi8/xdeeeSI9FN6K1w4oVQM4Mwggd6MIIFYqADAgECAgphDpDS
# AAAAAAADMA0GCSqGSIb3DQEBCwUAMIGIMQswCQYDVQQGEwJVUzETMBEGA1UECBMK
# V2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0
# IENvcnBvcmF0aW9uMTIwMAYDVQQDEylNaWNyb3NvZnQgUm9vdCBDZXJ0aWZpY2F0
# ZSBBdXRob3JpdHkgMjAxMTAeFw0xMTA3MDgyMDU5MDlaFw0yNjA3MDgyMTA5MDla
# MH4xCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdS
# ZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xKDAmBgNVBAMT
# H01pY3Jvc29mdCBDb2RlIFNpZ25pbmcgUENBIDIwMTEwggIiMA0GCSqGSIb3DQEB
# AQUAA4ICDwAwggIKAoICAQCr8PpyEBwurdhuqoIQTTS68rZYIZ9CGypr6VpQqrgG
# OBoESbp/wwwe3TdrxhLYC/A4wpkGsMg51QEUMULTiQ15ZId+lGAkbK+eSZzpaF7S
# 35tTsgosw6/ZqSuuegmv15ZZymAaBelmdugyUiYSL+erCFDPs0S3XdjELgN1q2jz
# y23zOlyhFvRGuuA4ZKxuZDV4pqBjDy3TQJP4494HDdVceaVJKecNvqATd76UPe/7
# 4ytaEB9NViiienLgEjq3SV7Y7e1DkYPZe7J7hhvZPrGMXeiJT4Qa8qEvWeSQOy2u
# M1jFtz7+MtOzAz2xsq+SOH7SnYAs9U5WkSE1JcM5bmR/U7qcD60ZI4TL9LoDho33
# X/DQUr+MlIe8wCF0JV8YKLbMJyg4JZg5SjbPfLGSrhwjp6lm7GEfauEoSZ1fiOIl
# XdMhSz5SxLVXPyQD8NF6Wy/VI+NwXQ9RRnez+ADhvKwCgl/bwBWzvRvUVUvnOaEP
# 6SNJvBi4RHxF5MHDcnrgcuck379GmcXvwhxX24ON7E1JMKerjt/sW5+v/N2wZuLB
# l4F77dbtS+dJKacTKKanfWeA5opieF+yL4TXV5xcv3coKPHtbcMojyyPQDdPweGF
# RInECUzF1KVDL3SV9274eCBYLBNdYJWaPk8zhNqwiBfenk70lrC8RqBsmNLg1oiM
# CwIDAQABo4IB7TCCAekwEAYJKwYBBAGCNxUBBAMCAQAwHQYDVR0OBBYEFEhuZOVQ
# BdOCqhc3NyK1bajKdQKVMBkGCSsGAQQBgjcUAgQMHgoAUwB1AGIAQwBBMAsGA1Ud
# DwQEAwIBhjAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFHItOgIxkEO5FAVO
# 4eqnxzHRI4k0MFoGA1UdHwRTMFEwT6BNoEuGSWh0dHA6Ly9jcmwubWljcm9zb2Z0
# LmNvbS9wa2kvY3JsL3Byb2R1Y3RzL01pY1Jvb0NlckF1dDIwMTFfMjAxMV8wM18y
# Mi5jcmwwXgYIKwYBBQUHAQEEUjBQME4GCCsGAQUFBzAChkJodHRwOi8vd3d3Lm1p
# Y3Jvc29mdC5jb20vcGtpL2NlcnRzL01pY1Jvb0NlckF1dDIwMTFfMjAxMV8wM18y
# Mi5jcnQwgZ8GA1UdIASBlzCBlDCBkQYJKwYBBAGCNy4DMIGDMD8GCCsGAQUFBwIB
# FjNodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vcGtpb3BzL2RvY3MvcHJpbWFyeWNw
# cy5odG0wQAYIKwYBBQUHAgIwNB4yIB0ATABlAGcAYQBsAF8AcABvAGwAaQBjAHkA
# XwBzAHQAYQB0AGUAbQBlAG4AdAAuIB0wDQYJKoZIhvcNAQELBQADggIBAGfyhqWY
# 4FR5Gi7T2HRnIpsLlhHhY5KZQpZ90nkMkMFlXy4sPvjDctFtg/6+P+gKyju/R6mj
# 82nbY78iNaWXXWWEkH2LRlBV2AySfNIaSxzzPEKLUtCw/WvjPgcuKZvmPRul1LUd
# d5Q54ulkyUQ9eHoj8xN9ppB0g430yyYCRirCihC7pKkFDJvtaPpoLpWgKj8qa1hJ
# Yx8JaW5amJbkg/TAj/NGK978O9C9Ne9uJa7lryft0N3zDq+ZKJeYTQ49C/IIidYf
# wzIY4vDFLc5bnrRJOQrGCsLGra7lstnbFYhRRVg4MnEnGn+x9Cf43iw6IGmYslmJ
# aG5vp7d0w0AFBqYBKig+gj8TTWYLwLNN9eGPfxxvFX1Fp3blQCplo8NdUmKGwx1j
# NpeG39rz+PIWoZon4c2ll9DuXWNB41sHnIc+BncG0QaxdR8UvmFhtfDcxhsEvt9B
# xw4o7t5lL+yX9qFcltgA1qFGvVnzl6UJS0gQmYAf0AApxbGbpT9Fdx41xtKiop96
# eiL6SJUfq/tHI4D1nvi/a7dLl+LrdXga7Oo3mXkYS//WsyNodeav+vyL6wuA6mk7
# r/ww7QRMjt/fdW1jkT3RnVZOT7+AVyKheBEyIXrvQQqxP/uozKRdwaGIm1dxVk5I
# RcBCyZt2WwqASGv9eZ/BvW1taslScxMNelDNMYIWMDCCFiwCAQEwgZUwfjELMAkG
# A1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQx
# HjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEoMCYGA1UEAxMfTWljcm9z
# b2Z0IENvZGUgU2lnbmluZyBQQ0EgMjAxMQITMwAAAVGejY9AcaMOQQAAAAABUTAN
# BglghkgBZQMEAgEFAKCBrjAZBgkqhkiG9w0BCQMxDAYKKwYBBAGCNwIBBDAcBgor
# BgEEAYI3AgELMQ4wDAYKKwYBBAGCNwIBFTAvBgkqhkiG9w0BCQQxIgQgg6KR8B0e
# 5pq2nQU5zK7HD3C4E6rWp+MVR5wrK+ZDwMswQgYKKwYBBAGCNwIBDDE0MDKgFIAS
# AE0AaQBjAHIAbwBzAG8AZgB0oRqAGGh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbTAN
# BgkqhkiG9w0BAQEFAASCAQAabriemjJCzq6/KiqdXiJfF50Vxhn13aA/RsItK2i3
# KiwKIaXJYQ5nbQsZ/3oc6a90mSD2X/qkFn60Dye1ljw6H/MYQdu7UikQS6CyhOqp
# oFbJg/gDfKchn33JChPVBRhsDG8+BCosL7ycfI0Iejt+wJPmTuL2Q+hyM1+psXG6
# 9QTUv0UVpgjZWQO9KpKmfyl5q7QNPkNg4tJFg6pVgJRC1GdXgCEyzbIVSPt36riS
# PsAUbpXdvo3KnB99am4TAFExqhR2qWDEoC0VqqPdYhMom8RVIUMvt/DeIWgQ0snH
# uXso5x0qOPLiMgU4LbsfiZ1+DtpJ4B16KyXab1fgtz/doYITujCCE7YGCisGAQQB
# gjcDAwExghOmMIITogYJKoZIhvcNAQcCoIITkzCCE48CAQMxDzANBglghkgBZQME
# AgEFADCCAVgGCyqGSIb3DQEJEAEEoIIBRwSCAUMwggE/AgEBBgorBgEEAYRZCgMB
# MDEwDQYJYIZIAWUDBAIBBQAEIIZ9CE0okRVOcwCpBQgE7lN656vKPK6CH+xbvplS
# 8pzjAgZeejujDd8YEzIwMjAwNDE2MDc0MjE4LjcwMVowBwIBAYACAfSggdSkgdEw
# gc4xCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdS
# ZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xKTAnBgNVBAsT
# IE1pY3Jvc29mdCBPcGVyYXRpb25zIFB1ZXJ0byBSaWNvMSYwJAYDVQQLEx1UaGFs
# ZXMgVFNTIEVTTjo1ODQ3LUY3NjEtNEY3MDElMCMGA1UEAxMcTWljcm9zb2Z0IFRp
# bWUtU3RhbXAgU2VydmljZaCCDyIwggT1MIID3aADAgECAhMzAAABBQc56lnzVb8q
# AAAAAAEFMA0GCSqGSIb3DQEBCwUAMHwxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpX
# YXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQg
# Q29ycG9yYXRpb24xJjAkBgNVBAMTHU1pY3Jvc29mdCBUaW1lLVN0YW1wIFBDQSAy
# MDEwMB4XDTE5MDkwNjIwNDExOFoXDTIwMTIwNDIwNDExOFowgc4xCzAJBgNVBAYT
# AlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYD
# VQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xKTAnBgNVBAsTIE1pY3Jvc29mdCBP
# cGVyYXRpb25zIFB1ZXJ0byBSaWNvMSYwJAYDVQQLEx1UaGFsZXMgVFNTIEVTTjo1
# ODQ3LUY3NjEtNEY3MDElMCMGA1UEAxMcTWljcm9zb2Z0IFRpbWUtU3RhbXAgU2Vy
# dmljZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMwilmNVSItZAaoM
# Ustp4Z+Fz1vELCLwdDH6BxoXlnPYah2EzvWjKNqXq6qdEzxAfGPj24oWZj9JYSGV
# X6yjciuYQdUuayR4RBqKjk/FWBRZGb6wEgmlL0aPAqsY9na5vhJPYn1+7kXFt9OY
# nIHYAvpbtZxJQ43y3K7Pb81EAgjpi6iN0xrqaNVdqYvYBLs8GjUZbg9rhds2ERCg
# Dj+yJLgkZtx8DBUwa/ztuEpqkOqlctsOrotsV0sC/tDt5QeIdLh5xxdE0YCemR2E
# c4ruzU70WqlFlixvH9SmRqjKqJB78kVMD7WR5hmxmBpCqA82kZgPnRIMPJBna+03
# HspWBe0CAwEAAaOCARswggEXMB0GA1UdDgQWBBQ9dBv+uncoTMroNg7LcWf9AjM3
# IjAfBgNVHSMEGDAWgBTVYzpcijGQ80N7fEYbxTNoWoVtVTBWBgNVHR8ETzBNMEug
# SaBHhkVodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpL2NybC9wcm9kdWN0cy9N
# aWNUaW1TdGFQQ0FfMjAxMC0wNy0wMS5jcmwwWgYIKwYBBQUHAQEETjBMMEoGCCsG
# AQUFBzAChj5odHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vcGtpL2NlcnRzL01pY1Rp
# bVN0YVBDQV8yMDEwLTA3LTAxLmNydDAMBgNVHRMBAf8EAjAAMBMGA1UdJQQMMAoG
# CCsGAQUFBwMIMA0GCSqGSIb3DQEBCwUAA4IBAQCnzmF3e2sBV+ZUA+Zw4CqczjtN
# tYH1LTJIYb9428h+GBgLRiMIsRmGKJDI55FPCzSUg5Ya/u0zm2vvREbM2jX8LtJB
# p2pDZ1PmxSPsZrosc7Z7Fx3NG9QjB145pW5qPhWmJeeGM8FG7YJU0Zc97V3tnPDt
# 2LzGHYPqihkGOEcuHvIZ/ZkWMGMtwNWOt9ovB3hip58mCDjazwQxShfOxOk+VLQg
# EpZ5f5FsHJw5SFekr2qW8VsFAang364sRXqFobfehU61bCtuG7kXQThQPOwVRpnw
# 4AvIqtpHV0ij5lT7OOmfc1rspSStP/VQVh2dZjChQOb174OYGGp2FSXEiFGfMIIG
# cTCCBFmgAwIBAgIKYQmBKgAAAAAAAjANBgkqhkiG9w0BAQsFADCBiDELMAkGA1UE
# BhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAc
# BgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEyMDAGA1UEAxMpTWljcm9zb2Z0
# IFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDIwMTAwHhcNMTAwNzAxMjEzNjU1
# WhcNMjUwNzAxMjE0NjU1WjB8MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGlu
# Z3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBv
# cmF0aW9uMSYwJAYDVQQDEx1NaWNyb3NvZnQgVGltZS1TdGFtcCBQQ0EgMjAxMDCC
# ASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKkdDbx3EYo6IOz8E5f1+n9p
# lGt0VBDVpQoAgoX77XxoSyxfxcPlYcJ2tz5mK1vwFVMnBDEfQRsalR3OCROOfGEw
# WbEwRA/xYIiEVEMM1024OAizQt2TrNZzMFcmgqNFDdDq9UeBzb8kYDJYYEbyWEeG
# MoQedGFnkV+BVLHPk0ySwcSmXdFhE24oxhr5hoC732H8RsEnHSRnEnIaIYqvS2SJ
# UGKxXf13Hz3wV3WsvYpCTUBR0Q+cBj5nf/VmwAOWRH7v0Ev9buWayrGo8noqCjHw
# 2k4GkbaICDXoeByw6ZnNPOcvRLqn9NxkvaQBwSAJk3jN/LzAyURdXhacAQVPIk0C
# AwEAAaOCAeYwggHiMBAGCSsGAQQBgjcVAQQDAgEAMB0GA1UdDgQWBBTVYzpcijGQ
# 80N7fEYbxTNoWoVtVTAZBgkrBgEEAYI3FAIEDB4KAFMAdQBiAEMAQTALBgNVHQ8E
# BAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAfBgNVHSMEGDAWgBTV9lbLj+iiXGJo0T2U
# kFvXzpoYxDBWBgNVHR8ETzBNMEugSaBHhkVodHRwOi8vY3JsLm1pY3Jvc29mdC5j
# b20vcGtpL2NybC9wcm9kdWN0cy9NaWNSb29DZXJBdXRfMjAxMC0wNi0yMy5jcmww
# WgYIKwYBBQUHAQEETjBMMEoGCCsGAQUFBzAChj5odHRwOi8vd3d3Lm1pY3Jvc29m
# dC5jb20vcGtpL2NlcnRzL01pY1Jvb0NlckF1dF8yMDEwLTA2LTIzLmNydDCBoAYD
# VR0gAQH/BIGVMIGSMIGPBgkrBgEEAYI3LgMwgYEwPQYIKwYBBQUHAgEWMWh0dHA6
# Ly93d3cubWljcm9zb2Z0LmNvbS9QS0kvZG9jcy9DUFMvZGVmYXVsdC5odG0wQAYI
# KwYBBQUHAgIwNB4yIB0ATABlAGcAYQBsAF8AUABvAGwAaQBjAHkAXwBTAHQAYQB0
# AGUAbQBlAG4AdAAuIB0wDQYJKoZIhvcNAQELBQADggIBAAfmiFEN4sbgmD+BcQM9
# naOhIW+z66bM9TG+zwXiqf76V20ZMLPCxWbJat/15/B4vceoniXj+bzta1RXCCtR
# gkQS+7lTjMz0YBKKdsxAQEGb3FwX/1z5Xhc1mCRWS3TvQhDIr79/xn/yN31aPxzy
# mXlKkVIArzgPF/UveYFl2am1a+THzvbKegBvSzBEJCI8z+0DpZaPWSm8tv0E4XCf
# Mkon/VWvL/625Y4zu2JfmttXQOnxzplmkIz/amJ/3cVKC5Em4jnsGUpxY517IW3D
# nKOiPPp/fZZqkHimbdLhnPkd/DjYlPTGpQqWhqS9nhquBEKDuLWAmyI4ILUl5WTs
# 9/S/fmNZJQ96LjlXdqJxqgaKD4kWumGnEcua2A5HmoDF0M2n0O99g/DhO3EJ3110
# mCIIYdqwUB5vvfHhAN/nMQekkzr3ZUd46PioSKv33nJ+YWtvd6mBy6cJrDm77MbL
# 2IK0cs0d9LiFAR6A+xuJKlQ5slvayA1VmXqHczsI5pgt6o3gMy4SKfXAL1QnIffI
# rE7aKLixqduWsqdCosnPGUFN4Ib5KpqjEWYw07t0MkvfY3v1mYovG8chr1m1rtxE
# PJdQcdeh0sVV42neV8HR3jDA/czmTfsNv11P6Z0eGTgvvM9YBS7vDaBQNdrvCScc
# 1bN+NR4Iuto229Nfj950iEkSoYIDsDCCApgCAQEwgf6hgdSkgdEwgc4xCzAJBgNV
# BAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4w
# HAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xKTAnBgNVBAsTIE1pY3Jvc29m
# dCBPcGVyYXRpb25zIFB1ZXJ0byBSaWNvMSYwJAYDVQQLEx1UaGFsZXMgVFNTIEVT
# Tjo1ODQ3LUY3NjEtNEY3MDElMCMGA1UEAxMcTWljcm9zb2Z0IFRpbWUtU3RhbXAg
# U2VydmljZaIlCgEBMAkGBSsOAwIaBQADFQDSeZzsyIfY+vTHfefXdmDhGVX2qqCB
# 3jCB26SB2DCB1TELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAO
# BgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEp
# MCcGA1UECxMgTWljcm9zb2Z0IE9wZXJhdGlvbnMgUHVlcnRvIFJpY28xJzAlBgNV
# BAsTHm5DaXBoZXIgTlRTIEVTTjo0REU5LTBDNUUtM0UwOTErMCkGA1UEAxMiTWlj
# cm9zb2Z0IFRpbWUgU291cmNlIE1hc3RlciBDbG9jazANBgkqhkiG9w0BAQUFAAIF
# AOJCZCEwIhgPMjAyMDA0MTYxMjU3MDVaGA8yMDIwMDQxNzEyNTcwNVowdzA9Bgor
# BgEEAYRZCgQBMS8wLTAKAgUA4kJkIQIBADAKAgEAAgIVrQIB/zAHAgEAAgIY0TAK
# AgUA4kO1oQIBADA2BgorBgEEAYRZCgQCMSgwJjAMBgorBgEEAYRZCgMBoAowCAIB
# AAIDFuNgoQowCAIBAAIDB6EgMA0GCSqGSIb3DQEBBQUAA4IBAQCMbGIOSKXD7Pwv
# M/b/XhmBlIrVOtNIQ2M5mN9B4m2EuGYZhC3q724nOIVVdEocZfCvwnTz5BmwpkIU
# mvhiJpl9//F/++H8HOe3cGQ3+Rg88ZXVC/Czo9JtUwdaxObA+sPyR3hzgYHUMLFd
# xWq0OL08/AyQFqIUygMbRlDvVLRzSWeQ9oOH68iAdXuHi+ZmVxH+3QjolA2WrEML
# 4dYTIG/Y+mWh3zj4pXrd2ge0yLdSBfAEZLDFW4w+J1QR/wh4ls+13R7Emy3sZ+/B
# KSkLipWX4+lR/MtFXx3gJShtDOlvCWd6NYcd4W//jMjDwouEkJAS7WRMBuNrOh0E
# 0gCcAN/vMYIC9TCCAvECAQEwgZMwfDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldh
# c2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBD
# b3Jwb3JhdGlvbjEmMCQGA1UEAxMdTWljcm9zb2Z0IFRpbWUtU3RhbXAgUENBIDIw
# MTACEzMAAAEFBznqWfNVvyoAAAAAAQUwDQYJYIZIAWUDBAIBBQCgggEyMBoGCSqG
# SIb3DQEJAzENBgsqhkiG9w0BCRABBDAvBgkqhkiG9w0BCQQxIgQgof88o3KJIjqN
# ZRddPrjs1qdKJ1TzXdyVYknI21vtNwQwgeIGCyqGSIb3DQEJEAIMMYHSMIHPMIHM
# MIGxBBTSeZzsyIfY+vTHfefXdmDhGVX2qjCBmDCBgKR+MHwxCzAJBgNVBAYTAlVT
# MRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQK
# ExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xJjAkBgNVBAMTHU1pY3Jvc29mdCBUaW1l
# LVN0YW1wIFBDQSAyMDEwAhMzAAABBQc56lnzVb8qAAAAAAEFMBYEFMDGNK6A3JYA
# OYY/F8I9Hbp+Ws7kMA0GCSqGSIb3DQEBCwUABIIBAKWujIYKNIo2a0rOUoFAw6My
# geTUFrUpCW0nordK+z/PjPQiXzOduvNA3ixj6T/KfTvU7RtNDBI3yJ1O7SQUesQc
# Zog8x3KYKDzj/1V5OlwfDk8U31MF5JQopLVwinYxUaeFBujCXEUf0bUo72qJMBl1
# wTjOnmzdGS/joG3cVsa4fgt8HKIAnPd2SNzwNoE2lMo4tTBCHZc02pClQ5Gtpd2D
# djRepyM0vumoXucSlxYHjzpdyrv/vX7qP3JoXMmfYNiBpK55NVV1PWLhVbklQWU0
# 2Svc+9EI7Q5kmbKBh8fscWSCo+HcipYn1DTlFEwAutHgTFgCP2j59qSha4wTAZU=
# SIG # End signature block
