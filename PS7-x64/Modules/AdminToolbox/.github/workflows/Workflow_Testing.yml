# This is a basic workflow to help you get started with Actions

name: Workflow Testing

# Controls when the action will run.
on: # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ testworkflow ]
  #pull_request:
    #branches: [ master ]

# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-2019

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      #Run pwsh functions to publish the module
      - name: Test running PWSH functions with only code that needs testing
        env:
          NUGET_KEY: ${{ secrets.PS_GALLERY_KEY }}
        shell: pwsh
        run: |
          function test {
            $workingdirectory = (get-location).path
            #FortiWizard
            $PSGalleryVersion = (Find-Module Admintoolbox.FortiWizard -Repository PSGallery).version
            $GithubVersion = Get-Content "$workingdirectory/modules/Admintoolbox.FortiWizard/ChangeLog.md" | Select-Object -Last 1
              if ([version]$GithubVersion -gt [version]$PSGalleryVersion ) {
                Install-Module AdminToolbox.Networking -AllowClobber -Force; Import-Module AdminToolbox.Networking -Force -Global
                Publish-Module -Path "$workingdirectory/modules/AdminToolbox.FortiWizard" -NuGetApiKey $env:NUGET_KEY
                Write-Output "[+] Admintoolbox.FortiWizard published to PSGalley"
              }
              else {
                Write-Output "[-] Admintoolbox.FortiWizard not published"
              }
          }
          test