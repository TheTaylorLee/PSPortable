<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Management.Infrastructure.CimCmdlets</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimAsyncOperation">
            <summary>
            <para>
            Async operation base class, it will issue async operation through
            1...* CimSession object(s), processing the async results, extended
            pssemantics operations, and manage the lifecycle of created
            CimSession object(s).
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimAsyncOperation.#ctor">
            <summary>
            The constructor.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimAsyncOperation.NewCmdletActionHandler(System.Object,Microsoft.Management.Infrastructure.CimCmdlets.CmdletActionEventArgs)">
            <summary>
            <para>
            Handler used to handle new action event from
            <seealso cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> object.
            </para>
            </summary>
            <param name="cimSession">
            <seealso cref="T:Microsoft.Management.Infrastructure.CimSession"/> object raised the event
            </param>
            <param name="actionArgs">Event argument.</param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimAsyncOperation.OperationCreatedHandler(System.Object,Microsoft.Management.Infrastructure.CimCmdlets.OperationEventArgs)">
            <summary>
            <para>
            Handler used to handle new operation event from
            <seealso cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> object.
            </para>
            </summary>
            <param name="cimSession">
            <seealso cref="T:Microsoft.Management.Infrastructure.CimSession"/> object raised the event.
            </param>
            <param name="actionArgs">Event argument.</param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimAsyncOperation.OperationDeletedHandler(System.Object,Microsoft.Management.Infrastructure.CimCmdlets.OperationEventArgs)">
            <summary>
            <para>
            Handler used to handle operation deletion event from
            <seealso cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> object.
            </para>
            </summary>
            <param name="cimSession">
            <seealso cref="T:Microsoft.Management.Infrastructure.CimSession"/> object raised the event.
            </param>
            <param name="actionArgs">Event argument.</param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimAsyncOperation.ProcessActions(Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationBase)">
            <summary>
            <para>
            process all actions in the action queue
            </para>
            </summary>
            <param name="cmdletOperation">
            Wrapper of cmdlet, <seealso cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationBase"/> for details.
            </param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimAsyncOperation.ProcessRemainActions(Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationBase)">
            <summary>
            <para>
            Process remaining actions until all operations are completed or
            current cmdlet is terminated by user.
            </para>
            </summary>
            <param name="cmdletOperation">
            Wrapper of cmdlet, <seealso cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationBase"/> for details.
            </param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimAsyncOperation.GetActionAndRemove(Microsoft.Management.Infrastructure.CimCmdlets.CimBaseAction@)">
            <summary>
            <para>
            Get action object from action queue.
            </para>
            </summary>
            <param name="action">Next action to execute.</param>
            <returns>True indicates there is an valid action, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimAsyncOperation.AddCimSessionProxy(Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy)">
            <summary>
            <para>
            Add temporary <seealso cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> object to cache.
            </para>
            </summary>
            <param name="sessionproxy">Cimsession wrapper object.</param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimAsyncOperation.IsActive">
            <summary>
            <para>
            Are there active operations?
            </para>
            </summary>
            <returns>True for having active operations, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimAsyncOperation.CreateCimSessionProxy(Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy)">
            <summary>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> object.
            </summary>
            <param name="session"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimAsyncOperation.CreateCimSessionProxy(Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy,System.Boolean)">
            <summary>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> object.
            </summary>
            <param name="session"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimAsyncOperation.CreateCimSessionProxy(Microsoft.Management.Infrastructure.CimSession)">
            <summary>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> object.
            </summary>
            <param name="session"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimAsyncOperation.CreateCimSessionProxy(Microsoft.Management.Infrastructure.CimSession,System.Boolean)">
            <summary>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> object.
            </summary>
            <param name="session"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimAsyncOperation.CreateCimSessionProxy(System.String)">
            <summary>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> object, and
            add the proxy into cache.
            </summary>
            <param name="computerName"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimAsyncOperation.CreateCimSessionProxy(System.String,Microsoft.Management.Infrastructure.CimInstance)">
            <summary>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> object, and
            add the proxy into cache.
            </summary>
            <param name="computerName"></param>
            <param name="cimInstance"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimAsyncOperation.CreateCimSessionProxy(System.String,Microsoft.Management.Infrastructure.CimInstance,System.Boolean)">
            <summary>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> object, and
            add the proxy into cache.
            </summary>
            <param name="computerName"></param>
            <param name="cimInstance"></param>
            <param name="passThru"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimAsyncOperation.SubscribeEventAndAddProxytoCache(Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy)">
            <summary>
            Subscribe event from proxy and add proxy to cache.
            </summary>
            <param name="proxy"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimAsyncOperation.SubscribeToCimSessionProxyEvent(Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy)">
            <summary>
            <para>
            Subscribe to the events issued by <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/>.
            </para>
            </summary>
            <param name="proxy"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimAsyncOperation.GetBaseObject(System.Object)">
            <summary>
            Retrieve the base object out if wrapped in psobject.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimAsyncOperation.GetReferenceOrReferenceArrayObject(System.Object,Microsoft.Management.Infrastructure.CimType@)">
            <summary>
            Retrieve the reference object or reference array object.
            The returned object has to be either CimInstance or CImInstance[] type,
            if not thrown exception.
            </summary>
            <param name="value"></param>
            <param name="referenceType">Output the cimtype of the value, either Reference or ReferenceArray.</param>
            <returns>The object.</returns>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimAsyncOperation.Disposed">
            <summary>
            <para>
            Indicates whether this object was disposed or not
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimAsyncOperation.Dispose">
            <summary>
            <para>
            Dispose() calls Dispose(true).
            Implement IDisposable. Do not make this method virtual.
            A derived class should not be able to override this method.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimAsyncOperation.Dispose(System.Boolean)">
            <summary>
            <para>
            Dispose(bool disposing) executes in two distinct scenarios.
            If disposing equals true, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources
            can be disposed.
            If disposing equals false, the method has been called by the
            runtime from inside the finalizer and you should not reference
            other objects. Only unmanaged resources can be disposed.
            </para>
            </summary>
            <param name="disposing">Whether it is directly called.</param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimAsyncOperation.Cleanup">
            <summary>
            <para>
            Clean up managed resources.
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimAsyncOperation.a_lock">
            <summary>
            Lock object.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimAsyncOperation.operationCount">
            <summary>
            Number of active operations.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimAsyncOperation.moreActionEvent">
            <summary>
            Event to notify ps thread that more action is available.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimAsyncOperation.actionQueue">
            <summary>
            The following is the definition of action queue.
            The queue holding all actions to be executed in the context of either
            ProcessRecord or EndProcessing.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimAsyncOperation.cimSessionProxyCacheLock">
            <summary>
            Lock object.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimAsyncOperation.cimSessionProxyCache">
            <summary>
            Cache all <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> objects related to
            the current operation.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimAsyncOperation.ackedEvent">
            <summary>
            Event to notify ps thread that either a ACK message sent back
            or a error happened. Currently only used by
            <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimRegisterCimIndication"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseAction">
            <summary>
            Base action class, implemented to write results to pipeline.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseAction.#ctor">
            <summary>
            Constructor method.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseAction.Execute(Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationBase)">
            <summary>
            <para>
            Execute the write operation to given cmdlet object
            </para>
            </summary>
            <param name="cmdlet">
            cmdlet wrapper object, to which write result.
            <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationBase"/> for details.
            </param>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseAction.Context">
            <summary>
            <para>
            <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.XOperationContextBase"/> object that related to current action.
            It may used by action, such as <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimWriteResultObject"/>,
            since later on action may require namespace, and proxy object to reuse
            <see cref="T:Microsoft.Management.Infrastructure.CimSession"/>, <see cref="T:Microsoft.Management.Infrastructure.Options.CimOperationOptions"/> object.
            </para>
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSyncAction">
            <summary>
            <para>
            Synchronous action class, implemented to write results to pipeline
            and block current thread until the action is completed.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSyncAction.#ctor">
            <summary>
            The constructor.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSyncAction.GetResponse">
            <summary>
            <para>
            Block current thread until action completed
            </para>
            </summary>
            <returns>Response from user.</returns>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSyncAction.ResponseType">
            <summary>
            <para>
            Set the response result.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSyncAction.OnComplete">
            <summary>
            <para>
            Call this method when the action is completed or
            the operation is terminated.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSyncAction.Block">
            <summary>
            <para>
            Block current thread.
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSyncAction.completeEvent">
            <summary>
            Action completed event.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSyncAction.responseType">
            <summary>
            Response result.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSyncAction._disposed">
            <summary>
            IDisposable interface.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSyncAction.Dispose">
            <summary>
            <para>
            Dispose() calls Dispose(true).
            Implement IDisposable. Do not make this method virtual.
            A derived class should not be able to override this method.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSyncAction.Dispose(System.Boolean)">
            <summary>
            <para>
            Dispose(bool disposing) executes in two distinct scenarios.
            If disposing equals true, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources
            can be disposed.
            If disposing equals false, the method has been called by the
            runtime from inside the finalizer and you should not reference
            other objects. Only unmanaged resources can be disposed.
            </para>
            </summary>
            <param name="disposing">Whether it is directly called.</param>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.ParameterDefinitionEntry">
            <summary>
            <para>
            Define class <c>ParameterDefinitionEntry</c>.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.ParameterDefinitionEntry.#ctor(System.String,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="parameterSetName"></param>
            <param name="mandatory"></param>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.ParameterDefinitionEntry.ParameterSetName">
            <summary>
            Property ParameterSetName.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.ParameterDefinitionEntry.IsMandatory">
            <summary>
            Whether the parameter is mandatory to the set.
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.ParameterSetEntry">
            <summary>
            <para>
            Define class <c>ParameterSetEntry</c>.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.ParameterSetEntry.#ctor(System.UInt32)">
            <summary>
            Constructor.
            </summary>
            <param name="mandatoryParameterCount"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.ParameterSetEntry.#ctor(Microsoft.Management.Infrastructure.CimCmdlets.ParameterSetEntry)">
            <summary>
            Constructor.
            </summary>
            <param name="toClone"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.ParameterSetEntry.#ctor(System.UInt32,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="mandatoryParameterCount"></param>
            <param name="mandatory"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.ParameterSetEntry.reset">
            <summary>
            Reset the internal status.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.ParameterSetEntry.IsDefaultParameterSet">
            <summary>
            Property <c>DefaultParameterSet</c>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.ParameterSetEntry.MandatoryParameterCount">
            <summary>
            Property <c>MandatoryParameterCount</c>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.ParameterSetEntry.IsValueSet">
            <summary>
            Property <c>IsValueSet</c>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.ParameterSetEntry.IsValueSetAtBeginProcess">
            <summary>
            Property <c>IsValueSetAtBeginProcess</c>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.ParameterSetEntry.SetMandatoryParameterCount">
            <summary>
            Property <c>SetMandatoryParameterCount</c>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.ParameterSetEntry.SetMandatoryParameterCountAtBeginProcess">
            <summary>
            Property <c>SetMandatoryParameterCountAtBeginProcess</c>
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.ParameterBinder">
            <summary>
            Define class <c>ParameterBinder</c>.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.ParameterBinder.#ctor(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.HashSet{Microsoft.Management.Infrastructure.CimCmdlets.ParameterDefinitionEntry}},System.Collections.Generic.Dictionary{System.String,Microsoft.Management.Infrastructure.CimCmdlets.ParameterSetEntry})">
            <summary>
            Constructor.
            </summary>
            <param name="parameters"></param>
            <param name="sets"></param>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.ParameterBinder.parameterDefinitionEntries">
            <summary>
            Define the parameter definition entries,
            each parameter may belong a set of parameterSets, each parameter set
            are defined by a <seealso cref="T:Microsoft.Management.Infrastructure.CimCmdlets.ParameterDefinitionEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.ParameterBinder.parameterSetEntries">
            <summary>
            <para>
            Define parameter set entries,
            each cmdlet has a list of parameter set, each has number of mandatory parameters, etc.
            This data structure is used to track the number of mandatory parameter has been set for
            current parameterset, whether the parameter set was been set by user.
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.ParameterBinder.parametersetNamesList">
            <summary>
            <para>
            Used to remember the set of parameterset were set
            if any conflict occurred with current parameter,
            throw exception
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.ParameterBinder.parameterNamesList">
            <summary>
            Parameter names list.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.ParameterBinder.parametersetNamesListAtBeginProcess">
            <summary>
            <para>
            Used to remember the set of parameterset were set before begin process
            if any conflict occurred with current parameter,
            throw exception
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.ParameterBinder.parameterNamesListAtBeginProcess">
            <summary>
            Parameter names list before begin process.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.ParameterBinder.reset">
            <summary>
            <para>
            Reset the status of parameter set entries
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.ParameterBinder.SetParameter(System.String,System.Boolean)">
            <summary>
            <para>
            A given parameter's value was set by cmdlet caller,
            check and change the status of parameter set,
            throw exception if confliction occurred
            </para>
            </summary>
            <param name="parameterName"></param>
            <exception cref="T:System.Management.Automation.PSArgumentException">Throw if conflict parameter was set.</exception>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.ParameterBinder.GetParameterSet">
            <summary>
            Get the parameter set name based on current binding results.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.ParameterBinder.CloneParameterEntries(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.HashSet{Microsoft.Management.Infrastructure.CimCmdlets.ParameterDefinitionEntry}},System.Collections.Generic.Dictionary{System.String,Microsoft.Management.Infrastructure.CimCmdlets.ParameterSetEntry})">
            <summary>
            Deep clone the parameter entries to member variable.
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand">
            <summary>
            Base command for all cim cmdlets.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.CheckParameterSet">
            <summary>
            <para>
            Check set parameters and set ParameterSetName
            </para>
            <para>
            Following are special types to be handled
            Microsoft.Management.Infrastructure.Options.PacketEncoding
            Microsoft.Management.Infrastructure.Options.ImpersonationType
            UInt32
            Authentication.None  (default value)?
            ProxyType.None
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.SetParameter(System.Object,System.String)">
            <summary>
            Redirect to parameterBinder to set one parameter.
            </summary>
            <param name="parameterName"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.#ctor(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.HashSet{Microsoft.Management.Infrastructure.CimCmdlets.ParameterDefinitionEntry}},System.Collections.Generic.Dictionary{System.String,Microsoft.Management.Infrastructure.CimCmdlets.ParameterSetEntry})">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.StopProcessing">
            <summary>
            StopProcessing method.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.disposed">
            <summary>
            IDisposable interface.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.Dispose">
            <summary>
            <para>
            Dispose() calls Dispose(true).
            Implement IDisposable. Do not make this method virtual.
            A derived class should not be able to override this method.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.Dispose(System.Boolean)">
            <summary>
            <para>
            Dispose(bool disposing) executes in two distinct scenarios.
            If disposing equals true, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources
            can be disposed.
            If disposing equals false, the method has been called by the
            runtime from inside the finalizer and you should not reference
            other objects. Only unmanaged resources can be disposed.
            </para>
            </summary>
            <param name="disposing">Whether it is directly called.</param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.DisposeInternal">
            <summary>
            Clean up resources.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.parameterBinder">
            <summary>
            Parameter binder used to resolve parameter set name.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.operation">
            <summary>
            <para>
            Async operation handler
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.myLock">
            <summary>
            Lock object.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.parameterSetName">
            <summary>
            <para>
            parameter set name
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.atBeginProcess">
            <summary>
            This flag is introduced to resolve the parameter set name
            during process record
            Whether at begin process time, false means in processrecord.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.AsyncOperation">
            <summary>
            <para>
            Set <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimAsyncOperation"/> object, to which
            current cmdlet will delegate all operations.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.ParameterSetName">
            <summary>
            <para>
            Get current ParameterSetName of the cmdlet
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.CmdletOperation">
            <summary>
            Gets/Sets cmdlet operation wrapper object.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.ThrowTerminatingError(System.Exception,System.String)">
            <summary>
            <para>
            Throw terminating error
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.AliasCN">
            <summary>
            Alias CN - computer name.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.AliasServerName">
            <summary>
            Alias ServerName - computer name.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.AliasOT">
            <summary>
            Alias OT - operation timeout.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.SessionSetName">
            <summary>
            Session set name.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.ComputerSetName">
            <summary>
            Computer set name.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.ClassNameComputerSet">
            <summary>
            Class name computer set name.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.ResourceUriComputerSet">
            <summary>
            Resource Uri computer set name.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.CimInstanceComputerSet">
            <summary>
            <see cref="T:Microsoft.Management.Infrastructure.CimInstance"/> computer set name.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.QueryComputerSet">
            <summary>
            Query computer set name.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.ClassNameSessionSet">
            <summary>
            Class name session set name.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.ResourceUriSessionSet">
            <summary>
            Resource Uri session set name.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.CimInstanceSessionSet">
            <summary>
            <see cref="T:Microsoft.Management.Infrastructure.CimInstance"/> session set name.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.QuerySessionSet">
            <summary>
            Query session set name.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.CimClassComputerSet">
            <summary>
            <see cref="T:Microsoft.Management.Infrastructure.CimClass"/> computer set name.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.CimClassSessionSet">
            <summary>
            <see cref="T:Microsoft.Management.Infrastructure.CimClass"/> session set name.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.CredentialParameterSet">
            <summary>
            Credential parameter set.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.CertificateParameterSet">
            <summary>
            Certificate parameter set.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.AliasCimInstance">
            <summary>
            CimInstance parameter alias.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.ThrowInvalidAuthenticationTypeError(System.String,System.String,Microsoft.Management.Infrastructure.Options.PasswordAuthenticationMechanism)">
            <summary>
            <para>
            Throw invalid AuthenticationType
            </para>
            </summary>
            <param name="operationName"></param>
            <param name="parameterName"></param>
            <param name="authentication"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.ThrowConflictParameterWasSet(System.String,System.String,System.String)">
            <summary>
            Throw conflict parameter error.
            </summary>
            <param name="operationName"></param>
            <param name="parameterName"></param>
            <param name="conflictParameterName"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.ThrowInvalidProperty(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.String,System.Collections.IDictionary)">
            <summary>
            <para>
            Throw not found property error
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand.CreateCimCredentials(System.Management.Automation.PSCredential,Microsoft.Management.Infrastructure.Options.PasswordAuthenticationMechanism,System.String,System.String)">
            <summary>
            Create credentials based on given authentication type and PSCredential.
            </summary>
            <param name="psCredentials"></param>
            <param name="passwordAuthentication"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimGetAssociatedInstance">
            <summary>
            <para>
            Implements operations of get-AssociatedInstance cmdlet.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimGetAssociatedInstance.#ctor">
            <summary>
            <para>
            Constructor
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimGetAssociatedInstance.GetCimAssociatedInstance(Microsoft.Management.Infrastructure.CimCmdlets.GetCimAssociatedInstanceCommand)">
            <summary>
            <para>
            Base on parametersetName to retrieve associated ciminstances
            </para>
            </summary>
            <param name="cmdlet"><see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand"/> object.</param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimGetAssociatedInstance.SetSessionProxyProperties(Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy@,Microsoft.Management.Infrastructure.CimCmdlets.GetCimAssociatedInstanceCommand)">
            <summary>
            <para>
            Set <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> properties
            </para>
            </summary>
            <param name="proxy"></param>
            <param name="cmdlet"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimGetAssociatedInstance.CreateSessionProxy(System.String,Microsoft.Management.Infrastructure.CimInstance,Microsoft.Management.Infrastructure.CimCmdlets.GetCimAssociatedInstanceCommand)">
            <summary>
            <para>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> and set properties
            </para>
            </summary>
            <param name="computerName"></param>
            <param name="cimInstance"></param>
            <param name="cmdlet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimGetAssociatedInstance.CreateSessionProxy(Microsoft.Management.Infrastructure.CimSession,Microsoft.Management.Infrastructure.CimCmdlets.GetCimAssociatedInstanceCommand)">
            <summary>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> and set properties.
            </summary>
            <param name="session"></param>
            <param name="cmdlet"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimGetCimClassContext">
            <summary>
            Containing all information originated from
            the parameters of <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.GetCimClassCommand"/>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimGetCimClassContext.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            <para>
            Constructor
            </para>
            </summary>
            <param name="methodName"></param>
            <param name="propertyName"></param>
            <param name="qualifierName"></param>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimGetCimClassContext.ClassName">
            <summary>
            <para>
            The following is the definition of the input parameter "ClassName".
            </para>
            <para>
            Wildcard expansion should be allowed.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimGetCimClassContext.MethodName">
            <summary>
            <para>
            The following is the definition of the input parameter "MethodName",
            Which may contains wildchar.
            Then Filter the <see cref="T:Microsoft.Management.Infrastructure.CimClass"/> by given methodname
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimGetCimClassContext.PropertyName">
            <summary>
            <para>
            The following is the definition of the input parameter "PropertyName",
            Which may contains wildchar.
            Filter the <see cref="T:Microsoft.Management.Infrastructure.CimClass"/> by given property name.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimGetCimClassContext.QualifierName">
            <summary>
            <para>
            The following is the definition of the input parameter "QualifierName",
            Which may contains wildchar.
            Filter the <see cref="T:Microsoft.Management.Infrastructure.CimClass"/> by given methodname
            </para>
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimGetCimClass">
            <summary>
            <para>
            Implements operations of get-cimclass cmdlet.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimGetCimClass.#ctor">
            <summary>
            <para>
            Constructor
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimGetCimClass.GetCimClass(Microsoft.Management.Infrastructure.CimCmdlets.GetCimClassCommand)">
            <summary>
            <para>
            Base on parametersetName to retrieve <see cref="T:Microsoft.Management.Infrastructure.CimClass"/>
            </para>
            </summary>
            <param name="cmdlet"><see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.GetCimClassCommand"/> object.</param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimGetCimClass.SetSessionProxyProperties(Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy@,Microsoft.Management.Infrastructure.CimCmdlets.GetCimClassCommand)">
            <summary>
            <para>
            Set <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> properties
            </para>
            </summary>
            <param name="proxy"></param>
            <param name="cmdlet"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimGetCimClass.CreateSessionProxy(System.String,Microsoft.Management.Infrastructure.CimCmdlets.GetCimClassCommand)">
            <summary>
            <para>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> and set properties
            </para>
            </summary>
            <param name="computerName"></param>
            <param name="cmdlet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimGetCimClass.CreateSessionProxy(Microsoft.Management.Infrastructure.CimSession,Microsoft.Management.Infrastructure.CimCmdlets.GetCimClassCommand)">
            <summary>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> and set properties.
            </summary>
            <param name="session"></param>
            <param name="cmdlet"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.FormatPartialCimInstance">
            <summary>
            A class used to add pstypename to partial ciminstance
            for <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand"/>, if -KeyOnly
            or -SelectProperties is been specified, then add a pstypename:
            "Microsoft.Management.Infrastructure.CimInstance#__PartialCIMInstance"
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.FormatPartialCimInstance.PartialPSTypeName">
            <summary>
            Partial ciminstance pstypename.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.FormatPartialCimInstance.Process(System.Object)">
            <summary>
            Add pstypename to the resultobject if necessary.
            </summary>
            <param name="resultObject"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimGetInstance">
            <summary>
            <para>
            Implements operations of get-ciminstance cmdlet.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimGetInstance.#ctor">
            <summary>
            <para>
            Constructor
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimGetInstance.GetCimInstance(Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand)">
            <summary>
            <para>
            Base on parametersetName to retrieve ciminstances
            </para>
            </summary>
            <param name="cmdlet"><see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand"/> object.</param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimGetInstance.GetCimInstanceInternal(Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand)">
            <summary>
            <para>
            Refactor to be reused by Get-CimInstance;Remove-CimInstance;Set-CimInstance
            </para>
            </summary>
            <param name="cmdlet"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimGetInstance.SetSessionProxyProperties(Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy@,Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand)">
            <summary>
            <para>
            Set <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> properties
            </para>
            </summary>
            <param name="proxy"></param>
            <param name="cmdlet"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimGetInstance.CreateSessionProxy(System.String,Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand)">
            <summary>
            <para>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> and set properties.
            </para>
            </summary>
            <param name="computerName"></param>
            <param name="cmdlet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimGetInstance.CreateSessionProxy(System.String,Microsoft.Management.Infrastructure.CimInstance,Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand,System.Boolean)">
            <summary>
            <para>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> and set properties.
            </para>
            </summary>
            <param name="computerName"></param>
            <param name="cimInstance"></param>
            <param name="cmdlet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimGetInstance.CreateSessionProxy(Microsoft.Management.Infrastructure.CimSession,Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand)">
            <summary>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> and set properties.
            </summary>
            <param name="session"></param>
            <param name="cmdlet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimGetInstance.CreateSessionProxy(System.String,Microsoft.Management.Infrastructure.CimInstance,Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand)">
            <summary>
            <para>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> and set properties
            </para>
            </summary>
            <param name="computerName"></param>
            <param name="cimInstance"></param>
            <param name="cmdlet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimGetInstance.CreateSessionProxy(Microsoft.Management.Infrastructure.CimSession,Microsoft.Management.Infrastructure.CimCmdlets.CimBaseCommand,System.Boolean)">
            <summary>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> and set properties.
            </summary>
            <param name="session"></param>
            <param name="cmdlet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimGetInstance.SetPreProcess(Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy,Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand)">
            <summary>
            Set <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.IObjectPreProcess"/> object to proxy to pre-process
            the result object if necessary.
            </summary>
            <param name="proxy"></param>
            <param name="cmdlet"></param>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimGetInstance.queryWithWhere">
            <summary>
            Wql query format with where clause.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimGetInstance.queryWithoutWhere">
            <summary>
            Wql query format without where clause.
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimIndicationEventArgs">
            <summary>
            <para>
            Abstract Cimindication event args, which containing all elements related to
            an Cimindication.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimIndicationEventArgs.Context">
            <summary>
            <para>
            Returns an Object value for an operation context
            </para>
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimIndicationEventExceptionEventArgs">
            <summary>
            Cimindication exception event args, which containing occurred exception.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimIndicationEventExceptionEventArgs.Exception">
            <summary>
            <para>
            Returns an exception
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimIndicationEventExceptionEventArgs.#ctor(System.Exception)">
            <summary>
            <para>
            Constructor
            </para>
            </summary>
            <param name="result"></param>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimIndicationEventInstanceEventArgs">
            <summary>
            Cimindication event args, which containing all elements related to
            an Cimindication.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimIndicationEventInstanceEventArgs.NewEvent">
            <summary>
            Get ciminstance of the indication object.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimIndicationEventInstanceEventArgs.MachineId">
            <summary>
            Get MachineId of the indication object.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimIndicationEventInstanceEventArgs.Bookmark">
            <summary>
            Get BookMark of the indication object.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimIndicationEventInstanceEventArgs.#ctor(Microsoft.Management.Infrastructure.CimSubscriptionResult)">
            <summary>
            <para>
            Constructor
            </para>
            </summary>
            <param name="result"></param>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimIndicationEventInstanceEventArgs.result">
            <summary>
            <para>
            subscription result
            </para>
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimIndicationWatcher">
            <summary>
            <para>
            A public class used to start/stop the subscription to specific indication source,
            and listen to the incoming indications, event <see cref="E:Microsoft.Management.Infrastructure.CimCmdlets.CimIndicationWatcher.CimIndicationArrived"/>
            will be raised for each cimindication.
            </para>
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimIndicationWatcher.Status">
            <summary>
            Status of <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimIndicationWatcher"/> object.
            </summary>
        </member>
        <member name="E:Microsoft.Management.Infrastructure.CimCmdlets.CimIndicationWatcher.CimIndicationArrived">
            <summary>
            <para>
            CimIndication arrived event
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimIndicationWatcher.#ctor(System.String,System.String,System.String,System.String,System.UInt32)">
            <summary>
            <para>
            Constructor with given computerName, namespace, queryExpression and timeout
            </para>
            </summary>
            <param name="computerName"></param>
            <param name="nameSpace"></param>
            <param name="queryExpression"></param>
            <param name="operationTimeout"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimIndicationWatcher.#ctor(Microsoft.Management.Infrastructure.CimSession,System.String,System.String,System.String,System.UInt32)">
            <summary>
            <para>
            Constructor with given cimsession, namespace, queryExpression and timeout
            </para>
            </summary>
            <param name="cimSession"></param>
            <param name="nameSpace"></param>
            <param name="queryExpression"></param>
            <param name="operationTimeout"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimIndicationWatcher.Initialize(System.String,Microsoft.Management.Infrastructure.CimSession,System.String,System.String,System.String,System.UInt32)">
            <summary>
            <para>
            Initialize
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimIndicationWatcher.NewSubscriptionResultHandler(System.Object,Microsoft.Management.Infrastructure.CimCmdlets.CimSubscriptionEventArgs)">
            <summary>
            <para>
            Handler of new subscription result
            </para>
            </summary>
            <param name="src"></param>
            <param name="args"></param>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimIndicationWatcher.EnableRaisingEvents">
            <summary>
            <para>
            Will be called by admin\monad\src\eengine\EventManager.cs:
            PSEventManager::ProcessNewSubscriber to start to listen to the Cim Indication.
            </para>
            <para>
            If set EnableRaisingEvents to false, which will be ignored
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimIndicationWatcher.Start">
            <summary>
            <para>
            Start the subscription
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimIndicationWatcher.Stop">
            <summary>
            <para>
            Unsubscribe the subscription
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimIndicationWatcher.SetCmdlet(System.Management.Automation.Cmdlet)">
            <summary>
            Set the cmdlet object to throw ThrowTerminatingError
            in case there is a subscription failure.
            </summary>
            <param name="cmdlet"></param>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimIndicationWatcher.cimRegisterCimIndication">
            <summary>
            <para>
            CimRegisterCimIndication object
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimIndicationWatcher.status">
            <summary>
            The status of <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimIndicationWatcher"/> object.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimIndicationWatcher.myLock">
            <summary>
            Lock started field.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimIndicationWatcher.cimSessionParameterName">
            <summary>
            CimSession parameter name.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimIndicationWatcher.queryExpressionParameterName">
            <summary>
            QueryExpression parameter name.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimIndicationWatcher.computerName">
            <summary>
            <para>
            parameters used to start the subscription
            </para>
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimInvokeCimMethod">
            <summary>
            <para>
            Implements operations of invoke-cimmethod cmdlet.
            </para>
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimInvokeCimMethod.CimInvokeCimMethodContext">
            <summary>
            Containing all necessary information originated from
            the parameters of <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.InvokeCimMethodCommand"/>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimInvokeCimMethod.CimInvokeCimMethodContext.#ctor(System.String,System.String,Microsoft.Management.Infrastructure.CimMethodParametersCollection,Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy)">
            <summary>
            <para>
            Constructor
            </para>
            </summary>
            <param name="theNamespace"></param>
            <param name="theCollection"></param>
            <param name="theProxy"></param>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimInvokeCimMethod.CimInvokeCimMethodContext.MethodName">
            <summary>
            <para>namespace</para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimInvokeCimMethod.CimInvokeCimMethodContext.ParametersCollection">
            <summary>
            <para>parameters collection</para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimInvokeCimMethod.#ctor">
            <summary>
            <para>
            Constructor
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimInvokeCimMethod.InvokeCimMethod(Microsoft.Management.Infrastructure.CimCmdlets.InvokeCimMethodCommand)">
            <summary>
            <para>
            Base on parametersetName to retrieve ciminstances
            </para>
            </summary>
            <param name="cmdlet"><see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand"/> object.</param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimInvokeCimMethod.InvokeCimMethodOnCimInstance(Microsoft.Management.Infrastructure.CimInstance,Microsoft.Management.Infrastructure.CimCmdlets.XOperationContextBase,Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationBase)">
            <summary>
            <para>
            Invoke cimmethod on given <see cref="T:Microsoft.Management.Infrastructure.CimInstance"/>
            </para>
            </summary>
            <param name="cimInstance"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimInvokeCimMethod.SetSessionProxyProperties(Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy@,Microsoft.Management.Infrastructure.CimCmdlets.InvokeCimMethodCommand)">
            <summary>
            <para>
            Set <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> properties
            </para>
            </summary>
            <param name="proxy"></param>
            <param name="cmdlet"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimInvokeCimMethod.CreateSessionProxy(System.String,Microsoft.Management.Infrastructure.CimCmdlets.InvokeCimMethodCommand)">
            <summary>
            <para>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> and set properties
            </para>
            </summary>
            <param name="computerName"></param>
            <param name="cmdlet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimInvokeCimMethod.CreateSessionProxy(System.String,Microsoft.Management.Infrastructure.CimInstance,Microsoft.Management.Infrastructure.CimCmdlets.InvokeCimMethodCommand)">
            <summary>
            <para>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> and set properties
            </para>
            </summary>
            <param name="computerName"></param>
            <param name="cimInstance"></param>
            <param name="cmdlet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimInvokeCimMethod.CreateSessionProxy(Microsoft.Management.Infrastructure.CimSession,Microsoft.Management.Infrastructure.CimCmdlets.InvokeCimMethodCommand)">
            <summary>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> and set properties.
            </summary>
            <param name="session"></param>
            <param name="cmdlet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimInvokeCimMethod.CreateParametersCollection(System.Collections.IDictionary,Microsoft.Management.Infrastructure.CimClass,Microsoft.Management.Infrastructure.CimInstance,System.String)">
            <summary>
            <para>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimMethodParametersCollection"/> with given key properties.
            And/or <see cref="T:Microsoft.Management.Infrastructure.CimClass"/> object.
            </para>
            </summary>
            <param name="parameters"></param>
            <param name="cimClass"></param>
            <param name="cimInstance"></param>
            <param name="methodName"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">See CimProperty.Create.</exception>
            <exception cref="T:System.ArgumentException">CimProperty.Create.</exception>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimInvokeCimMethod.targetClass">
            <summary>
            Operation target.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimInvokeCimMethod.actionTemplate">
            <summary>
            Action.
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimNewCimInstanceContext">
            <summary>
            Containing all information originated from
            the parameters of <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.NewCimInstanceCommand"/>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimNewCimInstanceContext.#ctor(Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy,System.String)">
            <summary>
            <para>
            Constructor
            </para>
            </summary>
            <param name="methodName"></param>
            <param name="propertyName"></param>
            <param name="qualifierName"></param>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimNewCimInstance">
            <summary>
            <para>
            Implements operations of new-ciminstance cmdlet.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimNewCimInstance.#ctor">
            <summary>
            <para>
            Constructor
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimNewCimInstance.NewCimInstance(Microsoft.Management.Infrastructure.CimCmdlets.NewCimInstanceCommand)">
            <summary>
            <para>
            Base on parametersetName to create ciminstances,
            either remotely or locally
            </para>
            </summary>
            <param name="cmdlet"><see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand"/> object.</param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimNewCimInstance.GetCimInstance(Microsoft.Management.Infrastructure.CimInstance,Microsoft.Management.Infrastructure.CimCmdlets.XOperationContextBase)">
            <summary>
            <para>
            Get full <see cref="T:Microsoft.Management.Infrastructure.CimInstance"/> from server based on the key
            </para>
            </summary>
            <param name="cimInstance"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimNewCimInstance.SetSessionProxyProperties(Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy@,Microsoft.Management.Infrastructure.CimCmdlets.NewCimInstanceCommand)">
            <summary>
            <para>
            Set <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> properties
            </para>
            </summary>
            <param name="proxy"></param>
            <param name="cmdlet"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimNewCimInstance.CreateSessionProxy(System.String,Microsoft.Management.Infrastructure.CimCmdlets.NewCimInstanceCommand)">
            <summary>
            <para>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> and set properties
            </para>
            </summary>
            <param name="computerName"></param>
            <param name="cmdlet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimNewCimInstance.CreateSessionProxy(Microsoft.Management.Infrastructure.CimSession,Microsoft.Management.Infrastructure.CimCmdlets.NewCimInstanceCommand)">
            <summary>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> and set properties.
            </summary>
            <param name="session"></param>
            <param name="cmdlet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimNewCimInstance.CreateCimInstance(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.IDictionary,Microsoft.Management.Infrastructure.CimCmdlets.NewCimInstanceCommand)">
            <summary>
            <para>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimInstance"/> with given properties.
            </para>
            </summary>
            <param name="className"></param>
            <param name="key"></param>
            <param name="properties"></param>
            <param name="cmdlet"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">See CimProperty.Create.</exception>
            <exception cref="T:System.ArgumentException">CimProperty.Create.</exception>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimNewCimInstance.CreateCimInstance(Microsoft.Management.Infrastructure.CimClass,System.Collections.IDictionary,Microsoft.Management.Infrastructure.CimCmdlets.NewCimInstanceCommand)">
            <summary>
            <para>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimInstance"/> with given properties.
            </para>
            </summary>
            <param name="cimClass"></param>
            <param name="properties"></param>
            <param name="cmdlet"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">See CimProperty.Create.</exception>
            <exception cref="T:System.ArgumentException">CimProperty.Create.</exception>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimNewCimInstance.action">
            <summary>
            Action.
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimPromptUser">
            <summary>
            <para>
            Prompt user the message coming from provider.
            </para>
            <para>
            At the same time <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimPromptUser"/> class will prepare the
            message for -whatif parameter, while the message represents
            what will happen if execute the operation, but not do the operation.
            For example, Remove-CimInstance, the whatif message will like,
            "CIM Instance: Win32_Process@{Key=1} will be deleted."
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimPromptUser.#ctor(System.String,Microsoft.Management.Infrastructure.Options.CimPromptType)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimPromptUser.Execute(Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationBase)">
            <summary>
            <para>
            Prompt user with the given message and prepared whatif message.
            </para>
            </summary>
            <param name="cmdlet">
            cmdlet wrapper object, to which write result.
            <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationBase"/> for details.
            </param>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimPromptUser.Message">
            <summary>
            Prompt message.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimPromptUser.prompt">
            <summary>
            Prompt type -Normal or Critical.
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSubscriptionEventArgs">
            <summary>
            <para>
            Subscription result event args
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSubscriptionEventArgs.Context">
            <summary>
            <para>
            Returns an Object value for an operation context
            </para>
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSubscriptionResultEventArgs">
            <summary>
            <para>
            Subscription result event args
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSubscriptionResultEventArgs.Result">
            <summary>
            <para>
            subscription result
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSubscriptionResultEventArgs.#ctor(Microsoft.Management.Infrastructure.CimSubscriptionResult)">
            <summary>
            <para>Constructor</para>
            </summary>
            <param name="theResult"></param>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSubscriptionExceptionEventArgs">
            <summary>
            <para>
            Subscription result event args
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSubscriptionExceptionEventArgs.Exception">
            <summary>
            <para>
            subscription result
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSubscriptionExceptionEventArgs.#ctor(System.Exception)">
            <summary>
            <para>Constructor</para>
            </summary>
            <param name="theResult"></param>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimRegisterCimIndication">
            <summary>
            <para>
            Implements operations of register-cimindication cmdlet.
            </para>
            </summary>
        </member>
        <member name="E:Microsoft.Management.Infrastructure.CimCmdlets.CimRegisterCimIndication.OnNewSubscriptionResult">
            <summary>
            <para>
            New subscription result event
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimRegisterCimIndication.#ctor">
            <summary>
            <para>
            Constructor
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimRegisterCimIndication.RegisterCimIndication(System.String,System.String,System.String,System.String,System.UInt32)">
            <summary>
            Start an indication subscription target to the given computer.
            </summary>
            <param name="computerName">Null stands for localhost.</param>
            <param name="nameSpace"></param>
            <param name="queryDialect"></param>
            <param name="queryExpression"></param>
            <param name="operationTimeout"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimRegisterCimIndication.RegisterCimIndication(Microsoft.Management.Infrastructure.CimSession,System.String,System.String,System.String,System.UInt32)">
            <summary>
            Start an indication subscription through a given <see cref="T:Microsoft.Management.Infrastructure.CimSession"/>.
            </summary>
            <param name="cimSession">Cannot be null.</param>
            <param name="nameSpace"></param>
            <param name="queryDialect"></param>
            <param name="queryExpression"></param>
            <param name="operationTimeout"></param>
            <exception cref="T:System.ArgumentNullException">Throw if cimSession is null.</exception>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimRegisterCimIndication.SubscribeToCimSessionProxyEvent(Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy)">
            <summary>
            <para>
            Subscribe to the events issued by <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/>.
            </para>
            </summary>
            <param name="proxy"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimRegisterCimIndication.CimIndicationHandler(System.Object,Microsoft.Management.Infrastructure.CimCmdlets.CmdletActionEventArgs)">
            <summary>
            <para>
            Handler used to handle new action event from
            <seealso cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> object.
            </para>
            </summary>
            <param name="cimSession">
            <seealso cref="T:Microsoft.Management.Infrastructure.CimSession"/> object raised the event
            </param>
            <param name="actionArgs">Event argument.</param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimRegisterCimIndication.WaitForAckMessage">
            <summary>
            Block the ps thread until ACK message or Error happened.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimRegisterCimIndication.Cmdlet">
            <summary>
            The cmdlet object who issue this subscription,
            to throw ThrowTerminatingError
            in case there is a subscription failure.
            </summary>
            <param name="cmdlet"></param>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimRegisterCimIndication.TargetComputerName">
            <summary>
            Target computername.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimRegisterCimIndication.CreateSessionProxy(System.String,System.UInt32)">
            <summary>
            <para>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> and set properties
            </para>
            </summary>
            <param name="computerName"></param>
            <param name="timeout"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimRegisterCimIndication.CreateSessionProxy(Microsoft.Management.Infrastructure.CimSession,System.UInt32)">
            <summary>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> and set properties.
            </summary>
            <param name="session"></param>
            <param name="timeout"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimRegisterCimIndication.Exception">
            <summary>
            Exception occurred while start the subscription.
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimRemoveCimInstanceContext">
            <summary>
            Containing all necessary information originated from
            the parameters of <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.RemoveCimInstanceCommand"/>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimRemoveCimInstanceContext.#ctor(System.String,Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy)">
            <summary>
            <para>
            Constructor
            </para>
            </summary>
            <param name="theNamespace"></param>
            <param name="theProxy"></param>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimRemoveCimInstance">
            <summary>
            <para>
            Implements operations of remove-ciminstance cmdlet.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimRemoveCimInstance.#ctor">
            <summary>
            <para>
            Constructor
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimRemoveCimInstance.RemoveCimInstance(Microsoft.Management.Infrastructure.CimCmdlets.RemoveCimInstanceCommand)">
            <summary>
            <para>
            Base on parametersetName to retrieve ciminstances
            </para>
            </summary>
            <param name="cmdlet"><see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand"/> object.</param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimRemoveCimInstance.RemoveCimInstance(Microsoft.Management.Infrastructure.CimInstance,Microsoft.Management.Infrastructure.CimCmdlets.XOperationContextBase,Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationBase)">
            <summary>
            <para>
            Remove <see cref="T:Microsoft.Management.Infrastructure.CimInstance"/> from namespace specified in cmdlet
            </para>
            </summary>
            <param name="cimInstance"></param>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimRemoveCimInstance.action">
            <summary>
            Action.
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.AsyncResultType">
            <summary>
            <para>
            Async result type
            </para>
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimResultContext">
            <summary>
            Cim Result Context.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimResultContext.#ctor(System.Object)">
            <summary>
            Constructor.
            </summary>
            <param name="ErrorSource"></param>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimResultContext.ErrorSource">
            <summary>
            ErrorSource property.
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.AsyncResultEventArgsBase">
            <summary>
            <para>
            Base class of async result event argument
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.AsyncResultEventArgsBase.#ctor(Microsoft.Management.Infrastructure.CimSession,System.IObservable{System.Object},Microsoft.Management.Infrastructure.CimCmdlets.AsyncResultType)">
            <summary>
            Constructor.
            </summary>
            <param name="session"></param>
            <param name="observable"></param>
            <param name="resultType"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.AsyncResultEventArgsBase.#ctor(Microsoft.Management.Infrastructure.CimSession,System.IObservable{System.Object},Microsoft.Management.Infrastructure.CimCmdlets.AsyncResultType,Microsoft.Management.Infrastructure.CimCmdlets.CimResultContext)">
            <summary>
            Constructor.
            </summary>
            <param name="session"></param>
            <param name="observable"></param>
            <param name="resultType"></param>
            <param name="context"></param>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.AsyncResultCompleteEventArgs">
            <summary>
            <para>
            operation successfully completed event argument
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.AsyncResultCompleteEventArgs.#ctor(Microsoft.Management.Infrastructure.CimSession,System.IObservable{System.Object})">
            <summary>
            <para>
            Constructor
            </para>
            </summary>
            <param name="session"><see cref="T:Microsoft.Management.Infrastructure.CimSession"/> object.</param>
            <param name="cancellationDisposable"></param>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.AsyncResultObjectEventArgs">
            <summary>
            <para>
            async result argument with object
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.AsyncResultObjectEventArgs.#ctor(Microsoft.Management.Infrastructure.CimSession,System.IObservable{System.Object},System.Object)">
            <summary>
            Constructor.
            </summary>
            <param name="session"></param>
            <param name="observable"></param>
            <param name="resultObject"></param>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.AsyncResultErrorEventArgs">
            <summary>
            <para>
            operation completed with exception event argument
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.AsyncResultErrorEventArgs.#ctor(Microsoft.Management.Infrastructure.CimSession,System.IObservable{System.Object},System.Exception)">
            <summary>
            Constructor.
            </summary>
            <param name="session"></param>
            <param name="observable"></param>
            <param name="error"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.AsyncResultErrorEventArgs.#ctor(Microsoft.Management.Infrastructure.CimSession,System.IObservable{System.Object},System.Exception,Microsoft.Management.Infrastructure.CimCmdlets.CimResultContext)">
            <summary>
            Constructor.
            </summary>
            <param name="session"></param>
            <param name="observable"></param>
            <param name="error"></param>
            <param name="context"></param>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimResultObserver`1">
            <summary>
            <para>
            Observer to consume results from asynchronous operations, such as,
            EnumerateInstancesAsync operation of <see cref="T:Microsoft.Management.Infrastructure.CimSession"/> object.
            </para>
            <para>
            (See https://channel9.msdn.com/posts/J.Van.Gogh/Reactive-Extensions-API-in-depth-Contract/)
            for the IObserver/IObservable contact
            - the only possible sequence is OnNext* (OnCompleted|OnError)?
            - callbacks are serialized
            - Subscribe never throws
            </para>
            </summary>
            <typeparam name="T">object type</typeparam>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimResultObserver`1.ResultEventHandler">
            <summary>
            Define delegate that handles new cmdlet action come from
            the operations related to the current CimSession object.
            </summary>
            <param name="cimSession">CimSession object, which raised the event.</param>
            <param name="actionArgs">Event args.</param>
        </member>
        <member name="E:Microsoft.Management.Infrastructure.CimCmdlets.CimResultObserver`1.OnNewResult">
            <summary>
            Define an Event based on the NewActionHandler.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimResultObserver`1.#ctor(Microsoft.Management.Infrastructure.CimSession,System.IObservable{System.Object})">
            <summary>
            Constructor.
            </summary>
            <param name="session"><see cref="T:Microsoft.Management.Infrastructure.CimSession"/> object that issued the operation.</param>
            <param name="observable">Operation that can be observed.</param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimResultObserver`1.#ctor(Microsoft.Management.Infrastructure.CimSession,System.IObservable{System.Object},Microsoft.Management.Infrastructure.CimCmdlets.CimResultContext)">
            <summary>
            Constructor.
            </summary>
            <param name="session"><see cref="T:Microsoft.Management.Infrastructure.CimSession"/> object that issued the operation.</param>
            <param name="observable">Operation that can be observed.</param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimResultObserver`1.OnCompleted">
            <summary>
            <para>
            Operation completed successfully
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimResultObserver`1.OnError(System.Exception)">
            <summary>
            <para>
            Operation completed with an error
            </para>
            </summary>
            <param name="error">Error object.</param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimResultObserver`1.OnNextCore(System.Object)">
            <summary>
            Deliver the result value.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimResultObserver`1.OnNext(`0)">
            <summary>
            <para>
            Operation got a new result object
            </para>
            </summary>
            <param name="value">Result object.</param>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimResultObserver`1.CurrentSession">
            <summary>
            Session object of the operation.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimResultObserver`1.observable">
            <summary>
            Async operation that can be observed.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimResultObserver`1.context">
            <summary>
            <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimResultContext"/> object used during delivering result.
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSubscriptionResultObserver">
            <summary>
            CimSubscriptionResultObserver class definition.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSubscriptionResultObserver.#ctor(Microsoft.Management.Infrastructure.CimSession,System.IObservable{System.Object})">
            <summary>
            Constructor.
            </summary>
            <param name="session"></param>
            <param name="observable"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSubscriptionResultObserver.#ctor(Microsoft.Management.Infrastructure.CimSession,System.IObservable{System.Object},Microsoft.Management.Infrastructure.CimCmdlets.CimResultContext)">
            <summary>
            Constructor.
            </summary>
            <param name="session"></param>
            <param name="observable"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSubscriptionResultObserver.OnNext(Microsoft.Management.Infrastructure.CimSubscriptionResult)">
            <summary>
            Override the OnNext method.
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimMethodResultObserver">
            <summary>
            CimMethodResultObserver class definition.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimMethodResultObserver.#ctor(Microsoft.Management.Infrastructure.CimSession,System.IObservable{System.Object})">
            <summary>
            Constructor.
            </summary>
            <param name="session"></param>
            <param name="observable"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimMethodResultObserver.#ctor(Microsoft.Management.Infrastructure.CimSession,System.IObservable{System.Object},Microsoft.Management.Infrastructure.CimCmdlets.CimResultContext)">
            <summary>
            Constructor.
            </summary>
            <param name="session"></param>
            <param name="observable"></param>
            <param name="context"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimMethodResultObserver.OnNext(Microsoft.Management.Infrastructure.CimMethodResultBase)">
            <summary>
            Override the OnNext method.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimMethodResultObserver.MethodName">
            <summary>
            Methodname.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimMethodResultObserver.ClassName">
            <summary>
            Classname.
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.IgnoreResultObserver">
            <summary>
            IgnoreResultObserver class definition.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.IgnoreResultObserver.#ctor(Microsoft.Management.Infrastructure.CimSession,System.IObservable{System.Object})">
            <summary>
            Constructor.
            </summary>
            <param name="session"></param>
            <param name="observable"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.IgnoreResultObserver.OnNext(Microsoft.Management.Infrastructure.CimInstance)">
            <summary>
            Override the OnNext method.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionWrapper.SessionId">
            <summary>
            Id of the cimsession.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionWrapper.InstanceId">
            <summary>
            InstanceId of the cimsession.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionWrapper.Name">
            <summary>
            Name of the cimsession.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionWrapper.ComputerName">
            <summary>
            Computer name of the cimsession.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionWrapper.CimSession">
            <summary>
            Wrapped cimsession object.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionWrapper.Protocol">
            <summary>
            Computer name of the cimsession.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionWrapper.psObject">
            <summary>
            PSObject that wrapped the cimSession.
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState">
            <summary>
            <para>
            Class used to hold all cimsession related status data related to a runspace.
            Including the CimSession cache, session counters for generating session name.
            </para>
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState.CimSessionClassName" -->
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState.CimSessionObject">
            <summary>
            CimSession object name.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState.SessionObjectPath">
            <summary>
            <para>
            CimSession object path, which is identifying a cimsession object
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState.idPropName">
            <summary>
            Id property name of cimsession wrapper object.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState.instanceidPropName">
            <summary>
            Instanceid property name of cimsession wrapper object.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState.namePropName">
            <summary>
            Name property name of cimsession wrapper object.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState.computernamePropName">
            <summary>
            Computer name property name of cimsession object.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState.protocolPropName">
            <summary>
            Protocol name property name of cimsession object.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState.sessionNameCounter">
            <summary>
            <para>
            Session counter bound to current runspace.
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState.curCimSessionsByName">
            <summary>
            <para>
            Dictionary used to holds all CimSessions in current runspace by session name.
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState.curCimSessionsByComputerName">
            <summary>
            <para>
            Dictionary used to holds all CimSessions in current runspace by computer name.
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState.curCimSessionsByInstanceId">
            <summary>
            <para>
            Dictionary used to holds all CimSessions in current runspace by instance ID.
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState.curCimSessionsById">
            <summary>
            <para>
            Dictionary used to holds all CimSessions in current runspace by session id.
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState.curCimSessionWrapper">
            <summary>
            <para>
            Dictionary used to link CimSession object with PSObject.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState.#ctor">
            <summary>
            <para>
            The constructor.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState.GetSessionsCount">
            <summary>
            <para>
            Get sessions count.
            </para>
            </summary>
            <returns>The count of session objects in current runspace.</returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState.GenerateSessionId">
            <summary>
            <para>
            Generates an unique session id.
            </para>
            </summary>
            <returns>Unique session id under current runspace.</returns>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState._disposed">
            <summary>
            <para>
            Indicates whether this object was disposed or not.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState.Dispose">
            <summary>
            <para>
            Dispose() calls Dispose(true).
            Implement IDisposable. Do not make this method virtual.
            A derived class should not be able to override this method.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState.Dispose(System.Boolean)">
            <summary>
            <para>
            Dispose(bool disposing) executes in two distinct scenarios.
            If disposing equals true, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources
            can be disposed.
            If disposing equals false, the method has been called by the
            runtime from inside the finalizer and you should not reference
            other objects. Only unmanaged resources can be disposed.
            </para>
            </summary>
            <param name="disposing">Whether it is directly called.</param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState.Cleanup">
            <summary>
            <para>
            Performs application-defined tasks associated with freeing, releasing, or
            resetting unmanaged resources.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState.AddObjectToCache(Microsoft.Management.Infrastructure.CimSession,System.UInt32,System.Guid,System.String,System.String,Microsoft.Management.Infrastructure.CimCmdlets.ProtocolType)">
            <summary>
            <para>
            Add new CimSession object to cache.
            </para>
            </summary>
            <param name="session"></param>
            <param name="sessionId"></param>
            <param name="instanceId"></param>
            <param name="name"></param>
            <param name="computerName"></param>
            <param name="protocol"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState.GetRemoveSessionObjectTarget(System.Management.Automation.PSObject)">
            <summary>
            <para>
            Generates remove session message by given wrapper object.
            </para>
            </summary>
            <param name="psObject"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState.RemoveOneSessionObjectFromCache(System.Management.Automation.PSObject)">
            <summary>
            <para>
            Remove given <see cref="T:System.Management.Automation.PSObject"/> object from cache.
            </para>
            </summary>
            <param name="psObject"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState.RemoveOneSessionObjectFromCache(Microsoft.Management.Infrastructure.CimSession)">
            <summary>
            <para>
            Remove given <see cref="T:Microsoft.Management.Infrastructure.CimSession"/> object from cache.
            </para>
            </summary>
            <param name="session"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState.RemoveSessionInternal(Microsoft.Management.Infrastructure.CimSession,Microsoft.Management.Infrastructure.CimCmdlets.CimSessionWrapper)">
            <summary>
            <para>
            Remove given <see cref="T:Microsoft.Management.Infrastructure.CimSession"/> object from partial of the cache only.
            </para>
            </summary>
            <param name="session"></param>
            <param name="psObject"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState.AddErrorRecord(System.Collections.Generic.List{System.Management.Automation.ErrorRecord}@,System.String,System.Object)">
            <summary>
            <para>
            Add ErrorRecord to list.
            </para>
            </summary>
            <param name="errRecords"></param>
            <param name="propertyName"></param>
            <param name="propertyValue"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState.QuerySession(System.Collections.Generic.IEnumerable{System.UInt32},System.Collections.Generic.IEnumerable{System.Management.Automation.ErrorRecord}@)">
            <summary>
            Query session list by given id array.
            </summary>
            <param name="ids"></param>
            <returns>List of session wrapper objects.</returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState.QuerySession(System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IEnumerable{System.Management.Automation.ErrorRecord}@)">
            <summary>
            Query session list by given instance id array.
            </summary>
            <param name="instanceIds"></param>
            <returns>List of session wrapper objects.</returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState.QuerySession(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Management.Automation.ErrorRecord}@)">
            <summary>
            Query session list by given name array.
            </summary>
            <param name="nameArray"></param>
            <returns>List of session wrapper objects.</returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState.QuerySessionByComputerName(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Management.Automation.ErrorRecord}@)">
            <summary>
            Query session list by given computer name array.
            </summary>
            <param name="computernameArray"></param>
            <returns>List of session wrapper objects.</returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState.QuerySession(System.Collections.Generic.IEnumerable{Microsoft.Management.Infrastructure.CimSession},System.Collections.Generic.IEnumerable{System.Management.Automation.ErrorRecord}@)">
            <summary>
            Query session list by given session objects array.
            </summary>
            <param name="cimsessions"></param>
            <returns>List of session wrapper objects.</returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState.QuerySession(Microsoft.Management.Infrastructure.CimSession)">
            <summary>
            Query session wrapper object.
            </summary>
            <param name="cimsessions"></param>
            <returns>Session wrapper.</returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionState.QuerySession(System.Guid)">
            <summary>
            Query session object with given CimSessionInstanceID.
            </summary>
            <param name="cimSessionInstanceId"></param>
            <returns>CimSession object.</returns>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionBase">
            <summary>
            <para>
            Base class of all session operation classes.
            All sessions created will be held in a ConcurrentDictionary:cimSessions.
            It manages the lifecycle of the sessions being created for each
            runspace according to the state of the runspace.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionBase.#ctor">
            <summary>
            The constructor.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionBase.cimSessions">
            <summary>
            <para>
            Thread safe static dictionary to store session objects associated
            with each runspace, which is identified by a GUID. NOTE: cmdlet
            can running parallelly under more than one runspace(s).
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionBase.defaultRunspaceId">
            <summary>
            <para>
            Default runspace Id.
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionBase.sessionState">
            <summary>
            <para>
            Object used to hold all CimSessions and status data bound
            to current runspace.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionBase.CurrentRunspaceId">
            <summary>
            Get current runspace id.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionBase.DefaultRunspace_StateChanged(System.Object,System.Management.Automation.Runspaces.RunspaceStateEventArgs)">
            <summary>
            <para>
            Clean up the dictionaries if the runspace is closed or broken.
            </para>
            </summary>
            <param name="sender">Runspace.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimNewSession">
            <summary>
            <para>
            <c>CimNewSession</c> is the class to create cimSession
            based on given <c>NewCimSessionCommand</c>.
            </para>
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimNewSession.CimTestCimSessionContext">
            <summary>
            CimTestCimSessionContext.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimNewSession.CimTestCimSessionContext.#ctor(Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy,Microsoft.Management.Infrastructure.CimCmdlets.CimSessionWrapper)">
            <summary>
            <para>
            The constructor.
            </para>
            </summary>
            <param name="theProxy"></param>
            <param name="wrapper"></param>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimNewSession.CimTestCimSessionContext.CimSessionWrapper">
            <summary>
            <para>Namespace</para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimNewSession.#ctor">
            <summary>
            <para>
            The constructor.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimNewSession.NewCimSession(Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionCommand,Microsoft.Management.Infrastructure.Options.CimSessionOptions,Microsoft.Management.Infrastructure.Options.CimCredential)">
            <summary>
            Create a new <see cref="T:Microsoft.Management.Infrastructure.CimSession"/> base on given cmdlet
            and its parameter.
            </summary>
            <param name="cmdlet"></param>
            <param name="sessionOptions"></param>
            <param name="credential"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimNewSession.AddSessionToCache(Microsoft.Management.Infrastructure.CimSession,Microsoft.Management.Infrastructure.CimCmdlets.XOperationContextBase,Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationBase)">
            <summary>
            <para>
            Add session to global cache,
            </para>
            </summary>
            <param name="cimSession"></param>
            <param name="context"></param>
            <param name="cmdlet"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimNewSession.ProcessActions(Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationBase)">
            <summary>
            <para>
            Process all actions in the action queue.
            </para>
            </summary>
            <param name="cmdletOperation">
            Wrapper of cmdlet, <seealso cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationBase"/> for details.
            </param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimNewSession.ProcessRemainActions(Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationBase)">
            <summary>
            <para>
            Process remaining actions until all operations are completed or
            current cmdlet is terminated by user.
            </para>
            </summary>
            <param name="cmdletOperation">
            Wrapper of cmdlet, <seealso cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationBase"/> for details.
            </param>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimNewSession.cimTestSession">
            <summary>
            <para>
            <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimTestSession"/> object.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimNewSession.Disposed">
            <summary>
            <para>
            Indicates whether this object was disposed or not.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimNewSession.Dispose">
            <summary>
            <para>
            Dispose() calls Dispose(true).
            Implement IDisposable. Do not make this method virtual.
            A derived class should not be able to override this method.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimNewSession.Dispose(System.Boolean)">
            <summary>
            <para>
            Dispose(bool disposing) executes in two distinct scenarios.
            If disposing equals true, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources
            can be disposed.
            If disposing equals false, the method has been called by the
            runtime from inside the finalizer and you should not reference
            other objects. Only unmanaged resources can be disposed.
            </para>
            </summary>
            <param name="disposing">Whether it is directly called.</param>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimGetSession">
            <summary>
            <para>
            Get CimSession based on given id/instanceid/computername/name.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimGetSession.#ctor">
            <summary>
            The constructor.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimGetSession.GetCimSession(Microsoft.Management.Infrastructure.CimCmdlets.GetCimSessionCommand)">
            <summary>
            Get <see cref="T:Microsoft.Management.Infrastructure.CimSession"/> objects based on the given cmdlet
            and its parameter.
            </summary>
            <param name="cmdlet"></param>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimRemoveSession">
            <summary>
            <para>
            Get CimSession based on given id/instanceid/computername/name.
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimRemoveSession.RemoveCimSessionActionName">
            <summary>
            Remove session action string.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimRemoveSession.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimRemoveSession.RemoveCimSession(Microsoft.Management.Infrastructure.CimCmdlets.RemoveCimSessionCommand)">
            <summary>
            Remove the <see cref="T:Microsoft.Management.Infrastructure.CimSession"/> objects based on given cmdlet
            and its parameter.
            </summary>
            <param name="cmdlet"></param>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimTestSession">
            <summary>
            Class <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimTestSession"/>, which is used to
            test cimsession and execute async operations.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimTestSession.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimTestSession.TestCimSession(System.String,Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy)">
            <summary>
            Test the session connection with
            given <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> object.
            </summary>
            <param name="computerName"></param>
            <param name="proxy"></param>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.XOperationContextBase">
            <summary>
            Context base class for cross operations
            for example, some cmdlets need to query instance first and then
            remove instance, those scenarios need context object transferred
            from one operation to another.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.XOperationContextBase.Namespace">
            <summary>
            <para>namespace</para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.XOperationContextBase.Proxy">
            <summary>
            <para>
            Session proxy.
            </para>
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.InvocationContext">
            <summary>
            Class provides all information regarding the
            current invocation to the .NET API.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.InvocationContext.#ctor(Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy)">
            <summary>
            Constructor.
            </summary>
            <param name="proxy"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.InvocationContext.#ctor(System.String,Microsoft.Management.Infrastructure.CimInstance)">
            <summary>
            Constructor.
            </summary>
            <param name="proxy"></param>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.InvocationContext.ComputerName">
            <summary>
            <para>
            ComputerName of the session
            </para>
            <remarks>
            return value could be null
            </remarks>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.InvocationContext.TargetCimInstance">
            <summary>
            <para>
            CimInstance on which the current operation against.
            </para>
            <remarks>
            return value could be null
            </remarks>
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.IObjectPreProcess">
            <summary>
            Defines a method to preprocessing an result object before sending to
            output pipeline.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.IObjectPreProcess.Process(System.Object)">
            <summary>
            Performs pre processing of given result object.
            </summary>
            <param name="resultObject"></param>
            <returns>Pre-processed object.</returns>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CmdletActionEventArgs">
            <summary>
            <para>
            CmdletActionEventArgs holds a CimBaseAction object
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CmdletActionEventArgs.#ctor(Microsoft.Management.Infrastructure.CimCmdlets.CimBaseAction)">
            <summary>
            Constructor.
            </summary>
            <param name="action">CimBaseAction object bound to the event.</param>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.OperationEventArgs">
            <summary>
            OperationEventArgs holds a cancellation object, and an operation.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.OperationEventArgs.#ctor(System.IDisposable,System.IObservable{System.Object},System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="operationCancellation">Object used to cancel the operation.</param>
            <param name="operation">Async observable operation.</param>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy">
            <summary>
            <para>
            Wrapper of <see cref="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.CimSession"/> object.
            A CimSessionProxy object can only execute one operation at specific moment.
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.gOperationCounter">
            <summary>
            <para>
            global operation counter
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.temporarySessionCacheLock">
            <summary>
            Temporary CimSession cache lock.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.temporarySessionCache">
            <summary>
            <para>temporary CimSession cache</para>
            <para>Temporary CimSession means the session is created by cimcmdlets,
            which is not created by <see cref="!:New-CimSession"/> cmdlet.
            Due to some cmdlet, such as <see cref="!:Remove-CimInstance"/>
            might need to split the operation into multiple stages, i.e., query
            CimInstance firstly, then remove the CimInstance resulted from query,
            such that the temporary CimSession need to be shared between
            multiple <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> objects, introducing a
            temporary session cache is necessary to control the lifetime of the
            temporary CimSession objects.</para>
            <para>
            Once the reference count of the CimSession is decreased to 0,
            then call Dispose on it.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.AddCimSessionToTemporaryCache(Microsoft.Management.Infrastructure.CimSession)">
            <summary>
            <para>
            Add <see cref="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.CimSession"/> to temporary cache.
            If CimSession already present in cache, then increase the refcount by 1,
            otherwise insert it into the cache.
            </para>
            </summary>
            <param name="session">CimSession to be added.</param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.RemoveCimSessionFromTemporaryCache(Microsoft.Management.Infrastructure.CimSession,System.Boolean)">
            <summary>
            <para>Wrapper function to remove CimSession from cache</para>
            </summary>
            <param name="session"></param>
            <param name="dispose">Whether need to dispose the <see cref="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.CimSession"/> object.</param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.RemoveCimSessionFromTemporaryCache(Microsoft.Management.Infrastructure.CimSession)">
            <summary>
            <para>
            Remove <see cref="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.CimSession"/> from temporary cache.
            If CimSession already present in cache, then decrease the refcount by 1,
            otherwise ignore.
            If refcount became 0, call dispose on the <see cref="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.CimSession"/> object.
            </para>
            </summary>
            <param name="session">CimSession to be added.</param>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.NewCmdletActionHandler">
            <summary>
            Define delegate that handles new cmdlet action come from
            the operations related to the current CimSession object.
            </summary>
            <param name="cimSession">CimSession object, which raised the event.</param>
            <param name="actionArgs">Event args.</param>
        </member>
        <member name="E:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.OnNewCmdletAction">
            <summary>
            Define an Event based on the NewActionHandler.
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.OperationEventHandler">
            <summary>
            Define delegate that handles operation creation and complete
            issued by the current CimSession object.
            </summary>
            <param name="cimSession">CimSession object, which raised the event.</param>
            <param name="actionArgs">Event args.</param>
        </member>
        <member name="E:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.OnOperationCreated">
            <summary>
            Event triggered when a new operation is started.
            </summary>
        </member>
        <member name="E:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.OnOperationDeleted">
            <summary>
            Event triggered when a new operation is completed,
            either success or failed.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.#ctor(Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy)">
            <summary>
            Then create wrapper object by given CimSessionProxy object.
            </summary>
            <param name="computerName"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.#ctor(System.String)">
            <summary>
            Create <see cref="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.CimSession"/> by given computer name.
            Then create wrapper object.
            </summary>
            <param name="computerName"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.#ctor(System.String,Microsoft.Management.Infrastructure.Options.CimSessionOptions)">
            <summary>
            Create <see cref="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.CimSession"/> by given computer name
            and session options.
            Then create wrapper object.
            </summary>
            <param name="computerName"></param>
            <param name="sessionOptions"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.#ctor(System.String,Microsoft.Management.Infrastructure.CimInstance)">
            <summary>
            Create <see cref="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.CimSession"/> by given computer name
            and cimInstance. Then create wrapper object.
            </summary>
            <param name="computerName"></param>
            <param name="cimInstance"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.#ctor(System.String,Microsoft.Management.Infrastructure.Options.CimSessionOptions,Microsoft.Management.Infrastructure.Options.CimOperationOptions)">
            <summary>
            Create <see cref="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.CimSession"/> by given computer name,
            session options.
            </summary>
            <param name="computerName"></param>
            <param name="sessionOptions"></param>
            <param name="operOptions">Used when create async operation.</param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.#ctor(System.String,Microsoft.Management.Infrastructure.Options.CimOperationOptions)">
            <summary>
            Create <see cref="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.CimSession"/> by given computer name.
            Then create wrapper object.
            </summary>
            <param name="computerName"></param>
            <param name="operOptions">Used when create async operation.</param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.#ctor(Microsoft.Management.Infrastructure.CimSession)">
            <summary>
            Create wrapper object by given session object.
            </summary>
            <param name="session"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.#ctor(Microsoft.Management.Infrastructure.CimSession,Microsoft.Management.Infrastructure.Options.CimOperationOptions)">
            <summary>
            Create wrapper object by given session object.
            </summary>
            <param name="session"></param>
            <param name="operOptions">Used when create async operation.</param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.CreateSetSession(System.String,Microsoft.Management.Infrastructure.CimSession,Microsoft.Management.Infrastructure.Options.CimSessionOptions,Microsoft.Management.Infrastructure.Options.CimOperationOptions,System.Boolean)">
            <summary>
            Initialize CimSessionProxy object.
            </summary>
            <param name="computerName"></param>
            <param name="session"></param>
            <param name="sessionOptions"></param>
            <param name="options"></param>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.OperationTimeout">
            <summary>
            Set timeout value (seconds) of the operation.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.ResourceUri">
            <summary>
            Set resource URI of the operation.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.EnableMethodResultStreaming">
            <summary>
            Enable/Disable the method result streaming,
            it is enabled by default.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.EnablePromptUser">
            <summary>
            Enable/Disable prompt user streaming,
            it is enabled by default.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.EnablePSSemantics">
            <summary>
            Enable the pssemantics.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.KeyOnly">
            <summary>
            Set keyonly property.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.Shallow">
            <summary>
            Set Shallow flag.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.InitOption(Microsoft.Management.Infrastructure.Options.CimOperationOptions)">
            <summary>
            Initialize the operation option.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.Detach">
            <summary>
            Caller call Detach to retrieve the session
            object and control the lifecycle of the CimSession object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.AddOperation(System.IObservable{System.Object})">
            <summary>
            Add a new operation to cache.
            </summary>
            <param name="operation"></param>
            <param name="cancelObject"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.RemoveOperation(System.IObservable{System.Object})">
            <summary>
            Remove object from cache.
            </summary>
            <param name="operation"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.FireNewActionEvent(Microsoft.Management.Infrastructure.CimCmdlets.CimBaseAction)">
            <summary>
            <para>
            Trigger an event that new action available
            </para>
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.FireOperationCreatedEvent(System.IDisposable,System.IObservable{System.Object})">
            <summary>
            <para>
            Trigger an event that new operation is created
            </para>
            </summary>
            <param name="cancelOperation"></param>
            <param name="operation"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.FireOperationDeletedEvent(System.IObservable{System.Object},System.Boolean)">
            <summary>
            <para>
            Trigger an event that an operation is deleted
            </para>
            </summary>
            <param name="operation"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.WriteMessage(System.UInt32,System.String)">
            <summary>
            <para>
            WriteMessage callback
            </para>
            </summary>
            <param name="channel"></param>
            <param name="message"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.WriteOperationStartMessage(System.String,System.Collections.Hashtable)">
            <summary>
            <para>
            Write operation start verbose message
            </para>
            </summary>
            <param name="operation"></param>
            <param name="parameters"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.WriteOperationCompleteMessage(System.String)">
            <summary>
            <para>
            Write operation complete verbose message
            </para>
            </summary>
            <param name="operation"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.WriteProgress(System.String,System.String,System.String,System.UInt32,System.UInt32)">
            <summary>
            <para>
            WriteProgress callback
            </para>
            </summary>
            <param name="activity"></param>
            <param name="currentOperation"></param>
            <param name="statusDescription"></param>
            <param name="percentageCompleted"></param>
            <param name="secondsRemaining"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.WriteError(Microsoft.Management.Infrastructure.CimInstance)">
            <summary>
            <para>
            WriteError callback
            </para>
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.PromptUser(System.String,Microsoft.Management.Infrastructure.Options.CimPromptType)">
            <summary>
            PromptUser callback.
            </summary>
            <param name="message"></param>
            <param name="prompt"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.ResultEventHandler(System.Object,Microsoft.Management.Infrastructure.CimCmdlets.AsyncResultEventArgsBase)" -->
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.AddShowComputerNameMarker(System.Object)">
            <summary>
            This method adds a note property to <paramref name="o"/>,
            which will cause the default PowerShell formatting and output
            to include PSComputerName column/property in the display.
            </summary>
            <param name="o"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.CreateInstanceAsync(System.String,Microsoft.Management.Infrastructure.CimInstance)">
            <summary>
            <para>
            create a cim instance asynchronously
            </para>
            </summary>
            <param name="namespaceName"></param>
            <param name="instance"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.DeleteInstanceAsync(System.String,Microsoft.Management.Infrastructure.CimInstance)">
            <summary>
            Delete a cim instance asynchronously.
            </summary>
            <param name="namespaceName"></param>
            <param name="instance"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.GetInstanceAsync(System.String,Microsoft.Management.Infrastructure.CimInstance)">
            <summary>
            Get cim instance asynchronously.
            </summary>
            <param name="namespaceName"></param>
            <param name="instanceId"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.ModifyInstanceAsync(System.String,Microsoft.Management.Infrastructure.CimInstance)">
            <summary>
            Modify cim instance asynchronously.
            </summary>
            <param name="namespaceName"></param>
            <param name="instance"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.EnumerateAssociatedInstancesAsync(System.String,Microsoft.Management.Infrastructure.CimInstance,System.String,System.String,System.String,System.String)">
            <summary>
            Enumerate cim instance associated with the
            given instance asynchronously.
            </summary>
            <param name="namespaceName"></param>
            <param name="sourceInstance"></param>
            <param name="associationClassName"></param>
            <param name="resultClassName"></param>
            <param name="sourceRole"></param>
            <param name="resultRole"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.EnumerateInstancesAsync(System.String,System.String)">
            <summary>
            Enumerate cim instance asynchronously.
            </summary>
            <param name="namespaceName"></param>
            <param name="className"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.EnumerateReferencingInstancesAsync(System.String,Microsoft.Management.Infrastructure.CimInstance,System.String,System.String)">
            <summary>
            <para>
            Enumerate referencing instance associated with
            the given instance asynchronously
            </para>
            </summary>
            <param name="namespaceName"></param>
            <param name="sourceInstance"></param>
            <param name="associationClassName"></param>
            <param name="sourceRole"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.QueryInstancesAsync(System.String,System.String,System.String)">
            <summary>
            <para>
            Query cim instance asynchronously
            </para>
            </summary>
            <param name="namespaceName"></param>
            <param name="queryDialect"></param>
            <param name="queryExpression"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.EnumerateClassesAsync(System.String)">
            <summary>
            Enumerate cim class asynchronously.
            </summary>
            <param name="namespaceName"></param>
            <param name="className"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.EnumerateClassesAsync(System.String,System.String)">
            <summary>
            Enumerate cim class asynchronously.
            </summary>
            <param name="namespaceName"></param>
            <param name="className"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.GetClassAsync(System.String,System.String)">
            <summary>
            Get cim class asynchronously.
            </summary>
            <param name="namespaceName"></param>
            <param name="className"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.InvokeMethodAsync(System.String,Microsoft.Management.Infrastructure.CimInstance,System.String,Microsoft.Management.Infrastructure.CimMethodParametersCollection)">
            <summary>
            Invoke method of a given cim instance asynchronously.
            </summary>
            <param name="namespaceName"></param>
            <param name="instance"></param>
            <param name="methodName"></param>
            <param name="methodParameters"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.InvokeMethodAsync(System.String,System.String,System.String,Microsoft.Management.Infrastructure.CimMethodParametersCollection)">
            <summary>
            Invoke static method of a given class asynchronously.
            </summary>
            <param name="namespaceName"></param>
            <param name="className"></param>
            <param name="methodName"></param>
            <param name="methodParameters"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.SubscribeAsync(System.String,System.String,System.String)">
            <summary>
            <para>
            Subscribe to cim indication asynchronously
            </para>
            </summary>
            <param name="namespaceName"></param>
            <param name="queryDialect"></param>
            <param name="queryExpression"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.TestConnectionAsync">
            <summary>
            <para>
            Test connection asynchronously
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.PreNewActionEvent(Microsoft.Management.Infrastructure.CimCmdlets.CmdletActionEventArgs)">
            <summary>
            Called before new action event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.PreOperationDeleteEvent(Microsoft.Management.Infrastructure.CimCmdlets.OperationEventArgs)">
            <summary>
            Called before operation delete event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.PostNewActionEvent(Microsoft.Management.Infrastructure.CimCmdlets.CmdletActionEventArgs)">
            <summary>
            Called after new action event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.PostOperationCreateEvent(Microsoft.Management.Infrastructure.CimCmdlets.OperationEventArgs)">
            <summary>
            Called after operation create event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.PostOperationDeleteEvent(Microsoft.Management.Infrastructure.CimCmdlets.OperationEventArgs)">
            <summary>
            Called after operation delete event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.operationID">
            <summary>
            <para>
            Unique operation ID
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.CimSession">
            <summary>
            The CimSession object managed by this proxy object,
            which is either created by constructor OR passed in by caller.
            The session will be closed while disposing this proxy object
            if it is created by constuctor.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.TargetCimInstance">
            <summary>
            The current CimInstance object, against which issued
            current operation, it could be null.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.isTemporaryCimSession">
            <summary>
            Flag controls whether session object should be closed or not.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.OperationOptions">
            <summary>
            The CimOperationOptions object, which specifies the options
            of the operation against the session object.
            Caller can control the timeout, method streaming support, and
            extended ps semantics support, etc.
            The setting MUST be set before start new operation on the
            this proxy object.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.Completed">
            <summary>
            All operations completed.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.stateLock" -->
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.operation">
            <summary>
            The operation issued by cimSession.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.operationName">
            <summary>
            The current operation name.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.operationParameters">
            <summary>
            The current operation parameters.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy._cancelOperation">
            <summary>
            Handler used to cancel operation.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy._cancelOperationDisposed">
            <summary>
            CancelOperation disposed flag.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.DisposeCancelOperation">
            <summary>
            Dispose the cancel operation.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.CancelOperation">
            <summary>
            Set the cancel operation.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.Protocol">
            <summary>
            Current protocol name
            DCOM or WSMAN.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.ContextObject">
            <summary>
            Cross operation context object.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.invocationContextObject">
            <summary>
            Invocation context object.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.ObjectPreProcess">
            <summary>
            A preprocess object to pre-processing the result object,
            for example, adding PSTypeName, etc.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.isDefaultSession">
            <summary>
            <see cref="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.isDefaultSession"/> is <c>true</c> if this <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> was
            created to handle the "default" session, in cases where cmdlets are invoked without
            ComputerName and/or CimSession parameters.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy._disposed">
            <summary>
            IDisposable interface.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.DisposeTemporaryCimSession">
            <summary>
            <para>
            Dispose temporary <see cref="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.CimSession"/>.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.ConsumeCimInstanceAsync(System.IObservable{Microsoft.Management.Infrastructure.CimInstance},Microsoft.Management.Infrastructure.CimCmdlets.CimResultContext)">
            <summary>
            <para>
            Consume the results of async operations
            </para>
            </summary>
            <param name="asyncResult"></param>
            <param name="cimResultContext"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.ConsumeCimInstanceAsync(System.IObservable{Microsoft.Management.Infrastructure.CimInstance},System.Boolean,Microsoft.Management.Infrastructure.CimCmdlets.CimResultContext)">
            <summary>
            <para>
            Consume the CimInstance results of async operations.
            </para>
            </summary>
            <param name="asyncResult"></param>
            <param name="ignoreResultObjects"></param>
            <param name="cimResultContext"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.ConsumeObjectAsync(System.IObservable{System.Object},Microsoft.Management.Infrastructure.CimCmdlets.CimResultContext)">
            <summary>
            <para>
            Consume the results of async operations
            </para>
            </summary>
            <param name="asyncResult"></param>
            <param name="cimResultContext"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.ConsumeCimClassAsync(System.IObservable{Microsoft.Management.Infrastructure.CimClass},Microsoft.Management.Infrastructure.CimCmdlets.CimResultContext)">
            <summary>
            <para>
            Consume the <see cref="T:Microsoft.Management.Infrastructure.CimClass"/> of async operations
            </para>
            </summary>
            <param name="asyncResult"></param>
            <param name="cimResultContext"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.ConsumeCimSubscriptionResultAsync(System.IObservable{Microsoft.Management.Infrastructure.CimSubscriptionResult},Microsoft.Management.Infrastructure.CimCmdlets.CimResultContext)">
            <summary>
            <para>
            Consume the <see cref="T:Microsoft.Management.Infrastructure.CimSubscriptionResult"/> of async operations
            </para>
            </summary>
            <param name="asyncResult"></param>
            <param name="cimResultContext"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.ConsumeCimInvokeMethodResultAsync(System.IObservable{Microsoft.Management.Infrastructure.CimMethodResultBase},System.String,System.String,Microsoft.Management.Infrastructure.CimCmdlets.CimResultContext)">
            <summary>
            <para>
            Consume the <see cref="T:Microsoft.Management.Infrastructure.CimMethodResultBase"/> of async operations
            </para>
            </summary>
            <param name="asyncResult"></param>
            <param name="className"></param>
            <param name="methodName"></param>
            <param name="cimResultContext"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.CheckAvailability">
            <summary>
            <para>
            Check whether current proxy object is available
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.AssertSession">
            <summary>
            <para>
            Check the wrapped <see cref="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.CimSession"/> object
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.CreateCimSessionByComputerName(System.String)">
            <summary>
            <para>
            Create <see cref="T:Microsoft.Management.Infrastructure.Options.CimSessionOptions"/> based on the given computerName
            </para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy.CreateCimSessionOption(System.String,System.UInt32,Microsoft.Management.Infrastructure.Options.CimCredential)">
            <summary>
            <para>
            Create <see cref="T:Microsoft.Management.Infrastructure.Options.CimSessionOptions"/> based on the given computerName,
            timeout and credential
            </para>
            </summary>
            <param name="computerName"></param>
            <param name="timeout"></param>
            <param name="credential"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxyTestConnection">
            <summary>
            <para>
            Write session to pipeline after test connection success
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxyTestConnection.#ctor(System.String,Microsoft.Management.Infrastructure.Options.CimSessionOptions)">
            <summary>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimSession"/> by given computer name
            and session options.
            Then create wrapper object.
            </summary>
            <param name="computerName"></param>
            <param name="sessionOptions"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxyTestConnection.PreOperationDeleteEvent(Microsoft.Management.Infrastructure.CimCmdlets.OperationEventArgs)">
            <summary>
            Called after operation delete event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxyGetCimClass">
            <summary>
            <para>
            Write CimClass to pipeline if the CimClass satisfied
            the given conditions
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxyGetCimClass.#ctor(System.String)">
            <summary>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimSession"/> by given computer name.
            Then create wrapper object.
            </summary>
            <param name="computerName"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxyGetCimClass.#ctor(Microsoft.Management.Infrastructure.CimSession)">
            <summary>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimSession"/> by given computer name
            and session options.
            Then create wrapper object.
            </summary>
            <param name="computerName"></param>
            <param name="sessionOptions"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxyGetCimClass.PreNewActionEvent(Microsoft.Management.Infrastructure.CimCmdlets.CmdletActionEventArgs)">
            <summary>
            Called before new action event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxyNewCimInstance">
            <summary>
            <para>
            Get full <see cref="T:Microsoft.Management.Infrastructure.CimInstance"/> if create successfully.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxyNewCimInstance.#ctor(System.String,Microsoft.Management.Infrastructure.CimCmdlets.CimNewCimInstance)">
            <summary>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimSession"/> by given computer name.
            Then create wrapper object.
            </summary>
            <param name="computerName"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxyNewCimInstance.#ctor(Microsoft.Management.Infrastructure.CimSession,Microsoft.Management.Infrastructure.CimCmdlets.CimNewCimInstance)">
            <summary>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimSession"/> by given computer name
            and session options.
            Then create wrapper object.
            </summary>
            <param name="computerName"></param>
            <param name="sessionOptions"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxyNewCimInstance.PreNewActionEvent(Microsoft.Management.Infrastructure.CimCmdlets.CmdletActionEventArgs)">
            <summary>
            Called before new action event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxySetCimInstance">
            <summary>
            <para>
            Support PassThru for set-ciminstance.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxySetCimInstance.#ctor(Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy,System.Boolean)">
            <summary>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimSession"/> by given <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> object.
            Then create wrapper object.
            </summary>
            <param name="originalProxy"><see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy"/> object to clone.</param>
            <param name="passThru">PassThru, true means output the modified instance; otherwise does not output.</param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxySetCimInstance.#ctor(System.String,Microsoft.Management.Infrastructure.CimInstance,System.Boolean)">
            <summary>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimSession"/> by given computer name.
            Then create wrapper object.
            </summary>
            <param name="computerName"></param>
            <param name="cimInstance"></param>
            <param name="passThru"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxySetCimInstance.#ctor(Microsoft.Management.Infrastructure.CimSession,System.Boolean)">
            <summary>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimSession"/> by given computer name
            and session options.
            Then create wrapper object.
            </summary>
            <param name="computerName"></param>
            <param name="sessionOptions"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxySetCimInstance.PreNewActionEvent(Microsoft.Management.Infrastructure.CimCmdlets.CmdletActionEventArgs)">
            <summary>
            Called before new action event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxySetCimInstance.passThru">
            <summary>
            Ture indicates need to output the modified result.
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSetCimInstanceContext">
            <summary>
            Containing all necessary information originated from
            the parameters of <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.InvokeCimMethodCommand"/>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSetCimInstanceContext.#ctor(System.String,System.Collections.IDictionary,Microsoft.Management.Infrastructure.CimCmdlets.CimSessionProxy,System.String,System.Boolean)">
            <summary>
            <para>
            Constructor
            </para>
            </summary>
            <param name="theNamespace"></param>
            <param name="theCollection"></param>
            <param name="theProxy"></param>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSetCimInstanceContext.Property">
            <summary>
            <para>property value</para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSetCimInstanceContext.ParameterSetName">
            <summary>
            <para>parameter set name</para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimSetCimInstanceContext.PassThru">
            <summary>
            <para>PassThru value</para>
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSetCimInstance">
            <summary>
            <para>
            Implements operations of set-ciminstance cmdlet.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSetCimInstance.#ctor">
            <summary>
            <para>
            Constructor
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSetCimInstance.SetCimInstance(Microsoft.Management.Infrastructure.CimCmdlets.SetCimInstanceCommand)">
            <summary>
            <para>
            Base on parametersetName to set ciminstances
            </para>
            </summary>
            <param name="cmdlet"><see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.SetCimInstanceCommand"/> object.</param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSetCimInstance.SetCimInstance(Microsoft.Management.Infrastructure.CimInstance,Microsoft.Management.Infrastructure.CimCmdlets.CimSetCimInstanceContext,Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationBase)">
            <summary>
            <para>
            Set <see cref="T:Microsoft.Management.Infrastructure.CimInstance"/> with properties specified in cmdlet
            </para>
            </summary>
            <param name="cimInstance"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimSetCimInstance.SetProperty(System.Collections.IDictionary,Microsoft.Management.Infrastructure.CimInstance@,System.Exception@)">
            <summary>
            <para>
            Set the properties value to be modified to the given
            <see cref="T:Microsoft.Management.Infrastructure.CimInstance"/>
            </para>
            </summary>
            <param name="properties"></param>
            <param name="cimInstance"></param>
            <param name="terminationMessage"></param>
            <returns></returns>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimSetCimInstance.action">
            <summary>
            Action.
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.ErrorToErrorRecord">
            <summary>
            <para>
            Convert error or exception to <see cref="T:System.Management.Automation.ErrorRecord"/>
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.ErrorToErrorRecord.ErrorRecordFromAnyException(Microsoft.Management.Infrastructure.CimCmdlets.InvocationContext,System.Exception,Microsoft.Management.Infrastructure.CimCmdlets.CimResultContext)">
            <summary>
            <para>
            Convert ErrorRecord from exception object, <see cref="T:System.Exception"/>
            can be either <see cref="T:Microsoft.Management.Infrastructure.CimException"/> or general <see cref="T:System.Exception"/>.
            </para>
            </summary>
            <param name="inner"></param>
            <param name="context">The context starting the operation, which generated the error.</param>
            <param name="cimResultContext">The CimResultContext used to provide ErrorSource, etc. info.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.ErrorToErrorRecord.CreateFromCimException(Microsoft.Management.Infrastructure.CimCmdlets.InvocationContext,Microsoft.Management.Infrastructure.CimException,Microsoft.Management.Infrastructure.CimCmdlets.CimResultContext)">
            <summary>
            Create <see cref="T:System.Management.Automation.ErrorRecord"/> from <see cref="T:Microsoft.Management.Infrastructure.CimException"/> object.
            </summary>
            <param name="context"></param>
            <param name="cimException"></param>
            <param name="cimResultContext">The CimResultContext used to provide ErrorSource, etc. info.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.ErrorToErrorRecord.InitializeErrorRecord(Microsoft.Management.Infrastructure.CimCmdlets.InvocationContext,System.Exception,System.String,System.Management.Automation.ErrorCategory,Microsoft.Management.Infrastructure.CimCmdlets.CimResultContext)">
            <summary>
            Create <see cref="T:System.Management.Automation.ErrorRecord"/> from <see cref="T:System.Exception"/> object.
            </summary>
            <param name="context"></param>
            <param name="exception"></param>
            <param name="errorId"></param>
            <param name="errorCategory"></param>
            <param name="cimResultContext">The CimResultContext used to provide ErrorSource, etc. info.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.ErrorToErrorRecord.InitializeErrorRecord(Microsoft.Management.Infrastructure.CimCmdlets.InvocationContext,Microsoft.Management.Infrastructure.CimException,Microsoft.Management.Infrastructure.CimCmdlets.CimResultContext)">
            <summary>
            Create <see cref="T:System.Management.Automation.ErrorRecord"/> from <see cref="T:Microsoft.Management.Infrastructure.CimException"/> object.
            </summary>
            <param name="context"></param>
            <param name="cimException"></param>
            <param name="cimResultContext">The CimResultContext used to provide ErrorSource, etc. info.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.ErrorToErrorRecord.InitializeErrorRecordCore(Microsoft.Management.Infrastructure.CimCmdlets.InvocationContext,System.Exception,System.String,System.Management.Automation.ErrorCategory,Microsoft.Management.Infrastructure.CimCmdlets.CimResultContext)">
            <summary>
            Create <see cref="T:System.Management.Automation.ErrorRecord"/> from <see cref="T:System.Exception"/> object.
            </summary>
            <param name="context"></param>
            <param name="exception"></param>
            <param name="errorId"></param>
            <param name="errorCategory"></param>
            <param name="cimResultContext">The CimResultContext used to provide ErrorSource, etc. info.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.ErrorToErrorRecord.ConvertCimExceptionToErrorCategory(Microsoft.Management.Infrastructure.CimException)">
            <summary>
            Convert <see cref="T:Microsoft.Management.Infrastructure.CimException"/> to <see cref="T:System.Management.Automation.ErrorCategory"/>.
            </summary>
            <param name="cimException"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.ErrorToErrorRecord.ConvertCimNativeErrorCodeToErrorCategory(Microsoft.Management.Infrastructure.NativeErrorCode)">
            <summary>
            Convert <see cref="T:Microsoft.Management.Infrastructure.NativeErrorCode"/> to <see cref="T:System.Management.Automation.ErrorCategory"/>.
            </summary>
            <param name="nativeErrorCode"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.ErrorToErrorRecord.ConvertCimErrorToErrorCategory(Microsoft.Management.Infrastructure.CimInstance)">
            <summary>
            Convert <see cref="!:cimError"/> to <see cref="T:System.Management.Automation.ErrorCategory"/>.
            </summary>
            <param name="cimError"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimWriteError">
            <summary>
            <para>
            Write error to pipeline
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimWriteError.#ctor(Microsoft.Management.Infrastructure.CimInstance,Microsoft.Management.Infrastructure.CimCmdlets.InvocationContext)">
            <summary>
            Constructor with an <see cref="T:Microsoft.Management.Infrastructure.CimInstance"/> error.
            </summary>
            <param name="error"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimWriteError.#ctor(System.Exception,Microsoft.Management.Infrastructure.CimCmdlets.InvocationContext,Microsoft.Management.Infrastructure.CimCmdlets.CimResultContext)">
            <summary>
            Construct with an exception object.
            </summary>
            <param name="exception"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimWriteError.Execute(Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationBase)">
            <summary>
            <para>
            Write error to pipeline
            </para>
            </summary>
            <param name="cmdlet"></param>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimWriteError.error">
            <summary>
            <para>
            Error instance
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimWriteError.Exception">
            <summary>
            <para>
            Exception object
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimWriteError.invocationContext">
            <summary>
            <para>
            <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.InvocationContext"/> object that contains
            the information while issuing the current operation
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimWriteError.cimResultContext">
            <summary>
            <see cref="!:CimResultConte"/>
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimWriteMessage">
            <summary>
            <para>
            Write message to message channel
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimWriteMessage.channel">
            <summary>
            Channel id.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimWriteMessage.message">
            <summary>
            Message to write to the channel.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimWriteMessage.#ctor(System.UInt32,System.String)">
            <summary>
            Constructor method.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimWriteMessage.Execute(Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationBase)">
            <summary>
            <para>
            Write message to the target channel
            </para>
            </summary>
            <param name="cmdlet"></param>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimWriteProgress">
            <summary>
            <para>
            Write progress record of given activity
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimWriteProgress.#ctor(System.String,System.Int32,System.String,System.String,System.UInt32,System.UInt32)">
            <summary>
            Constructor.
            </summary>
            <param name="activity">
             Activity identifier of the given activity
            </param>
            <param name="currentOperation">
            current operation description of the given activity
            </param>
            <param name="statusDescription">
            current status description of the given activity
            </param>
            <param name="percentageCompleted">
            percentage completed of the given activity
            </param>
            <param name="secondsRemaining">
            how many seconds remained for the given activity
            </param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimWriteProgress.Execute(Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationBase)">
            <summary>
            <para>
            Write progress record to powershell
            </para>
            </summary>
            <param name="cmdlet"></param>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimWriteProgress.activity">
            <summary>
            Activity of the given activity.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimWriteProgress.activityID">
            <summary>
            Activity identifier of the given activity.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimWriteProgress.currentOperation">
            <summary>
            Current operation text of the given activity.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimWriteProgress.statusDescription">
            <summary>
            Status description of the given activity.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimWriteProgress.percentageCompleted">
            <summary>
            Percentage completed of the given activity.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CimWriteProgress.secondsRemaining">
            <summary>
            How many seconds remained for the given activity.
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CimWriteResultObject">
            <summary>
            <para>
            Write result object to ps pipeline
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimWriteResultObject.#ctor(System.Object,Microsoft.Management.Infrastructure.CimCmdlets.XOperationContextBase)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CimWriteResultObject.Execute(Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationBase)">
            <summary>
            <para>
            Write result object to ps pipeline
            </para>
            </summary>
            <param name="cmdlet"></param>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.CimWriteResultObject.Result">
            <summary>
            Result object.
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationBase">
            <summary>
            <para>
            Wrapper of Cmdlet, forward the operation to Cmdlet directly.
            This is for unit test purpose, unit test can derive from this class,
            to hook up all of the cmdlet related operation and verify the correctness.
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationBase.cmdlet">
            <summary>
            <para>
            Wrap the Cmdlet object.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationBase.ShouldContinue(System.String,System.String)">
            <summary>
            <para>
            Wrap the Cmdlet methods, for testing purpose.
            Test binary can define a child class of CmdletOperationBase.
            While Execute method of <seealso cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimBaseAction"/> accept the
            object of CmdletOperationBase as parameter.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationBase.ThrowTerminatingError(System.Exception,System.String)">
            <summary>
            <para>
            Throw terminating error
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationBase.#ctor(System.Management.Automation.Cmdlet)">
            <summary>
            Constructor method.
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationRemoveCimInstance">
            <summary>
            <para>
            Wrapper of Cmdlet, override WriteObject function call since
            we need to remove <see cref="T:Microsoft.Management.Infrastructure.CimInstance"/>.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationRemoveCimInstance.#ctor(System.Management.Automation.Cmdlet,Microsoft.Management.Infrastructure.CimCmdlets.CimRemoveCimInstance)">
            <summary>
            Constructor method.
            </summary>
            <param name="cmdlet"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationRemoveCimInstance.WriteObject(System.Object,Microsoft.Management.Infrastructure.CimCmdlets.XOperationContextBase)">
            <summary>
            <para>
            Object here need to be removed if it is CimInstance
            </para>
            </summary>
            <param name="sendToPipeline"></param>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationSetCimInstance">
            <summary>
            <para>
            Wrapper of Cmdlet, override WriteObject function call since
            we need to set <see cref="T:Microsoft.Management.Infrastructure.CimInstance"/>.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationSetCimInstance.#ctor(System.Management.Automation.Cmdlet,Microsoft.Management.Infrastructure.CimCmdlets.CimSetCimInstance)">
            <summary>
            Constructor method.
            </summary>
            <param name="cmdlet"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationSetCimInstance.WriteObject(System.Object,Microsoft.Management.Infrastructure.CimCmdlets.XOperationContextBase)">
            <summary>
            <para>
            Object here need to be removed if it is CimInstance
            </para>
            </summary>
            <param name="sendToPipeline"></param>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationInvokeCimMethod">
            <summary>
            <para>
            Wrapper of Cmdlet, override WriteObject function call since
            we need to invoke cim method.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationInvokeCimMethod.#ctor(System.Management.Automation.Cmdlet,Microsoft.Management.Infrastructure.CimCmdlets.CimInvokeCimMethod)">
            <summary>
            Constructor method.
            </summary>
            <param name="cmdlet"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationInvokeCimMethod.WriteObject(System.Object,Microsoft.Management.Infrastructure.CimCmdlets.XOperationContextBase)">
            <summary>
            <para>
            Object here need to be removed if it is CimInstance
            </para>
            </summary>
            <param name="sendToPipeline"></param>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationTestCimSession">
            <summary>
            <para>
            Wrapper of Cmdlet, override WriteObject function call since
            we need to add cim session to global cache.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationTestCimSession.#ctor(System.Management.Automation.Cmdlet,Microsoft.Management.Infrastructure.CimCmdlets.CimNewSession)">
            <summary>
            Constructor method.
            </summary>
            <param name="cmdlet"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.CmdletOperationTestCimSession.WriteObject(System.Object,Microsoft.Management.Infrastructure.CimCmdlets.XOperationContextBase)">
            <summary>
            <para>
            Add session object to cache
            </para>
            </summary>
            <param name="sendToPipeline"></param>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.GetCimAssociatedInstanceCommand">
            <summary>
            <para>
            The Cmdlet retrieves instances connected to the given instance, which
            is called the source instance, via a given association. In an
            association each instance has a named role, and the same instance can
            participate in an association in different roles. Hence, the Cmdlet
            takes SourceRole and AssociatorRole parameters in addition to the
            Association parameter.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.GetCimAssociatedInstanceCommand.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimAssociatedInstanceCommand.Association">
            <summary>
            The following is the definition of the input parameter "Association".
            Specifies the class name of the association to be traversed from the
            SourceRole to AssociatorRole.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimAssociatedInstanceCommand.ResultClassName">
            <summary>
            The following is the definition of the input parameter "ResultClassName".
            Specifies the class name of the result class name, which associated with
            the given instance.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimAssociatedInstanceCommand.InputObject">
            <summary>
            <para>
            The following is the definition of the input parameter "InputObject".
            Provides the instance from which the association traversal is to begin.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimAssociatedInstanceCommand.CimInstance">
            <summary>
            Property for internal usage purpose.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimAssociatedInstanceCommand.Namespace">
            <summary>
            The following is the definition of the input parameter "Namespace".
            Identifies the Namespace in which the source class, indicated by ClassName,
            is registered.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimAssociatedInstanceCommand.OperationTimeoutSec">
            <summary>
            The following is the definition of the input parameter "OperationTimeoutSec".
            Specifies the operation timeout after which the client operation should be
            canceled. The default is the CimSession operation timeout. If this parameter
            is specified, then this value takes precedence over the CimSession
            OperationTimeout.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimAssociatedInstanceCommand.ResourceUri">
            <summary>
            <para>
            The following is the definition of the input parameter "ResourceUri".
            Define the Resource Uri for which the instances are retrieved.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimAssociatedInstanceCommand.ComputerName">
            <summary>
            <para>
            The following is the definition of the input parameter "ComputerName".
            Specifies the name of the computer where the source instance is stored and
            where the association traversal should begin.
            </para>
            <para>
            This is an optional parameter and if it is not provided, the default value
            will be "localhost".
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimAssociatedInstanceCommand.CimSession">
            <summary>
            The following is the definition of the input parameter "CimSession".
            Identifies the CimSession which is to be used to retrieve the instances.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimAssociatedInstanceCommand.KeyOnly">
            <summary>
            <para>
            The following is the definition of the input parameter "KeyOnly".
            Indicates that only key properties of the retrieved instances should be
            returned to the client.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.GetCimAssociatedInstanceCommand.BeginProcessing">
            <summary>
            BeginProcessing method.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.GetCimAssociatedInstanceCommand.ProcessRecord">
            <summary>
            ProcessRecord method.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.GetCimAssociatedInstanceCommand.EndProcessing">
            <summary>
            EndProcessing method.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.GetCimAssociatedInstanceCommand.GetOperationAgent">
            <summary>
            <para>
            Get <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimGetAssociatedInstance"/> object, which is
            used to delegate all Get-CimAssociatedInstance operations.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.GetCimAssociatedInstanceCommand.CreateOperationAgent">
            <summary>
            <para>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimGetAssociatedInstance"/> object, which is
            used to delegate all Get-CimAssociatedInstance operations.
            </para>
            </summary>
            <returns></returns>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.GetCimAssociatedInstanceCommand.Noun">
            <summary>
            Noun of current cmdlet.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.GetCimAssociatedInstanceCommand.parameters">
            <summary>
            Static parameter definition entries.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.GetCimAssociatedInstanceCommand.parameterSets">
            <summary>
            Static parameter set entries.
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.GetCimClassCommand">
            <summary>
            <para>
            Enables the user to enumerate the list of CIM Classes under a specific
            Namespace. If no list of classes is given, the Cmdlet returns all
            classes in the given namespace.
            </para>
            <para>
            NOTES: The class instance contains the Namespace properties
            Should the class remember what Session it came from? No.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.GetCimClassCommand.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimClassCommand.ClassName">
            <summary>
            <para>
            The following is the definition of the input parameter "ClassName".
            </para>
            <para>
            Wildcard expansion should be allowed.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimClassCommand.Namespace">
            <summary>
            <para>
            The following is the definition of the input parameter "Namespace".
            Specifies the Namespace under which to look for the specified class name.
            If no class name is specified, the cmdlet should return all classes under
            the specified Namespace.
            </para>
            <para>
            Default namespace is root\cimv2
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimClassCommand.OperationTimeoutSec">
            <summary>
            The following is the definition of the input parameter "OperationTimeoutSec".
            Enables the user to specify the operation timeout in Seconds. This value
            overwrites the value specified by the CimSession Operation timeout.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimClassCommand.CimSession">
            <summary>
            The following is the definition of the input parameter "Session".
            Uses a CimSession context.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimClassCommand.ComputerName">
            <summary>
            <para>The following is the definition of the input parameter "ComputerName".
            Provides the name of the computer from which to retrieve the <see cref="T:Microsoft.Management.Infrastructure.CimClass"/>
            </para>
            <para>
            If no ComputerName is specified the default value is "localhost"
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimClassCommand.MethodName">
            <summary>
            <para>
            The following is the definition of the input parameter "MethodName",
            Which may contains wildchar.
            Then Filter the <see cref="T:Microsoft.Management.Infrastructure.CimClass"/> by given methodname
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimClassCommand.PropertyName">
            <summary>
            <para>
            The following is the definition of the input parameter "PropertyName",
            Which may contains wildchar.
            Filter the <see cref="T:Microsoft.Management.Infrastructure.CimClass"/> by given property name.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimClassCommand.QualifierName">
            <summary>
            <para>
            The following is the definition of the input parameter "QualifierName",
            Which may contains wildchar.
            Filter the <see cref="T:Microsoft.Management.Infrastructure.CimClass"/> by given methodname
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.GetCimClassCommand.BeginProcessing">
            <summary>
            BeginProcessing method.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.GetCimClassCommand.ProcessRecord">
            <summary>
            ProcessRecord method.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.GetCimClassCommand.EndProcessing">
            <summary>
            EndProcessing method.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.GetCimClassCommand.GetOperationAgent">
            <summary>
            <para>
            Get <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimNewCimInstance"/> object, which is
            used to delegate all New-CimInstance operations.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.GetCimClassCommand.CreateOperationAgent">
            <summary>
            <para>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimGetCimClass"/> object, which is
            used to delegate all Get-CimClass operations.
            </para>
            </summary>
            <returns></returns>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.GetCimClassCommand.Noun">
            <summary>
            Noun of current cmdlet.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.GetCimClassCommand.parameters">
            <summary>
            Static parameter definition entries.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.GetCimClassCommand.parameterSets">
            <summary>
            Static parameter set entries.
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand">
            <summary>
            Returns zero, one or more CIM (dynamic) instances with the properties
            specified in the Property parameter, KeysOnly parameter or the Select clause
            of the Query parameter.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand.CimSession">
            <summary>
            <para>
            The following is the definition of the input parameter "CimSession".
            Identifies the CimSession which is to be used to retrieve the instances.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand.ClassName">
            <summary>
            <para>
            The following is the definition of the input parameter "ClassName".
            Define the class name for which the instances are retrieved.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand.ResourceUri">
            <summary>
            <para>
            The following is the definition of the input parameter "ResourceUri".
            Define the Resource Uri for which the instances are retrieved.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand.ComputerName">
            <summary>
            <para>The following is the definition of the input parameter "ComputerName".
            Provides the name of the computer from which to retrieve the instances. The
            ComputerName is used to create a temporary CimSession with default parameter
            values, which is then used to retrieve the instances.
            </para>
            <para>
            If no ComputerName is specified the default value is "localhost"
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand.KeyOnly">
            <summary>
            <para>
            The following is the definition of the input parameter "KeyOnly".
            Indicates that only key properties of the retrieved instances should be
            returned to the client.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand.Namespace">
            <summary>
            <para>
            The following is the definition of the input parameter "Namespace".
            Identifies the Namespace in which the class, indicated by ClassName, is
            registered.
            </para>
            <para>
            Default namespace is 'root\cimv2' if this property is not specified.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand.OperationTimeoutSec">
            <summary>
            <para>
            The following is the definition of the input parameter "OperationTimeoutSec".
            Specifies the operation timeout after which the client operation should be
            canceled. The default is the CimSession operation timeout. If this parameter
            is specified, then this value takes precedence over the CimSession
            OperationTimeout.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand.InputObject">
            <summary>
            <para>The following is the definition of the input parameter "InputObject".
            Provides the <see cref="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand.CimInstance"/> that containing the [Key] properties,
            based on the key properties to retrieve the <see cref="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand.CimInstance"/>.
            </para>
            <para>
            User can call New-CimInstance to create the CimInstance with key only
            properties, for example:
            New-CimInstance -ClassName C -Namespace root\cimv2
             -Property @{CreationClassName="CIM_VirtualComputerSystem";Name="VM3358"}
             -Keys {"CreationClassName", "Name"} -Local
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand.CimInstance">
            <summary>
            Property for internal usage purpose.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand.Query">
            <summary>
            The following is the definition of the input parameter "Query".
            Specifies the query string for what instances, and what properties of those
            instances, should be retrieve.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand.QueryDialect">
            <summary>
            <para>
            The following is the definition of the input parameter "QueryDialect".
            Specifies the dialect used by the query Engine that interprets the Query
            string.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand.Shallow">
            <summary>
            <para>
            The following is the definition of the input parameter "Shallow".
            If the switch is set to True, only instance of the class identified by
            Namespace + ClassName will be returned. If the switch is not set, instances
            of the above class and of all of its descendents will be returned (the
            enumeration will cascade the class inheritance hierarchy).
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand.Filter">
            <summary>
            <para>
            The following is the definition of the input parameter "Filter".
            Specifies the where clause of the query.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand.Property">
            <summary>
            <para>
            The following is the definition of the input parameter "Property".
            Specifies the selected properties of result instances.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand.SelectProperties">
            <summary>
            Property for internal usage.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand.BeginProcessing">
            <summary>
            BeginProcessing method.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand.ProcessRecord">
            <summary>
            ProcessRecord method.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand.EndProcessing">
            <summary>
            EndProcessing method.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand.GetOperationAgent">
            <summary>
            <para>
            Get <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimGetInstance"/> object, which is
            used to delegate all Get-CimInstance operations, such
            as enumerate instances, get instance, query instance.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand.CreateOperationAgent">
            <summary>
            <para>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimGetInstance"/> object, which is
            used to delegate all Get-CimInstance operations, such
            as enumerate instances, get instance, query instance.
            </para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand.CheckArgument">
            <summary>
            Check argument value.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand.parameters">
            <summary>
            Static parameter definition entries.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.GetCimInstanceCommand.parameterSets">
            <summary>
            Static parameter set entries.
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.GetCimSessionCommand">
            <summary>
            The command returns zero, one or more CimSession objects that represent
            connections with remote computers established from the current PS Session.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.GetCimSessionCommand.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimSessionCommand.ComputerName">
            <summary>
            <para>
            The following is the definition of the input parameter "ComputerName".
            Specifies one or more connections by providing their ComputerName(s). The
            Cmdlet then gets CimSession(s) opened with those connections. This parameter
            is an alternative to using CimSession(s) that also identifies the remote
            computer(s).
            </para>
            <para>
            This is the only optional parameter of the Cmdlet. If not provided, the
            Cmdlet returns all CimSession(s) live/active in the runspace.
            </para>
            <para>
            If an instance of CimSession is pipelined to Get-CimSession, the
            ComputerName property of the instance is bound by name with this parameter.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimSessionCommand.Id">
            <summary>
            The following is the definition of the input parameter "Id".
            Specifies one or more numeric Id(s) for which to get CimSession(s).
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimSessionCommand.InstanceId">
            <summary>
            The following is the definition of the input parameter "InstanceID".
            Specifies one or Session Instance IDs.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.GetCimSessionCommand.Name">
            <summary>
            The following is the definition of the input parameter "Name".
            Specifies one or more session Name(s)  for which to get CimSession(s). The
            argument may contain wildcard characters.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.GetCimSessionCommand.BeginProcessing">
            <summary>
            BeginProcessing method.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.GetCimSessionCommand.ProcessRecord">
            <summary>
            ProcessRecord method.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.GetCimSessionCommand.cimGetSession">
            <summary>
            <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimGetSession"/> object used to search CimSession from cache.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.GetCimSessionCommand.parameters">
            <summary>
            Static parameter definition entries.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.GetCimSessionCommand.parameterSets">
            <summary>
            Static parameter set entries.
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.InvokeCimMethodCommand">
            <summary>
            This cmdlet enables the user to invoke a static method on a CIM class using
            the arguments passed as a list of name value pair dictionary.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.InvokeCimMethodCommand.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.InvokeCimMethodCommand.ClassName">
            <summary>
            The following is the definition of the input parameter "ClassName".
            Specifies the Class Name, on which to invoke static method.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.InvokeCimMethodCommand.ResourceUri">
            <summary>
            <para>
            The following is the definition of the input parameter "ResourceUri".
            Define the Resource Uri for which the instances are retrieved.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.InvokeCimMethodCommand.CimClass">
            <summary>
            The following is the definition of the input parameter "CimClass".
            Specifies the <see cref="P:Microsoft.Management.Infrastructure.CimCmdlets.InvokeCimMethodCommand.CimClass"/> object, on which to invoke static method.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.InvokeCimMethodCommand.Query">
            <summary>
            The following is the definition of the input parameter "Query".
            Specifies the <see cref="P:Microsoft.Management.Infrastructure.CimCmdlets.InvokeCimMethodCommand.CimClass"/> object, on which to invoke static method.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.InvokeCimMethodCommand.QueryDialect">
            <summary>
            <para>
            The following is the definition of the input parameter "QueryDialect".
            Specifies the dialect used by the query Engine that interprets the Query
            string.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.InvokeCimMethodCommand.InputObject">
            <summary>
            The following is the definition of the input parameter "InputObject".
            Takes a CimInstance object retrieved by a Get-CimInstance call.
            Invoke the method against the given instance.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.InvokeCimMethodCommand.CimInstance">
            <summary>
            Property for internal usage purpose.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.InvokeCimMethodCommand.ComputerName">
            <summary>
            <para>The following is the definition of the input parameter "ComputerName".
            Provides the name of the computer from which to invoke the method. The
            ComputerName is used to create a temporary CimSession with default parameter
            values, which is then used to retrieve the instances.
            </para>
            <para>
            If no ComputerName is specified the default value is "localhost"
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.InvokeCimMethodCommand.CimSession">
            <summary>
            <para>
            The following is the definition of the input parameter "CimSession".
            Identifies the CimSession which is to be used to retrieve the instances.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.InvokeCimMethodCommand.Arguments">
            <summary>
            The following is the definition of the input parameter "Arguments".
            Specifies the parameter arguments for the static method using a name value
            pair.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.InvokeCimMethodCommand.MethodName">
            <summary>
            The following is the definition of the input parameter "MethodName".
            Name of the Static Method to use.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.InvokeCimMethodCommand.Namespace">
            <summary>
            The following is the definition of the input parameter "Namespace".
            Specifies the NameSpace in which the class or instance lives under.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.InvokeCimMethodCommand.OperationTimeoutSec">
            <summary>
            The following is the definition of the input parameter "OperationTimeoutSec".
            Enables the user to specify the operation timeout in Seconds. This value
            overwrites the value specified by the CimSession Operation timeout.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.InvokeCimMethodCommand.BeginProcessing">
            <summary>
            BeginProcessing method.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.InvokeCimMethodCommand.ProcessRecord">
            <summary>
            ProcessRecord method.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.InvokeCimMethodCommand.EndProcessing">
            <summary>
            EndProcessing method.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.InvokeCimMethodCommand.GetOperationAgent">
            <summary>
            <para>
            Get <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimInvokeCimMethod"/> object, which is
            used to delegate all Invoke-CimMethod operations.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.InvokeCimMethodCommand.CreateOperationAgent">
            <summary>
            <para>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimInvokeCimMethod"/> object, which is
            used to delegate all Invoke-CimMethod operations.
            </para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.InvokeCimMethodCommand.CheckArgument">
            <summary>
            Check argument value.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.InvokeCimMethodCommand.parameters">
            <summary>
            Static parameter definition entries.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.InvokeCimMethodCommand.parameterSets">
            <summary>
            Static parameter set entries.
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.NewCimInstanceCommand">
            <summary>
            <para>
            This Cmdlet creates an instance of a CIM class based on the class
            definition, which is an instance factory
            </para>
            <para>
            If -ClientOnly is not specified, New-CimInstance will create a new instance
            on the server, otherwise just create client in-memory instance
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.NewCimInstanceCommand.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimInstanceCommand.ClassName">
            <summary>
            The following is the definition of the input parameter "ClassName".
            Name of the Class to use to create Instance.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimInstanceCommand.ResourceUri">
            <summary>
            <para>
            The following is the definition of the input parameter "ResourceUri".
            Define the Resource Uri for which the instances are retrieved.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimInstanceCommand.Key">
            <summary>
            <para>
            The following is the definition of the input parameter "Key".
            Enables the user to specify list of key property name.
            </para>
            <para>
            Example: -Key {"K1", "K2"}
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimInstanceCommand.CimClass">
            <summary>
            The following is the definition of the input parameter "CimClass".
            The CimClass is used to create Instance.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimInstanceCommand.Property">
            <summary>
            <para>
            The following is the definition of the input parameter "Property".
            Enables the user to specify instances with specific property values.
            </para>
            <para>
            Example: -Property @{P1="Value1";P2="Value2"}
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimInstanceCommand.Namespace">
            <summary>
            The following is the definition of the input parameter "Namespace".
            Namespace used to look for the classes under to store the instances.
            Default namespace is 'root\cimv2'
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimInstanceCommand.OperationTimeoutSec">
            <summary>
            The following is the definition of the input parameter "OperationTimeoutSec".
            Operation Timeout of the cmdlet in seconds. Overrides the value in the Cim
            Session.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimInstanceCommand.CimSession">
            <summary>
            <para>
            The following is the definition of the input parameter "CimSession".
            Identifies the CimSession which is to be used to create the instances.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimInstanceCommand.ComputerName">
            <summary>
            <para>The following is the definition of the input parameter "ComputerName".
            Provides the name of the computer from which to create the instances.
            </para>
            <para>
            If no ComputerName is specified the default value is "localhost"
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimInstanceCommand.ClientOnly">
            <summary>
            <para>
            The following is the definition of the input parameter "ClientOnly".
            Indicates to create a client only ciminstance object, NOT on the server.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.NewCimInstanceCommand.BeginProcessing">
            <summary>
            BeginProcessing method.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.NewCimInstanceCommand.ProcessRecord">
            <summary>
            ProcessRecord method.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.NewCimInstanceCommand.EndProcessing">
            <summary>
            EndProcessing method.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.NewCimInstanceCommand.GetOperationAgent">
            <summary>
            <para>
            Get <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimNewCimInstance"/> object, which is
            used to delegate all New-CimInstance operations.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.NewCimInstanceCommand.CreateOperationAgent">
            <summary>
            <para>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimNewCimInstance"/> object, which is
            used to delegate all New-CimInstance operations.
            </para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.NewCimInstanceCommand.CheckArgument">
            <summary>
            Check argument value.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.NewCimInstanceCommand.parameters">
            <summary>
            Static parameter definition entries.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.NewCimInstanceCommand.parameterSets">
            <summary>
            Static parameter set entries.
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionCommand">
            <summary>
            This Cmdlet enables the IT Pro to create a CIM Session. CIM Session object
            is a client-side representation of the connection between the client and the
            server.
            The CimSession object returned by the Cmdlet is used by all other CIM
            cmdlets.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionCommand.Authentication">
            <summary>
            The following is the definition of the input parameter "Authentication".
            The following is the validation set for allowed authentication types.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionCommand.Credential">
            <summary>
            The following is the definition of the input parameter "Credential".
            Specifies a user account that has permission to perform this action.
            The default is the current user.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionCommand.CertificateThumbprint">
            <summary>
            The following is the definition of the input parameter "CertificateThumbprint".
            This is specificly for wsman protocol.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionCommand.ComputerName">
            <summary>
            The following is the definition of the input parameter "ComputerName".
            Specifies the computer on which the commands associated with this session
            will run. The default value is LocalHost.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionCommand.Name" -->
        <!-- Badly formed XML comment ignored for member "P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionCommand.OperationTimeoutSec" -->
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionCommand.SkipTestConnection">
            <summary>
            <para>
            The following is the definition of the input parameter "SkipTestConnection".
            Specifies where test connection should be skipped
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionCommand.Port">
            <summary>
            The following is the definition of the input parameter "Port".
            Specifies the port number to use, if different than the default port number.
            This is specificly for wsman protocol.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionCommand.SessionOption">
            <summary>
            <para>
            The following is the definition of the input parameter "SessionOption".
            Specifies the SessionOption object that is passed to the Cmdlet as argument.
            </para>
            <para>
            If the argument is not given, a default SessionOption will be created for
            the session in .NET API layer.
            </para>
            If a <see cref="!:DCOMSessionOption"/> object is passed, then
            connection is made using DCOM. If a <see cref="!:WsManSessionOption"/>
            object is passed, then connection is made using WsMan.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionCommand.BeginProcessing">
            <summary>
            BeginProcessing method.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionCommand.ProcessRecord">
            <summary>
            ProcessRecord method.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionCommand.EndProcessing">
            <summary>
            EndProcessing method.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionCommand.BuildSessionOptions(Microsoft.Management.Infrastructure.Options.CimSessionOptions@,Microsoft.Management.Infrastructure.Options.CimCredential@)">
            <summary>
            Build a CimSessionOptions, used to create CimSession.
            </summary>
            <returns>Null means no prefer CimSessionOptions.</returns>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionCommand.cimNewSession">
            <summary>
            <para>
            CimNewSession object
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionCommand.DisposeInternal">
            <summary>
            Clean up resources.
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.ProtocolType">
            <summary>
            Define Protocol type.
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionOptionCommand">
             <summary>
             The Cmdlet allows the IT Pro to create a CimSessionOptions object that she/he
             can subsequently use to create one or more CimSession connections. The
             options object holds the CIM Session information that is less commonly set
             and used by the IT Pro, and most commonly defaulted.
            
             The Cmdlet has two parameter sets, one for WMMan options and one for DCOM
             options. Depending on the arguments the Cmdlet will return an instance of
             DComSessionOptions or WSManSessionOptions, which derive from
             CimSessionOptions.
             </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionOptionCommand.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionOptionCommand.NoEncryption">
            <summary>
            The following is the definition of the input parameter "NoEncryption".
            Switch indicating if WSMan can use no encryption in the given CimSession (there are also global client and server WSMan settings - AllowUnencrypted).
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionOptionCommand.SkipCACheck">
            <summary>
            The following is the definition of the input parameter "CertificateCACheck".
            Switch indicating if Certificate Authority should be validated.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionOptionCommand.SkipCNCheck">
            <summary>
            The following is the definition of the input parameter "CertificateCNCheck".
            Switch indicating if Certificate Name should be validated.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionOptionCommand.SkipRevocationCheck">
            <summary>
            The following is the definition of the input parameter "CertRevocationCheck".
            Switch indicating if certificate should be revoked.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionOptionCommand.EncodePortInServicePrincipalName">
            <summary>
            The following is the definition of the input parameter "EncodePortInServicePrincipalName".
            Switch indicating if to encode Port In Service Principal Name.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionOptionCommand.Encoding">
            <summary>
            The following is the definition of the input parameter "Encoding".
            Defined the message encoding.
            The allowed encodings are { Default | Utf8 | Utf16 }. The default value
            should be Utf8.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionOptionCommand.HttpPrefix">
            <summary>
            The following is the definition of the input parameter "HttpPrefix".
            This is the HTTP URL on the server on which the WSMan service is listening.
            In most cases it is /wsman, which is the default.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionOptionCommand.MaxEnvelopeSizeKB">
            <summary>
            The following is the definition of the input parameter "MaxEnvelopeSizeKB".
            Sets the limit to the maximum size of the WSMan message envelope.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionOptionCommand.ProxyAuthentication">
            <summary>
            The following is the definition of the input parameter "ProxyAuthentication".
            Which proxy authentication types to use: Allowed set is:
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionOptionCommand.ProxyCertificateThumbprint">
            <summary>
            The following is the definition of the input parameter "ProxyCertificateThumbprint".
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionOptionCommand.ProxyCredential">
            <summary>
            The following is the definition of the input parameter "ProxyCredential".
            Ps Credential used by the proxy server when required by the server.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionOptionCommand.ProxyType">
            <summary>
            The following is the definition of the input parameter "ProxyType".
            Which proxy type to use: Valid set is:
             { InternetExplorer | WinHttp | Auto | None }
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionOptionCommand.UseSsl">
            <summary>
            The following is the definition of the input parameter "UseSSL".
            Switch indicating if Secure Sockets Layer connection should be used.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionOptionCommand.Impersonation">
            <summary>
            The following is the definition of the input parameter "Impersonation".
            Used to select if, and if so what kind of, impersonation should be used.
            Applies only to the DCOM channel.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionOptionCommand.PacketIntegrity">
            <summary>
            The following is the definition of the input parameter "PacketIntegrity".
            Switch indicating if the package integrity in DCOM connections should be
            checked/enforced.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionOptionCommand.PacketPrivacy">
            <summary>
            The following is the definition of the input parameter "PacketPrivacy".
            Switch indicating if packet privacy of the packets in DCOM communications
            should be checked/enforced.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionOptionCommand.Protocol">
            <summary>
            The following is the definition of the input parameter "Protocol".
            Switch indicating if to encode Port In Service Principal Name.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionOptionCommand.UICulture">
            <summary>
            The following is the definition of the input parameter "UICulture".
            Specifies the UI Culture to use. i.e. en-us, ar-sa.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionOptionCommand.Culture">
            <summary>
            The following is the definition of the input parameter "Culture".
            Specifies the culture to use. i.e. en-us, ar-sa.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionOptionCommand.BeginProcessing">
            <summary>
            BeginProcessing method.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionOptionCommand.ProcessRecord">
            <summary>
            ProcessRecord method.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionOptionCommand.EndProcessing">
            <summary>
            EndProcessing method.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionOptionCommand.CreateDComSessionOptions">
            <summary>
            Create DComSessionOptions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionOptionCommand.CreateWSMANSessionOptions">
            <summary>
            Create WSMANSessionOptions.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionOptionCommand.parameters">
            <summary>
            Static parameter definition entries.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.NewCimSessionOptionCommand.parameterSets">
            <summary>
            Static parameter set entries.
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.RegisterCimIndicationCommand">
            <summary>
            Enables the user to subscribe to indications using Filter Expression or
            Query Expression.
            -SourceIdentifier is a name given to the subscription
            The Cmdlet should return a PS EventSubscription object that can be used to
            cancel the subscription
            Should we have the second parameter set with a -Query?
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.RegisterCimIndicationCommand.Namespace">
            <summary>
            <para>
            The following is the definition of the input parameter "Namespace".
            Specifies the NameSpace under which to look for the specified class name.
            </para>
            <para>
            Default value is root\cimv2
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.RegisterCimIndicationCommand.ClassName">
            <summary>
            The following is the definition of the input parameter "ClassName".
            Specifies the Class Name to register the indication on.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.RegisterCimIndicationCommand.Query">
            <summary>
            The following is the definition of the input parameter "Query".
            The Query Expression to pass.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.RegisterCimIndicationCommand.QueryDialect">
            <summary>
            <para>
            The following is the definition of the input parameter "QueryDialect".
            Specifies the dialect used by the query Engine that interprets the Query
            string.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.RegisterCimIndicationCommand.OperationTimeoutSec">
            <summary>
            The following is the definition of the input parameter "OperationTimeoutSec".
            Enables the user to specify the operation timeout in Seconds. This value
            overwrites the value specified by the CimSession Operation timeout.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.RegisterCimIndicationCommand.CimSession">
            <summary>
            The following is the definition of the input parameter "Session".
            Uses a CimSession context.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.RegisterCimIndicationCommand.ComputerName">
            <summary>
            The following is the definition of the input parameter "ComputerName".
            Specifies the computer on which the commands associated with this session
            will run. The default value is LocalHost.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.RegisterCimIndicationCommand.GetSourceObject">
            <summary>
            Returns the object that generates events to be monitored.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.RegisterCimIndicationCommand.GetSourceObjectEventName">
            <summary>
            Returns the event name to be monitored on the input object.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.RegisterCimIndicationCommand.EndProcessing">
            <summary>
            EndProcessing method.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.RegisterCimIndicationCommand.newSubscriber_Unsubscribed(System.Object,System.Management.Automation.PSEventUnsubscribedEventArgs)">
            <summary>
            <para>
            Handler to handle unsubscribe event
            </para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.RegisterCimIndicationCommand.CheckArgument">
            <summary>
            Check argument value.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.RegisterCimIndicationCommand.parameterBinder">
            <summary>
            Parameter binder used to resolve parameter set name.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.RegisterCimIndicationCommand.SetParameter(System.Object,System.String)">
            <summary>
            Set the parameter.
            </summary>
            <param name="parameterName"></param>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.RegisterCimIndicationCommand.parameters">
            <summary>
            Static parameter definition entries.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.RegisterCimIndicationCommand.parameterSets">
            <summary>
            Static parameter set entries.
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.RemoveCimInstanceCommand">
            <summary>
            Enables the user to remove a CimInstance.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.RemoveCimInstanceCommand.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.RemoveCimInstanceCommand.CimSession">
            <summary>
            The following is the definition of the input parameter "Session".
            CIM session used to remove the CIM Instance.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.RemoveCimInstanceCommand.ResourceUri">
            <summary>
            <para>
            The following is the definition of the input parameter "ResourceUri".
            Define the Resource Uri for which the instances are retrieved.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.RemoveCimInstanceCommand.ComputerName">
            <summary>
            The following is the definition of the input parameter "ComputerName".
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.RemoveCimInstanceCommand.Namespace">
            <summary>
            The following is the definition of the input parameter "Namespace".
            The Namespace used to look for the Class instances under.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.RemoveCimInstanceCommand.OperationTimeoutSec">
            <summary>
            The following is the definition of the input parameter "OperationTimeoutSec".
            Used to set the invocation operation time out. This value overrides the
            CimSession operation timeout.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.RemoveCimInstanceCommand.InputObject">
            <summary>
            The following is the definition of the input parameter "InputObject".
            Used to get a CimInstance using Get-CimInstance | Remove-CimInstance.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.RemoveCimInstanceCommand.CimInstance">
            <summary>
            Property for internal usage purpose.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.RemoveCimInstanceCommand.Query">
            <summary>
            The following is the definition of the input parameter "Query".
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.RemoveCimInstanceCommand.QueryDialect">
            <summary>
            The following is the definition of the input parameter "QueryDialect".
            Specifies the dialect used by the query Engine that interprets the Query
            string.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.RemoveCimInstanceCommand.BeginProcessing">
            <summary>
            BeginProcessing method.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.RemoveCimInstanceCommand.ProcessRecord">
            <summary>
            ProcessRecord method.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.RemoveCimInstanceCommand.EndProcessing">
            <summary>
            EndProcessing method.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.RemoveCimInstanceCommand.GetOperationAgent">
            <summary>
            <para>
            Get <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimRemoveCimInstance"/> object, which is
            used to delegate all Remove-CimInstance operations.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.RemoveCimInstanceCommand.CreateOperationAgent">
            <summary>
            <para>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimRemoveCimInstance"/> object, which is
            used to delegate all Remove-CimInstance operations.
            </para>
            </summary>
            <returns></returns>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.RemoveCimInstanceCommand.parameters">
            <summary>
            Static parameter definition entries.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.RemoveCimInstanceCommand.parameterSets">
            <summary>
            Static parameter set entries.
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.RemoveCimSessionCommand">
            <summary>
            This Cmdlet allows the to remove, or terminate, one or more CimSession(s).
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.RemoveCimSessionCommand.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.RemoveCimSessionCommand.CimSession">
            <summary>
            The following is the definition of the input parameter "CimSession".
            Specifies one or more CimSession object to be removed from the local PS
            session/runspace.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.RemoveCimSessionCommand.ComputerName">
            <summary>
            <para>The following is the definition of the input parameter "ComputerName".
            Specified one or more computer names for which all CimSession(s)
            (connections) should be removed (terminated).</para>
            <para>This is the only optional parameter. If no value for this parameter is
            provided, all CimSession(s) are terminated.</para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.RemoveCimSessionCommand.Id">
            <summary>
            The following is the definition of the input parameter "Id".
            Specifies the friendly Id(s) of the CimSession(s) that should be removed
            (terminated).
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.RemoveCimSessionCommand.InstanceId">
            <summary>
            The following is the definition of the input parameter "InstanceId".
            Specifies one or more automatically generated InstanceId(s) (GUIDs) of the
            CimSession(s) that should be removed (terminated).
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.RemoveCimSessionCommand.Name">
            <summary>
            The following is the definition of the input parameter "Name".
            Specifies one or more of friendly Names of the CimSession(s) that should be
            removed (terminated).
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.RemoveCimSessionCommand.BeginProcessing">
            <summary>
            BeginProcessing method.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.RemoveCimSessionCommand.ProcessRecord">
            <summary>
            ProcessRecord method.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.RemoveCimSessionCommand.cimRemoveSession">
            <summary>
            <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimRemoveSession"/> object used to remove the session from
            session cache.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.RemoveCimSessionCommand.parameters">
            <summary>
            Static parameter definition entries.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.RemoveCimSessionCommand.parameterSets">
            <summary>
            Static parameter set entries.
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.SetCimInstanceCommand">
            <summary>
            <para>
            Enables the user to Set properties and keys on a specific <see cref="P:Microsoft.Management.Infrastructure.CimCmdlets.SetCimInstanceCommand.CimInstance"/>
            CimInstance must have values of all [KEY] properties.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.SetCimInstanceCommand.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.SetCimInstanceCommand.CimSession">
            <summary>
            The following is the definition of the input parameter "Session".
            CIM session used to set the CIM Instance.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.SetCimInstanceCommand.ComputerName">
            <summary>
            The following is the definition of the input parameter "ComputerName".
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.SetCimInstanceCommand.ResourceUri">
            <summary>
            <para>
            The following is the definition of the input parameter "ResourceUri".
            Define the Resource Uri for which the instances are retrieved.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.SetCimInstanceCommand.Namespace">
            <summary>
            The following is the definition of the input parameter "Namespace".
            The Namespace used to look for the Class instances under.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.SetCimInstanceCommand.OperationTimeoutSec">
            <summary>
            The following is the definition of the input parameter "OperationTimeoutSec".
            Used to set the invocation operation time out. This value overrides the
            CimSession operation timeout.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.SetCimInstanceCommand.InputObject">
            <summary>
            The following is the definition of the input parameter "InputObject".
            Used to get a CimInstance using Get-CimInstance | Set-CimInstance.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.SetCimInstanceCommand.CimInstance">
            <summary>
            Property for internal usage purpose.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.SetCimInstanceCommand.Query">
            <summary>
            The following is the definition of the input parameter "Query".
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.SetCimInstanceCommand.QueryDialect">
            <summary>
            The following is the definition of the input parameter "QueryDialect".
            Specifies the dialect used by the query Engine that interprets the Query
            string.
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.SetCimInstanceCommand.Property">
            <summary>
            <para>
            The following is the definition of the input parameter "Property",
            defines the value to be changed.
            </para>
            <para>
            The key properties will be ignored. Any invalid property will cause
            termination of the cmdlet execution.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.Management.Infrastructure.CimCmdlets.SetCimInstanceCommand.PassThru">
            <summary>
            The following is the definition of the input parameter "PassThru",
            indicate whether Set-CimInstance should output modified result instance or not.
            <para>
            True indicates output the result instance, otherwise output nothing as by default
            behavior.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.SetCimInstanceCommand.BeginProcessing">
            <summary>
            BeginProcessing method.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.SetCimInstanceCommand.ProcessRecord">
            <summary>
            ProcessRecord method.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.SetCimInstanceCommand.EndProcessing">
            <summary>
            EndProcessing method.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.SetCimInstanceCommand.GetOperationAgent">
            <summary>
            <para>
            Get <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSetCimInstance"/> object, which is
            used to delegate all Set-CimInstance operations.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.SetCimInstanceCommand.CreateOperationAgent">
            <summary>
            <para>
            Create <see cref="T:Microsoft.Management.Infrastructure.CimCmdlets.CimSetCimInstance"/> object, which is
            used to delegate all Set-CimInstance operations.
            </para>
            </summary>
            <returns></returns>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.SetCimInstanceCommand.parameters">
            <summary>
            Static parameter definition entries.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.SetCimInstanceCommand.parameterSets">
            <summary>
            Static parameter set entries.
            </summary>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.ConstValue">
            <summary>
            <para>
            Global Non-localization strings
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.ConstValue.DefaultSessionName">
            <summary>
            <para>
            Default computername
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.ConstValue.NullComputerName">
            <summary>
            <para>
            Empty computername, which will create DCOM session
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.ConstValue.NullComputerNames">
            <summary>
            <para>
            Empty computername array, which will create DCOM session
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.ConstValue.LocalhostComputerName">
            <summary>
            <para>
            localhost computername, which will create WSMAN session
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.ConstValue.DefaultNameSpace">
            <summary>
            <para>
            Default namespace
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.ConstValue.DefaultQueryDialect">
            <summary>
            <para>
            Default namespace
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.ConstValue.ShowComputerNameNoteProperty">
            <summary>
            Name of the note property that controls if "PSComputerName" column is shown.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.ConstValue.IsDefaultComputerName(System.String)">
            <summary>
            <para>
            Whether given computername is either null or empty
            </para>
            </summary>
            <param name="computerName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.ConstValue.GetComputerNames(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            <para>
            Get computer names, if it is null then return DCOM one
            </para>
            </summary>
            <param name="computerNames"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.ConstValue.GetComputerName(System.String)">
            <summary>
            Get computer name, if it is null then return default one.
            </summary>
            <param name="computerName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.ConstValue.GetNamespace(System.String)">
            <summary>
            <para>
            Get namespace, if it is null then return default one
            </para>
            </summary>
            <param name="nameSpace"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.ConstValue.GetQueryDialectWithDefault(System.String)">
            <summary>
            <para>
            Get queryDialect, if it is null then return default query Dialect
            </para>
            </summary>
            <param name="queryDialect"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.DebugHelper">
            <summary>
            <para>
            Debug helper class used to dump debug message to log file
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.DebugHelper.generateLog">
            <summary>
            Flag used to control generating log message into file.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.DebugHelper.logInitialized">
            <summary>
            Whether the log been initialized.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.DebugHelper.generateVerboseMessage">
            <summary>
            Flag used to control generating message into powershell.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.DebugHelper.logFile">
            <summary>
            Flag used to control generating message into powershell.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.DebugHelper.space">
            <summary>
            Indent space string.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.DebugHelper.spaces">
            <summary>
            Indent space strings array.
            </summary>
        </member>
        <member name="F:Microsoft.Management.Infrastructure.CimCmdlets.DebugHelper.logLock">
            <summary>
            Lock the log file.
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.DebugHelper.WriteLog(System.String)">
            <summary>
            Write message to log file named @logFile.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.DebugHelper.WriteEmptyLine">
            <summary>
            Write blank line to log file named @logFile.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.DebugHelper.WriteLog(System.String,System.Int32,System.Object[])">
            <summary>
            Write message to log file named @logFile with args.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.DebugHelper.WriteLog(System.String,System.Int32)">
            <summary>
            Write message to log file w/o arguments.
            </summary>
            <param name="message"></param>
            <param name="indent"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.DebugHelper.WriteLogEx(System.String,System.Int32,System.Object[])">
            <summary>
            Write message to log file named @logFile with args.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.DebugHelper.WriteLogEx(System.String,System.Int32)">
            <summary>
            Write message to log file w/o arguments.
            </summary>
            <param name="message"></param>
            <param name="indent"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.DebugHelper.WriteLogEx">
            <summary>
            Write message to log file w/o arguments.
            </summary>
            <param name="message"></param>
            <param name="indent"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.DebugHelper.FormatLogMessage(System.String@,System.String,System.Object[])">
            <summary>
            Format the message.
            </summary>
            <param name="message"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.DebugHelper.WriteLogInternal(System.String,System.Int32,System.Int32)">
            <summary>
            Write message to log file named @logFile
            with indent space ahead of the message.
            </summary>
            <param name="message"></param>
            <param name="nIndent"></param>
        </member>
        <member name="T:Microsoft.Management.Infrastructure.CimCmdlets.ValidationHelper">
            <summary>
            <para>
            Helper class used to validate given parameter
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.ValidationHelper.ValidateNoNullArgument(System.Object,System.String)">
            <summary>
            Validate the argument is not null.
            </summary>
            <param name="obj"></param>
            <param name="argumentName"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.ValidationHelper.ValidateNoNullorWhiteSpaceArgument(System.String,System.String)">
            <summary>
            Validate the argument is not null and not whitespace.
            </summary>
            <param name="obj"></param>
            <param name="argumentName"></param>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.ValidationHelper.ValidateArgumentIsValidName(System.String,System.String)">
            <summary>
            Validate that given classname/propertyname is a valid name compliance with DMTF standard.
            Only for verifying ClassName and PropertyName argument.
            </summary>
            <param name="parameterName"></param>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Throw if the given value is not a valid name (class name or property name).</exception>
        </member>
        <member name="M:Microsoft.Management.Infrastructure.CimCmdlets.ValidationHelper.ValidateArgumentIsValidName(System.String,System.String[])">
            <summary>
            Validate given arry argument contains all valid name (for -SelectProperties).
            * is valid for this case.
            </summary>
            <param name="parameterName"></param>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Throw if the given value contains any invalid name (class name or property name).</exception>
        </member>
        <member name="T:CimCmdletStrings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="M:CimCmdletStrings.#ctor">
            <summary>constructor</summary>
        </member>
        <member name="P:CimCmdletStrings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:CimCmdletStrings.Culture">
            <summary>
              Overrides the current threads CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:CimCmdletStrings.CimOperationCompleted">
            <summary>
              Looks up a localized string similar to 
               Operation '{0}' complete.
               {0} is a placeholder for operation name. (i.e, GetCimInstance)
             
            </summary>
        </member>
        <member name="P:CimCmdletStrings.CimOperationNameCreateInstance">
            <summary>
              Looks up a localized string similar to 
               Create CimInstance
             
            </summary>
        </member>
        <member name="P:CimCmdletStrings.CimOperationNameDeleteInstance">
            <summary>
              Looks up a localized string similar to 
               Delete CimInstance
             
            </summary>
        </member>
        <member name="P:CimCmdletStrings.CimOperationNameEnumerateAssociatedInstances">
            <summary>
              Looks up a localized string similar to 
               Enumerate Associated CimInstances
             
            </summary>
        </member>
        <member name="P:CimCmdletStrings.CimOperationNameEnumerateClasses">
            <summary>
              Looks up a localized string similar to 
               Enumerate CimClasses
             
            </summary>
        </member>
        <member name="P:CimCmdletStrings.CimOperationNameEnumerateInstances">
            <summary>
              Looks up a localized string similar to 
               Enumerate CimInstances
             
            </summary>
        </member>
        <member name="P:CimCmdletStrings.CimOperationNameGetClass">
            <summary>
              Looks up a localized string similar to 
               Get CimClass
             
            </summary>
        </member>
        <member name="P:CimCmdletStrings.CimOperationNameGetInstance">
            <summary>
              Looks up a localized string similar to 
               Get CimInstance
             
            </summary>
        </member>
        <member name="P:CimCmdletStrings.CimOperationNameInvokeMethod">
            <summary>
              Looks up a localized string similar to 
               Invoke CimMethod
             
            </summary>
        </member>
        <member name="P:CimCmdletStrings.CimOperationNameModifyInstance">
            <summary>
              Looks up a localized string similar to 
               Modify CimInstance
             
            </summary>
        </member>
        <member name="P:CimCmdletStrings.CimOperationNameQueryInstances">
            <summary>
              Looks up a localized string similar to 
               Query CimInstances
             
            </summary>
        </member>
        <member name="P:CimCmdletStrings.CimOperationNameSubscribeIndication">
            <summary>
              Looks up a localized string similar to 
               Subscribe CimIndication
             
            </summary>
        </member>
        <member name="P:CimCmdletStrings.CimOperationStart">
            <summary>
              Looks up a localized string similar to 
               Perform operation '{0}' with following parameters, '{1}'.
               {0} is a placeholder for operation name; {1} is a placeholder for parameters value
             
            </summary>
        </member>
        <member name="P:CimCmdletStrings.ConflictParameterWasSet">
            <summary>
              Looks up a localized string similar to 
               Parameter '{0}' cannot be used with the parameter '{1}'.
               {0} is a placeholder for parameter name; {1} is a placeholder for another parameter name;
             
            </summary>
        </member>
        <member name="P:CimCmdletStrings.CouldNotFindCimsessionObject">
            <summary>
              Looks up a localized string similar to 
               Could not find CimSession with the given {0} = {1}
               {0} is a placeholder for property name; {1} is a placeholder for property value.
             
            </summary>
        </member>
        <member name="P:CimCmdletStrings.CouldNotFindPropertyFromGivenClass">
            <summary>
              Looks up a localized string similar to 
               Could not find the following properties from the given class {0}: {1}.
               {0} is a placeholder for class name; {1} is a placeholder for list of property names.
             
            </summary>
        </member>
        <member name="P:CimCmdletStrings.CouldNotModifyReadonlyProperty">
            <summary>
              Looks up a localized string similar to 
               Could not modify readonly property '{0}' of object '{1}'.
               {0} is a placeholder for propertyname; {1} is a placeholder for object string.
             
            </summary>
        </member>
        <member name="P:CimCmdletStrings.DefaultStatusDescription">
            <summary>
              Looks up a localized string similar to 
               Default status description.
               N/A
             
            </summary>
        </member>
        <member name="P:CimCmdletStrings.DidNotResolveFile">
            <summary>
              Looks up a localized string similar to 
               Cannot perform operation because the wildcard path {0} did not resolve to a file.
               {0} is a placeholder for a path
             
            </summary>
        </member>
        <member name="P:CimCmdletStrings.InvalidAuthenticationTypeWithNullCredential">
            <summary>
              Looks up a localized string similar to 
               Authentication type '{0}' is invalid without credential. Only following authentication type are allowed without credential, '{1}', '{2}', '{3}', or '{4}'.
               {0} is a placeholder for authentication type. {1}-{4} are placeholders for authentication types.
             
            </summary>
        </member>
        <member name="P:CimCmdletStrings.InvalidMethod">
            <summary>
              Looks up a localized string similar to 
               Can not find method '{0}' in class '{1}'.
               {0} is a placeholder for method name. {1} is a placeholders for class name.
             
            </summary>
        </member>
        <member name="P:CimCmdletStrings.InvalidMethodParameter">
            <summary>
              Looks up a localized string similar to 
               Can not find Parameter '{0}' in method '{1}' of class '{2}'.
               {0} is a placeholder for parameter name; {1} is a placeholder for method name; {2} is a placeholder for class name.
             
            </summary>
        </member>
        <member name="P:CimCmdletStrings.InvalidOperation">
            <summary>
              Looks up a localized string similar to 
               Invalid operation. Current cmdlet already have operation created.
               N/A
             
            </summary>
        </member>
        <member name="P:CimCmdletStrings.InvalidParameterValue">
            <summary>
              Looks up a localized string similar to 
               Argument '{0}' contains characters that are not allowed in parameter '{1}'. Supply an argument that is valid and then try the command again.
               {0} stand for argument value, {1} stand for parameter name.
             
            </summary>
        </member>
        <member name="P:CimCmdletStrings.MultipleFilesNotSupported">
            <summary>
              Looks up a localized string similar to 
               Cannot perform operation because the path resolved to more than one file. This command cannot operate on multiple files.
             
            </summary>
        </member>
        <member name="P:CimCmdletStrings.NullArgument">
            <summary>
              Looks up a localized string similar to 
               Argument '{0}' can not be null.
               N/A
             
            </summary>
        </member>
        <member name="P:CimCmdletStrings.OperationInProgress">
            <summary>
              Looks up a localized string similar to 
               CimSession proxy object already have operation in progress.
               N/A
             
            </summary>
        </member>
        <member name="P:CimCmdletStrings.ReadWriteFileNotFileSystemProvider">
            <summary>
              Looks up a localized string similar to 
               Cannot open file because the current provider ({0}) cannot open a file.
               {0} is a placeholder for PowerShell filesystem-like provider name (i.e. registry provider)
             
            </summary>
        </member>
        <member name="P:CimCmdletStrings.UnableToAddPropertyToInstance">
            <summary>
              Looks up a localized string similar to 
               Unable to add property '{0}' to input object '{1}'. The class schema does not contain the property.
               {0} stand for property name, {1} stand for cim instance path.
             
            </summary>
        </member>
        <member name="P:CimCmdletStrings.UnableToResolveParameterSetName">
            <summary>
              Looks up a localized string similar to 
               Unable to resolve the parameter set name.
               N/A
             
            </summary>
        </member>
    </members>
</doc>
