<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.WSMan.Management</name>
    </assembly>
    <members>
        <member name="T:Microsoft.WSMan.Management.WSManConfigProvider">
            <summary>
            WsMan Provider.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManConfigProvider.clearItemIsCalled">
            <summary>
            Determines if Set-Item user input type validation is required or not.
            It is True by default, Clear-Item will set it to false so that it can
            pass Empty string as value for Set-Item.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManConfigProvider.enumerateMapping">
            <summary>
            Object contains the cache of the enumerate results for the cmdlet to execute.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManConfigProvider.getMapping">
            <summary>
            Mapping of ResourceURI with the XML returned by the Get call.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.System#Management#Automation#Provider#ICmdletProviderSupportsHelp#GetHelpMaml(System.String,System.String)">
            <summary>
              This implements Get-Help for config provider custom path.
              When user calls "Get-Help new-item" in our config provider path, this function will get called.
            </summary>
            <param name="helpItemName"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.NewDrive(System.Management.Automation.PSDriveInfo)">
            <summary>
            </summary>
            <param name="drive"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.InitializeDefaultDrives">
            <summary>
            Adds the required drive.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.RemoveDrive(System.Management.Automation.PSDriveInfo)">
            <summary>
            Removes the required drive.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.GetChildName(System.String)">
            <summary>
            Get a Child Name. This method is called from MakePath method.
            This Method helps in getting the correct case of particular element in the provider path.
            XML is case sensitive but Powershell is not.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.MakePath(System.String,System.String)">
            <summary>
            This method is provided by the Provider infrastructure. This method is called in all actions done
            by the provider to get the resolved path. Internally Resolve-Path is called.
            Since Root is empty for WsMan Provider the default path generated by Makepath is not correct.
            So we have made the tweaks in this method to return the correct resolved path.
            </summary>
            <param name="parent"></param>
            <param name="child"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.IsValidPath(System.String)">
            <summary>
            Checks whether the path is Valid.
            eg. winrm/config/client.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.ItemExists(System.String)">
            <summary>
            Check whether an Item Exist in the winrm configuration.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.HasChildItems(System.String)">
            <summary>
            Checks whether the given path has got child items.
            e.g: This is called by Provider infrastructure when we do a Remove-Item and prompts user
            if child items are present.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.GetItem(System.String)">
            <summary>
            This cmdlet is used to get a particular item.
            cd wsman:\localhost\client> Get-Item .\Auth.
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.SetItem(System.String,System.Object)">
            <summary>
            This cmdlet is used to set the value of a particular item.
            cd wsman:\localhost\client> Set-Item .\TrustedHosts -value "*"
            This has one dynamic parameter. It is used with TrustedHost only.
            The parameter is -Concatenate.
            </summary>
            <param name="path"></param>
            <param name="value"></param>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.ClearItem(System.String)">
            <summary>
            This command is used to clear the value of a item.
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.SetItemDynamicParameters(System.String,System.Object)">
            <summary>
            This is method which create the dynamic or runtime parameter for set-item.
            </summary>
            <param name="path"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.GetChildItems(System.String,System.Boolean)">
            <summary>
            Gets the Child items. dir functionality
            wsman:\localhost\client> dir.
            </summary>
            <param name="path"></param>
            <param name="recurse"></param>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.GetChildNames(System.String,System.Management.Automation.ReturnContainers)">
            <summary>
            This method gives the names of child items. this is used for Tab completion.
            </summary>
            <param name="path"></param>
            <param name="returnContainers"></param>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.IsItemContainer(System.String)">
            <summary>
            Checks whether the specified path is a container path.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.RemoveItem(System.String,System.Boolean)">
            <summary>
            Removes a particular item.
            </summary>
            <param name="path"></param>
            <param name="recurse"></param>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.NewItem(System.String,System.String,System.Object)">
            <summary>
            This method creates a new item of listener,clientcertificate etc.
            </summary>
            <param name="path"></param>
            <param name="itemTypeName"></param>
            <param name="newItemValue"></param>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.NewItemDynamicParameters(System.String,System.String,System.Object)">
            <summary>
            Dynamic parameter used by New-Item. According to different path. This method return the
            required dynamic parameters.
            </summary>
            <param name="path"></param>
            <param name="itemTypeName"></param>
            <param name="newItemValue"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.NewItemCreateComputerConnection(System.String)">
            <summary>
            This method creates the connection to new machine in wsman provider.
            This is called from New-Item.
            </summary>
            <param name="Name"></param>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.NewItemContainerListenerOrCertMapping(System.Object,System.String,System.String,System.String,System.Collections.Hashtable,System.String,System.String,System.String)">
            <summary>
            This method creates the Listener or ClientCertificate in wsman provider.
            This is called from New-Item.
            </summary>
            <param name="sessionobj"></param>
            <param name="path"></param>
            <param name="uri"></param>
            <param name="host"></param>
            <param name="InputParams"></param>
            <param name="ContainerListenerOrCertMapping"></param>
            <param name="ShouldContinueQuery"></param>
            <param name="ShouldContinueCaption"></param>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.NewItemPluginOrPluginChild(System.Object,System.String,System.String,System.String)">
            <summary>
            This method creates the Plugin and its child items in wsman provider.
            This is called from New-Item.
            </summary>
            <param name="sessionobj"></param>
            <param name="path"></param>
            <param name="host"></param>
            <param name="uri"></param>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.GetItemPSObjectWithTypeName(System.String,System.String,System.Object,System.String[],System.String,Microsoft.WSMan.Management.WSManConfigProvider.WsManElementObjectTypes,System.Management.Automation.PSObject)">
            <summary>
            Returns the object to be written to the console.
            </summary>
            <param name="Name"></param>
            <param name="TypeNameOfElement"></param>
            <param name="Value"></param>
            <param name="keys"></param>
            <param name="ExtendedTypeName"></param>
            <param name="WSManElementObjectType"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.SetItemListenerOrClientCertificate(System.Object,System.String,System.String[],System.String,System.Object,System.String,System.String,System.String)">
            <summary>
            Called from setitem. This set the value in Listener and Client Certificate container.
            </summary>
            <param name="sessionObj"></param>
            <param name="ResourceURI"></param>
            <param name="PrimaryKeys"></param>
            <param name="childName"></param>
            <param name="value"></param>
            <param name="path"></param>
            <param name="parent"></param>
            <param name="host"></param>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.GetInputStringForCreate(System.String,System.Collections.Hashtable,System.String)">
            <summary>
            Get the input string for create.
            </summary>
            <param name="ResourceURI"></param>
            <param name="value"></param>
            <param name="host"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.ReadFile(System.String)">
            <summary>
            Reads the file. used by New-Item for Plugin creation from file.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.GetHostName(System.String)">
            <summary>
            Get the host name or the machine to which connected.
            This is used by most of the methods like GetItem,GetChildItem, NewItem, SetItem,RemoveItem etc...
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.PutResourceValue(System.Object,System.String,System.Collections.Hashtable,System.String)">
            <summary>
            To put a resource value. Wsman put operation.
            </summary>
            <param name="sessionobj"></param>
            <param name="ResourceURI"></param>
            <param name="value"></param>
            <param name="host"></param>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.GetResourceValue(System.Object,System.String,System.Collections.Hashtable)">
            <summary>
            WSMan Get operation.
            </summary>
            <param name="sessionobj"></param>
            <param name="ResourceURI"></param>
            <param name="cmdlinevalues"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.EnumerateResourceValue(System.Object,System.String)">
            <summary>
            WsMan Enumerate operation.
            </summary>
            <param name="sessionobj"></param>
            <param name="ResourceURI"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.DeleteResourceValue(System.Object,System.String,System.Collections.Hashtable,System.Boolean)">
            <summary>
            WsMan Delete Operation.
            </summary>
            <param name="sessionobj"></param>
            <param name="ResourceURI"></param>
            <param name="cmdlinevalues"></param>
            <param name="recurse"></param>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.CreateResourceValue(System.Object,System.String,System.String,System.Collections.Hashtable)">
            <summary>
            WsMan Create Operation.
            </summary>
            <param name="sessionobj"></param>
            <param name="ResourceURI"></param>
            <param name="resource"></param>
            <param name="cmdlinevalues"></param>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.FindResourceValue(System.Object,System.String,System.Collections.Hashtable)">
            <summary>
            To find a resource value. Both Get and Enumerate works here.
            </summary>
            <param name="sessionobj"></param>
            <param name="ResourceURI"></param>
            <param name="cmdlinevalues"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.ContainResourceValue(System.Object,System.String,System.String,System.String,System.String)">
            <summary>
            Checks whether a value is present in Wsman config.
            </summary>
            <param name="sessionobj"></param>
            <param name="ResourceURI"></param>
            <param name="childname"></param>
            <param name="path"></param>
            <param name="host"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.WritePSObjectPropertiesAsWSManElementObjects(System.Management.Automation.PSObject,System.String,System.String[],System.String,Microsoft.WSMan.Management.WSManConfigProvider.WsManElementObjectTypes,System.Boolean)">
            <summary>
            Used to Write WSMan objects to the output console. Used by GetChildItem, GetItem and NewItem.
            </summary>
            <param name="psobject"></param>
            <param name="path"></param>
            <param name="keys"></param>
            <param name="ExtendedTypeName"></param>
            <param name="WSManElementObjectType"></param>
            <param name="recurse"></param>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.BuildHostLevelPSObjectArrayList(System.Object,System.String,System.Boolean)">
            <summary>
            For Host Level or WsMan level
            WsMan\Localhost:\>
            WsMan:\>
            </summary>
            <param name="objSessionObject"></param>
            <param name="uri"></param>
            <param name="IsWsManLevel"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.ConvertToPSObject(System.Xml.XmlNode)">
            <summary>
            Converts XmlNodes ChildNodes to Properties of PSObject.
            </summary>
            <param name="xmlnode"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.NormalizePath(System.String,System.String)">
            <summary>
            Get the Uri for the operation from a path.
            </summary>
            <param name="path"></param>
            <param name="host"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.GetItemValue(System.String)">
             <summary>
             Given wsman config path, gets the value of the leaf present.
             If path is not valid or not present throws an exception.
            
             Currently this supports only retrieving Resource_XXXX dir contents.
             if you need support at other levels implement them.
             Example resource dir: WSMan:\localhost\Plugin\someplugin\Resources\Resource_XXXXXXX.
             </summary>
             <param name="path"></param>
             <returns>
             A PSObject representing the contents of the path if successful,
             Otherwise null.
             </returns>
             <exception cref="T:System.ArgumentException">
             1. path is null or empty.
             </exception>
             <exception cref="T:System.NotSupportedException">
             1. <paramref name="path"/> should be of form
                WSMan:\localhost\Plugin\someplugin\Resources\Resource_XXXXXXX
                Other paths are not supported currently. If you want you can
                add them later.
             </exception>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.GetChildItemOrNamesForListenerOrCertMapping(System.Xml.XmlDocument,System.String,System.String,System.String,Microsoft.WSMan.Management.WSManConfigProvider.ProviderMethods,System.Boolean)">
            <summary>
            Get Child Items of Listener and Client Certificate. Used by Getchilditem or getchildname.
            </summary>
            <param name="xmlResource"></param>
            <param name="ListenerOrCerMapping"></param>
            <param name="path"></param>
            <param name="host"></param>
            <param name="methodname"></param>
            <param name="recurse"></param>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.GetItemListenerOrCertMapping(System.String,System.Xml.XmlDocument,System.String,System.String,System.String)">
            <summary>
            Get a Listener or ClientCertificate Item. Used by GEt-Item.
            </summary>
            <param name="path"></param>
            <param name="xmlResource"></param>
            <param name="ContainerListenerOrClientCert"></param>
            <param name="childname"></param>
            <param name="host"></param>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.RemoveListenerOrCertMapping(System.Object,System.String,System.String,System.String[],System.Boolean)">
            <summary>
            Removes a Listener or ClientCertificate object. Used by Remove-Item cmdlets.
            </summary>
            <param name="sessionobj"></param>
            <param name="WsManUri"></param>
            <param name="childname"></param>
            <param name="primarykeys"></param>
            <param name="IsListener"></param>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.CheckValidContainerOrPath(System.String)">
            <summary>
            Used By ItemExists, HasChildItem,IsValidPath, IsItemContainer.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.GetChildItemsRecurse(System.String,System.String,Microsoft.WSMan.Management.WSManConfigProvider.ProviderMethods,System.Boolean)">
            <summary>
            For the recurse operation of Get-ChildItems.
            </summary>
            <param name="path"></param>
            <param name="childname"></param>
            <param name="methodname"></param>
            <param name="recurse"></param>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.GetChildItemsOrNames(System.String,Microsoft.WSMan.Management.WSManConfigProvider.ProviderMethods,System.Boolean)">
            <summary>
            Get the child items or Names. Used by GetChildItems and GetChildNames.
            </summary>
            <param name="path"></param>
            <param name="methodname"></param>
            <param name="recurse"></param>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.GetPluginNames(System.Xml.XmlDocument,System.Management.Automation.PSObject@,System.String@,System.String)">
            <summary>
            Get the Plugin names from the WsMan Config file.
            </summary>
            <param name="xmlPlugins"></param>
            <param name="PluginNames"></param>
            <param name="CurrentPluginName"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.AssertError(System.String,System.Boolean)">
            <summary>
            All Error are thrown using this method.
            </summary>
            <param name="ErrorMessage"></param>
            <param name="IsWSManError"></param>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.IsWSManServiceRunning">
            <summary>
            Checks whether WsMan Service is running.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.StartWSManService(System.Boolean)">
            <summary>
            Starts the WsMan service.
            </summary>
            <param name="force"></param>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.IsPathLocalMachine(System.String)">
            <summary>
            Checks whether localmachine or not. If this returns true only we start the service.
            </summary>
            <param name="host"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.ConstructPluginXml(System.Management.Automation.PSObject,System.String,System.String,System.String,System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList)">
             <summary>
             This method constructs the Configuration XML from the PSObject.
             For RunAsPassword, if the value is not of type SecureString or the value is not present
             then an Empty string is added as value. The caller of this method MUST make sure that
             the RunAsPassword (if updated) is of type SecureString.
             </summary>
             <param name="objinputparam">PSObject, from which XML will be produced.</param>
             <param name="ResourceURI">Resource URI for the XML.</param>
             <param name="host">Name of the Host.</param>
             <param name="Operation">Type of Operation.</param>
            <param name="resources">List of Resources.</param>
            <param name="securities">List of Securities</param>
            <param name="initParams">List of initialization parameters.</param>
             <returns>An Configuration XML, ready to send to server.</returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.ValidateAndGetUserObject(System.String,System.Object)">
            <summary>
            PS wraps most of the parameters to Item cmdlets in PSObject. These values are passed as 'Object'.
            This method unwraps the PSObjects and returns the base object as the required Type for the given
            configuration name as follows:
            RunAsUser - PSCredential
            RunAsPassword - SecureString
            If the object provided by user is not of required type the method return Null.
            If the object is not PSObject, the method returns the 'value'.
            </summary>
            <param name="configurationName">Name of the configuration setting.</param>
            <param name="value">Object provided by User.</param>
            <returns>Object of the required type or Null.</returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManConfigProvider.GetStringFromSecureString(System.Object)">
            <summary>
            Appends the plain text value of a SecureString variable to the StringBuilder.
            if the propertyValue provided is not SecureString appends empty string.
            </summary>
            <param name="propertyValue">Value to append.</param>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManConfigProvider.ppqWarningConfigurations">
            <summary>
            In PPQ display warnings for these configurations.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManConfigProvider.globalWarningConfigurations">
            <summary>
            Display warning for these configurations.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManConfigProvider.globalWarningUris">
            <summary>
            Display warning for these URIs.
            </summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.WSManProviderNewItemComputerParameters">
            <summary>
            Computer dynamic parameters. This is similar to connect-wsman parameters.
            Available path wsman:\>
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProviderNewItemComputerParameters.OptionSet">
            <summary>
            The following is the definition of the input parameter "OptionSet".
            OptionSet is a hash table and is used to pass a set of switches to the
            service to modify or refine the nature of the request.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProviderNewItemComputerParameters.Authentication">
            <summary>
            The following is the definition of the input parameter "Authentication".
            This parameter takes a set of authentication methods the user can select
            from. The available method are an enum called Authentication in the
            System.Management.Automation.Runspaces namespace. The available options
            should be as follows:
            - Default : Use the default authentication (ad defined by the underlying
            protocol) for establishing a remote connection.
            - Negotiate
            - Kerberos
            - Basic:  Use basic authentication for establishing a remote connection.
            -CredSSP: Use CredSSP authentication for establishing a remote connection
            which will enable the user to perform credential delegation. (i.e. second
            hop)
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProviderNewItemComputerParameters.CertificateThumbprint">
            <summary>
            Specifies the certificate thumbprint to be used to impersonate the user on the
            remote machine.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProviderNewItemComputerParameters.SessionOption">
            <summary>
            The following is the definition of the input parameter "SessionOption".
            Defines a set of extended options for the WSMan session.  This hashtable can
            be created using New-WSManSessionOption.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProviderNewItemComputerParameters.ApplicationName">
            <summary>
            The following is the definition of the input parameter "ApplicationName".
            ApplicationName identifies the remote endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProviderNewItemComputerParameters.Port">
            <summary>
            The following is the definition of the input parameter "Port".
            Specifies the port to be used when connecting to the ws management service.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProviderNewItemComputerParameters.UseSSL">
            <summary>
            The following is the definition of the input parameter "UseSSL".
            Uses the Secure Sockets Layer (SSL) protocol to establish a connection to
            the remote computer. If SSL is not available on the port specified by the
            Port parameter, the command fails.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProviderNewItemComputerParameters.ConnectionURI">
            <summary>
            The following is the definition of the input parameter "ConnectionURI".
            Specifies the transport, server, port, and ApplicationName of the new
            runspace. The format of this string is:
            transport://server:port/ApplicationName.
            </summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.WSManProviderNewItemPluginParameters">
            <summary>
            Plugin Dynamic parameter. There are 2 parameter sets.
            Path - WSMan:\Localhost\Plugin>
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProviderNewItemPluginParameters.Plugin">
            <summary>
            Parameter Plugin.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProviderNewItemPluginParameters.FileName">
            <summary>
            Parameter FileName.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProviderNewItemPluginParameters.SDKVersion">
            <summary>
            Parameter SDKVersion.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProviderNewItemPluginParameters.Resource">
            <summary>
            Parameter Resource.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProviderNewItemPluginParameters.Capability">
            <summary>
            Parameter Capability.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProviderNewItemPluginParameters.XMLRenderingType">
            <summary>
            Parameter XMLRenderingType.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProviderNewItemPluginParameters.File">
            <summary>
            Parameter File.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProviderNewItemPluginParameters.RunAsCredential">
            <summary>
            Parameter for RunAs credentials for a Plugin.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProviderNewItemPluginParameters.UseSharedProcess">
            <summary>
            Parameter for Plugin Host Process configuration (Shared or Separate).
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProviderNewItemPluginParameters.AutoRestart">
            <summary>
            Parameter for Auto Restart configuration for Plugin.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProviderNewItemPluginParameters.ProcessIdleTimeoutSec">
            <summary>
            Parameter for Idle timeout for HostProcess.
            </summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.WSManProviderInitializeParameters">
            <summary>
            Initparameters dynamic parameters
            Path - wsman:\localhost\plugin\[specified plugin]\Initializationparameters>
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProviderInitializeParameters.ParamName">
            <summary>
            Parameter ParamName.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProviderInitializeParameters.ParamValue">
            <summary>
            Parameter ParamValue.
            </summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.WSManProviderNewItemResourceParameters">
            <summary>
            Dynamic parameter for Resource Item.
            Path - WsMAn:\localhost\Plugin\[Specified Plugin]\Resources>
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProviderNewItemResourceParameters.ResourceUri">
            <summary>
            Parameter ResourceUri.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProviderNewItemResourceParameters.Capability">
            <summary>
            Parameter Capability.
            </summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.WSManProviderNewItemSecurityParameters">
            <summary>
            Security Dynamic Parameters
            Path - WsMan:\Localhost\Plugin\[Specified Plugin]\Resources\[Specified Resource]\Security>
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProviderNewItemSecurityParameters.Sddl">
            <summary>
            Parameter Sddl.
            </summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.WSManProviderClientCertificateParameters">
            <summary>
            Client Certificate Dynamic Parameters
            Path - WsMan:\Localhost\ClientCertificate.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProviderClientCertificateParameters.Issuer">
            <summary>
            Parameter Issuer.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProviderClientCertificateParameters.Subject">
            <summary>
            Parameter Subject.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProviderClientCertificateParameters.URI">
            <summary>
            Parameter URI.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProviderClientCertificateParameters.Enabled">
            <summary>
            Parameter Enabled.
            </summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.WSManProvidersListenerParameters">
            <summary>
            Listener Dynamic parameters
            Path - WsMan:\Localhost\Listener>
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProvidersListenerParameters.Address">
            <summary>
            Parameter Address.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProvidersListenerParameters.Transport">
            <summary>
            Parameter Transport.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProvidersListenerParameters.Port">
            <summary>
            Parameter Port.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProvidersListenerParameters.HostName">
            <summary>
            Parameter HostName.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProvidersListenerParameters.Enabled">
            <summary>
            Parameter Enabled.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProvidersListenerParameters.URLPrefix">
            <summary>
            Parameter URLPrefix.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProvidersListenerParameters.CertificateThumbPrint">
            <summary>
            Parameter CertificateThumbPrint.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProvidersListenerParameters.IsPortSpecified">
            <summary>
            Variable IsPortSpecified.
            </summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.WSManProviderSetItemDynamicParameters">
            <summary>
            Set-Item Dynamic parameters
            Path - WsMan:\Localhost\Client> Set-Item .\TrustedHosts.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManProviderSetItemDynamicParameters.Concatenate">
            <summary>
            Parameter Concatenate.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.DefaultPathSeparator">
            <summary>
            The default path separator used by the base implementation of the providers.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.AlternatePathSeparator">
            <summary>
            The alternate path separator used by the base implementation of the providers.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.EnclosingDoubleQuotes">
            <summary>
            Double Quotes used while constructing XML.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.Equalto">
            <summary>
            Equalto Used while constructing XML.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.GreaterThan">
            <summary>
            For XML Construction.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.XmlClosingTag">
            <summary>
            XML Closing Tag.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.SingleWhiteSpace">
            <summary>
            White space used while constructing XML.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.ProviderName">
            <summary>
            Root node of WsMan.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.WsMan_Schema">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.NS_XSI">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.ATTR_NIL">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.ATTR_NIL_NAME">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.WinrmPathSeparator">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.rootpath">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.ContainerChildValue">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.containerPlugin">
            <summary>
            Plugin Container.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.containerClient">
            <summary>
            Client Container.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.containerShell">
            <summary>
            Shell Container.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.containerClientCertificate">
            <summary>
            ClientCertificate Container.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.containerListener">
            <summary>
            Listener Container.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.containerService">
            <summary>
            Service Container.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.containerAuth">
            <summary>
            Auth Container - Under Client,Service.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.containerDefaultPorts">
            <summary>
            DefaultPorts Container - Under Client,Service.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.containerTrustedHosts">
            <summary>
            TrustedHosts Container - Under Client,Service.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.containerSecurity">
            <summary>
            Security Container - Under Plugin.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.containerResources">
            <summary>
            Resources Container - Under Plugin.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.containerSingleResource">
            <summary>
            Resource in Resources Container - Under Plugin.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.containerInitParameters">
            <summary>
            InitParameters Container - Under Plugin.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.containerQuotasParameters">
            <summary>
            Quotas Container - Under Plugin.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.containerWinrs">
            <summary>
            Winrs Container - Exposed as Shell.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.containerCertMapping">
            <summary>
            Certmapping Container - Exposed as ClientCertificate in the provider.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.NewItemPluginConfigParams">
            <summary>
            Possible Values in Plugin Top Level XML.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.NewItemResourceParams">
            Possible Values in Plugin Top Resources XML
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.NewItemInitParamsParams">
            Possible Values in Plugin Top Init Param XML
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.NewItemSecurityParams">
            Possible Values in Plugin Top Security XML
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.ConfigRunAsPasswordName">
            <summary>
            Name of the configuration which represents RunAs Password.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.ConfigRunAsUserName">
            <summary>
            Name of the configuration which represents RunAs Name.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.ConfigUseSharedProcess">
            <summary>
            Name of the configuration which represents if HostProcess is shared or separate.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.ConfigAutoRestart">
            <summary>
            Name of the configuration which represents if AutoRestart is enabled or not.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.ConfigProcessIdleTimeoutSec">
            <summary>
            Name of the configuration which represents the Host Idle Timeout in seconds.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.ConfigResourceUriName">
            <summary>
            Name of the configuration which represents the Resource URI for a Resource.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.ConfigInitializeParameterTag">
            <summary>
            Name of the tag which represents a initialization parameter.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.ConfigInitializeParameterName">
            <summary>
            Name of the tag which represents Name of the parameter.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.ConfigInitializeParameterValue">
            <summary>
            Name of the tag which represents Value of the parameter.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.ConfigSecurityUri">
            <summary>
            Name of the tag which represents a Security URI.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.HiddenSuffixForSourceOfValue">
            <summary>
            Name of the tag which represents a Security URI.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManStringLiterals.StartWinrmServiceSBFormat">
            <summary>
            This is used to start the service. return a bool value. if false we throw error.
            </summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.WSManConfigElement">
            <summary>
            Base Output object.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManConfigElement.Name">
            <summary>
            Variable Name.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManConfigElement.TypeNameOfElement">
            <summary>
            Variable TypeNameOfElement.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManConfigElement.Type">
            <summary>
            Gets or Sets the type if the object.
            </summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.WSManConfigLeafElement">
            <summary>
            Leaf Element.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManConfigLeafElement.SourceOfValue">
            <summary>
            Variable Value.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManConfigLeafElement.Value">
            <summary>
            Variable Value.
            </summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.WSManConfigContainerElement">
            <summary>
            Container Element.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManConfigContainerElement.Keys">
            <summary>
            Variable Keys.
            </summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.WSManCredSSPCommandBase">
            <summary>
            Base class used *-WSManCredSSP cmdlets (Enable-WSManCredSSP, Disable-WSManCredSSP)
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.WSManCredSSPCommandBase.Role">
            <summary>
            Role can either "Client" or "Server".
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManCredSSPCommandBase.CreateWSManSession">
            <summary>
            </summary>
            <returns>
            Returns a session object upon successful creation..otherwise
            writes an error using WriteError and returns null.
            </returns>
        </member>
        <member name="T:Microsoft.WSMan.Management.DisableWSManCredSSPCommand">
            <summary>
            Disables CredSSP authentication on the client. CredSSP authentication
            enables an application to delegate the user's credentials from the client to
            the server, hence allowing the user to perform management operations that
            access a second hop.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.DisableWSManCredSSPCommand.BeginProcessing">
            <summary>
            Begin processing method.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.DisableWSManCredSSPCommand.Dispose">
            <summary>
            Public dispose method.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.DisableWSManCredSSPCommand.Dispose(Microsoft.WSMan.Management.IWSManSession)">
            <summary>
            Public dispose method.
            </summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.EnableWSManCredSSPCommand">
             <summary>
             Enables CredSSP authentication on the client. CredSSP authentication enables
             an application to delegate the user's credentials from the client to the
             server, hence allowing the user to perform management operations that access
             a second hop.
             This cmdlet performs the following:
            
             On the client:
             1. Enables WSMan local configuration on client to enable CredSSP
             2. Sets CredSSP policy AllowFreshCredentials to wsman/Delegate. This policy
             allows delegating explicit credentials to a server when server
             authentication is achieved via a trusted X509 certificate or Kerberos.
             </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.EnableWSManCredSSPCommand.DelegateComputer">
            <summary>
            Delegate parameter.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.EnableWSManCredSSPCommand.Force">
            <summary>
            Property that sets force parameter.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.EnableWSManCredSSPCommand.BeginProcessing">
            <summary>
            BeginProcessing method.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.EnableWSManCredSSPCommand.EnableClientSideSettings">
            <summary>
            </summary>
            <exception cref="T:System.InvalidOperationException">
            </exception>
        </member>
        <member name="M:Microsoft.WSMan.Management.EnableWSManCredSSPCommand.UpdateCurrentUserRegistrySettings">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.EnableWSManCredSSPCommand.UpdateGPORegistrySettings(System.String,System.String[],Microsoft.Win32.RegistryKey,System.String)">
            <summary>
            Updates the grouppolicy registry settings.
            </summary>
            <param name="applicationname"></param>
            <param name="delegatestring"></param>
            <param name="rootKey"></param>
            <param name="Registry_Path"></param>
        </member>
        <member name="M:Microsoft.WSMan.Management.EnableWSManCredSSPCommand.Dispose">
            <summary>
            Public dispose method.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.EnableWSManCredSSPCommand.Dispose(Microsoft.WSMan.Management.IWSManSession)">
            <summary>
            Public dispose method.
            </summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.GetWSManCredSSPCommand">
            <summary>
            Gets the CredSSP related configuration on the client. CredSSP authentication
            enables an application to delegate the user's credentials from the client to
            the server, hence allowing the user to perform management operations that
            access a second hop.
            This cmdlet performs the following:
            1. Gets the configuration for WSMan policy on client to enable/disable
            CredSSP
            2. Gets the configuration information for the CredSSP policy
            AllowFreshCredentials . This policy allows delegating explicit credentials
            to a server when server authentication is achieved via a trusted X509
            certificate or Kerberos.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.GetWSManCredSSPCommand.GetDelegateSettings(System.String)">
            <summary>
            Method to get the values.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.GetWSManCredSSPCommand.BeginProcessing">
            <summary>
            Method to begin processing.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.GetWSManCredSSPCommand.Dispose">
            <summary>
            Public dispose method.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.GetWSManCredSSPCommand.Dispose(Microsoft.WSMan.Management.IWSManSession)">
            <summary>
            Public dispose method.
            </summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.CurrentConfigurations">
            <summary>
            Class that queries the server and gets current configurations.
            Also provides a generic way to update the configurations.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.CurrentConfigurations.DefaultNameSpacePrefix">
            <summary>
            Prefix used to add NameSpace of root element to namespace manager.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.CurrentConfigurations.rootDocument">
            <summary>
            This holds the current configurations XML.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.CurrentConfigurations.documentElement">
            <summary>
            Holds the reference to the current document element.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.CurrentConfigurations.nameSpaceManger">
            <summary>
            Holds the Namespace Manager to use for XPATH queries.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.CurrentConfigurations.serverSession">
            <summary>
            Session of the WsMan sserver.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.CurrentConfigurations.ServerSession">
            <summary>
            Gets the server session associated with the configuration.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.CurrentConfigurations.RootDocument">
            <summary>
            Gets the current configuration XML.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.CurrentConfigurations.#ctor(Microsoft.WSMan.Management.IWSManSession)">
            <summary>
            Gets the current configuration on the given server and for given URI.
            This issues a GET request to the server.
            </summary>
            <param name="serverSession">Current server session.</param>
        </member>
        <member name="M:Microsoft.WSMan.Management.CurrentConfigurations.RefreshCurrentConfiguration(System.String)">
            <summary>
            Refresh the CurrentConfiguration. This method calls GET operation for the given
            URI on the server and update the current configuration. It also initialize some
            of required class members.
            </summary>
            <param name="responseOfGet">Plugin configuration.</param>
            <returns>False, if operation failed.</returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.CurrentConfigurations.PutConfigurationOnServer(System.String)">
            <summary>
            Update the server with updated XML.
            Issues a PUT request with the ResourceUri provided.
            </summary>
            <param name="resourceUri">Resource URI to use.</param>
            <returns>False, if operation is not successful.</returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.CurrentConfigurations.RemoveOneConfiguration(System.String)">
            <summary>
            This method will remove the configuration from the XML.
            Currently the method will only remove the attributes. But it is extensible enough to support
            Node removals in future.
            </summary>
            <param name="pathToNodeFromRoot">Path with namespace to the node from Root element. Must not end with '/'.</param>
        </member>
        <member name="M:Microsoft.WSMan.Management.CurrentConfigurations.UpdateOneConfiguration(System.String,System.String,System.String)">
            <summary>
            Create or Update the value of the configuration on the given Node. Currently this
            method is supported for updating attributes, but can be easily updated for nodes.
            Caller should call this method to add a new attribute to the Node.
            </summary>
            <param name="pathToNodeFromRoot">Path with namespace to the node from Root element. Must not end with '/'.</param>
            <param name="configurationName">Name of the configuration with name space to update or create.</param>
            <param name="configurationValue">Value of the configurations.</param>
        </member>
        <member name="M:Microsoft.WSMan.Management.CurrentConfigurations.GetOneConfiguration(System.String)">
            <summary>
            Gets the value of the configuration on the given Node or attribute.
            </summary>
            <param name="pathFromRoot">Path with namespace to the node from Root element.</param>
            <returns>Value of the Node, or Null if no node present.</returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.CurrentConfigurations.RemoveAttribute(System.Xml.XmlAttribute)">
            <summary>
            Removes the attribute from OwnerNode.
            </summary>
            <param name="attributeToRemove">Attribute to Remove.</param>
        </member>
        <member name="T:Microsoft.WSMan.Management.WSManEnumFlags">
            <summary><para>_WSManEnumFlags enumeration.</para></summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManEnumFlags.WSManFlagNonXmlText">
            <summary><para><c>WSManFlagNonXmlText</c> constant of <c>_WSManEnumFlags</c> enumeration.  </para><para>Constant value is 1.</para></summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManEnumFlags.WSManFlagReturnObject">
            <summary><para><c>WSManFlagReturnObject</c> constant of <c>_WSManEnumFlags</c> enumeration.  </para><para>Constant value is 0.</para></summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManEnumFlags.WSManFlagReturnEPR">
            <summary><para><c>WSManFlagReturnEPR</c> constant of <c>_WSManEnumFlags</c> enumeration.  </para><para>Constant value is 2.</para></summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManEnumFlags.WSManFlagReturnObjectAndEPR">
            <summary><para><c>WSManFlagReturnObjectAndEPR</c> constant of <c>_WSManEnumFlags</c> enumeration.  </para><para>Constant value is 4.</para></summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManEnumFlags.WSManFlagHierarchyDeep">
            <summary><para><c>WSManFlagHierarchyDeep</c> constant of <c>_WSManEnumFlags</c> enumeration.  </para><para>Constant value is 0.</para></summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManEnumFlags.WSManFlagHierarchyShallow">
            <summary><para><c>WSManFlagHierarchyShallow</c> constant of <c>_WSManEnumFlags</c> enumeration.  </para><para>Constant value is 32.</para></summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManEnumFlags.WSManFlagHierarchyDeepBasePropsOnly">
            <summary><para><c>WSManFlagHierarchyDeepBasePropsOnly</c> constant of <c>_WSManEnumFlags</c> enumeration.  </para><para>Constant value is 64.</para></summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManEnumFlags.WSManFlagAssociationInstance">
            <summary><para><c>WSManFlagAssociationInstance </c> constant of <c>_WSManEnumFlags</c> enumeration.  </para><para>Constant value is 64.</para></summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.WSManSessionFlags">
            <summary><para>WSManSessionFlags enumeration.</para></summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManSessionFlags.WSManNone">
            <summary><para><c>no flag</c> constant of <c>_WSManSessionFlags</c> enumeration.  </para><para>Constant value is 1.</para></summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManSessionFlags.WSManFlagUtf8">
            <summary><para><c>WSManFlagUTF8</c> constant of <c>_WSManSessionFlags</c> enumeration.  </para><para>Constant value is 1.</para></summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManSessionFlags.WSManFlagCredUserNamePassword">
            <summary><para><c>WSManFlagCredUsernamePassword</c> constant of <c>_WSManSessionFlags</c> enumeration.  </para><para>Constant value is 4096.</para></summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManSessionFlags.WSManFlagSkipCACheck">
            <summary><para><c>WSManFlagSkipCACheck</c> constant of <c>_WSManSessionFlags</c> enumeration.  </para><para>Constant value is 8192.</para></summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManSessionFlags.WSManFlagSkipCNCheck">
            <summary><para><c>WSManFlagSkipCNCheck</c> constant of <c>_WSManSessionFlags</c> enumeration.  </para><para>Constant value is 16384.</para></summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManSessionFlags.WSManFlagUseNoAuthentication">
            <summary><para><c>WSManFlagUseNoAuthentication</c> constant of <c>_WSManSessionFlags</c> enumeration.  </para><para>Constant value is 32768.</para></summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManSessionFlags.WSManFlagUseDigest">
            <summary><para><c>WSManFlagUseDigest</c> constant of <c>_WSManSessionFlags</c> enumeration.  </para><para>Constant value is 65536.</para></summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManSessionFlags.WSManFlagUseNegotiate">
            <summary><para><c>WSManFlagUseNegotiate</c> constant of <c>_WSManSessionFlags</c> enumeration.  </para><para>Constant value is 131072.</para></summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManSessionFlags.WSManFlagUseBasic">
            <summary><para><c>WSManFlagUseBasic</c> constant of <c>_WSManSessionFlags</c> enumeration.  </para><para>Constant value is 262144.</para></summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManSessionFlags.WSManFlagUseKerberos">
            <summary><para><c>WSManFlagUseKerberos</c> constant of <c>_WSManSessionFlags</c> enumeration.  </para><para>Constant value is 524288.</para></summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManSessionFlags.WSManFlagNoEncryption">
            <summary><para><c>WSManFlagNoEncryption</c> constant of <c>_WSManSessionFlags</c> enumeration.  </para><para>Constant value is 1048576.</para></summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManSessionFlags.WSManFlagEnableSpnServerPort">
            <summary><para><c>WSManFlagEnableSPNServerPort</c> constant of <c>_WSManSessionFlags</c> enumeration.  </para><para>Constant value is 4194304.</para></summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManSessionFlags.WSManFlagUtf16">
            <summary><para><c>WSManFlagUTF16</c> constant of <c>_WSManSessionFlags</c> enumeration.  </para><para>Constant value is 8388608.</para></summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManSessionFlags.WSManFlagUseCredSsp">
            <summary><para><c>WSManFlagUseCredSsp</c> constant of <c>_WSManSessionFlags</c> enumeration.  </para><para>Constant value is 16777216.</para></summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManSessionFlags.WSManFlagUseClientCertificate">
            <summary><para><c>WSManFlagUseClientCertificate</c> constant of <c>_WSManSessionFlags</c> enumeration.  </para><para>Constant value is 2097152.</para></summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManSessionFlags.WSManFlagSkipRevocationCheck">
            <summary><para><c>WSManFlagSkipRevocationCheck</c> constant of <c>_WSManSessionFlags</c> enumeration.  </para><para>Constant value is 33554432.</para></summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManSessionFlags.WSManFlagAllowNegotiateImplicitCredentials">
            <summary><para><c>WSManFlagAllowNegotiateImplicitCredentials</c> constant of <c>_WSManSessionFlags</c> enumeration.  </para><para>Constant value is 67108864.</para></summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManSessionFlags.WSManFlagUseSsl">
            <summary><para><c>WSManFlagUseSsl</c> constant of <c>_WSManSessionFlags</c> enumeration.  </para><para>Constant value is 134217728.</para></summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.AuthenticationMechanism">
            <summary>WSManEnumFlags enumeration</summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.AuthenticationMechanism.None">
            <summary>
            Use no authentication.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.AuthenticationMechanism.Default">
            <summary>
            Use Default authentication.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.AuthenticationMechanism.Digest">
            <summary>
            Use digest authentication for a remote operation.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.AuthenticationMechanism.Negotiate">
            <summary>
            Use negotiate authentication for a remote operation (may use kerberos or ntlm)
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.AuthenticationMechanism.Basic">
            <summary>
            Use basic authentication for a remote operation.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.AuthenticationMechanism.Kerberos">
            <summary>
            Use kerberos authentication for a remote operation.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.AuthenticationMechanism.ClientCertificate">
            <summary>
            Use client certificate authentication for a remote operation.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.AuthenticationMechanism.Credssp">
            <summary>
            Use CredSSP authentication for a remote operation.
            </summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.IWSMan">
            <summary><para><c>IWSMan</c> interface.</para></summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSMan.CreateSession(System.String,System.Int32,System.Object)">
            <summary><para><c>CreateSession</c> method of <c>IWSMan</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>CreateSession</c> method was the following:  <c>HRESULT CreateSession ([optional, defaultvalue(string.Empty)] BSTR connection, [optional, defaultvalue(0)] long flags, [optional] IDispatch* connectionOptions, [out, retval] IDispatch** ReturnValue)</c>;</para></remarks>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSMan.CreateConnectionOptions">
            <summary><para><c>CreateConnectionOptions</c> method of <c>IWSMan</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>CreateConnectionOptions</c> method was the following:  <c>HRESULT CreateConnectionOptions ([out, retval] IDispatch** ReturnValue)</c>;</para></remarks>
        </member>
        <member name="P:Microsoft.WSMan.Management.IWSMan.CommandLine">
            <summary><para><c>CommandLine</c> property of <c>IWSMan</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>CommandLine</c> property was the following:  <c>BSTR CommandLine</c>;</para></remarks>
        </member>
        <member name="P:Microsoft.WSMan.Management.IWSMan.Error">
            <summary><para><c>Error</c> property of <c>IWSMan</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>Error</c> property was the following:  <c>BSTR Error</c>;</para></remarks>
        </member>
        <member name="T:Microsoft.WSMan.Management.IWSManConnectionOptions">
            <summary><para><c>IWSManConnectionOptions</c> interface.</para></summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.IWSManConnectionOptions.UserName">
            <summary><para><c>UserName</c> property of <c>IWSManConnectionOptions</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>UserName</c> property was the following:  <c>BSTR UserName</c>;</para></remarks>
        </member>
        <member name="P:Microsoft.WSMan.Management.IWSManConnectionOptions.Password">
            <summary><para><c>Password</c> property of <c>IWSManConnectionOptions</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>Password</c> property was the following:  <c>BSTR Password</c>;</para></remarks>
        </member>
        <member name="T:Microsoft.WSMan.Management.IWSManConnectionOptionsEx">
            <summary><para><c>IWSManConnectionOptions</c> interface.</para></summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.IWSManConnectionOptionsEx.CertificateThumbprint">
            <summary><para><c>CertificateThumbprint</c> property of <c>IWSManConnectionOptionsEx</c> interface.</para></summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.IWSManConnectionOptionsEx2">
            <summary><para><c>IWSManConnectionOptions</c> interface.</para></summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManConnectionOptionsEx2.SetProxy(System.Int32,System.Int32,System.String,System.String)">
            <summary><para><c>SetProxy</c> method of <c>IWSManConnectionOptionsEx2</c> interface.</para></summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManConnectionOptionsEx2.ProxyIEConfig">
            <summary><para><c>ProxyIEConfig</c> method of <c>IWSManConnectionOptionsEx2</c> interface.</para></summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManConnectionOptionsEx2.ProxyWinHttpConfig">
            <summary><para><c>ProxyWinHttpConfig</c> method of <c>IWSManConnectionOptionsEx2</c> interface.</para></summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManConnectionOptionsEx2.ProxyAutoDetect">
            <summary><para><c>ProxyAutoDetect</c> method of <c>IWSManConnectionOptionsEx2</c> interface.</para></summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManConnectionOptionsEx2.ProxyNoProxyServer">
            <summary><para><c>ProxyNoProxyServer</c> method of <c>IWSManConnectionOptionsEx2</c> interface.</para></summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManConnectionOptionsEx2.ProxyAuthenticationUseNegotiate">
            <summary><para><c>ProxyAuthenticationUseNegotiate</c> method of <c>IWSManConnectionOptionsEx2</c> interface.</para></summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManConnectionOptionsEx2.ProxyAuthenticationUseBasic">
            <summary><para><c>ProxyAuthenticationUseBasic</c> method of <c>IWSManConnectionOptionsEx2</c> interface.</para></summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManConnectionOptionsEx2.ProxyAuthenticationUseDigest">
            <summary><para><c>ProxyAuthenticationUseDigest</c> method of <c>IWSManConnectionOptionsEx2</c> interface.</para></summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.IWSManEnumerator">
            <summary><para><c>IWSManEnumerator</c> interface.</para></summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManEnumerator.ReadItem">
            <summary><para><c>ReadItem</c> method of <c>IWSManEnumerator</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>ReadItem</c> method was the following:  <c>HRESULT ReadItem ([out, retval] BSTR* ReturnValue)</c>;</para></remarks>
        </member>
        <member name="P:Microsoft.WSMan.Management.IWSManEnumerator.AtEndOfStream">
            <summary><para><c>AtEndOfStream</c> property of <c>IWSManEnumerator</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>AtEndOfStream</c> property was the following:  <c>BOOL AtEndOfStream</c>;</para></remarks>
        </member>
        <member name="P:Microsoft.WSMan.Management.IWSManEnumerator.Error">
            <summary><para><c>Error</c> property of <c>IWSManEnumerator</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>Error</c> property was the following:  <c>BSTR Error</c>;</para></remarks>
        </member>
        <member name="T:Microsoft.WSMan.Management.IWSManEx">
            <summary><para><c>IWSManEx</c> interface.</para></summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManEx.CreateSession(System.String,System.Int32,System.Object)">
            <summary><para><c>CreateSession</c> method of <c>IWSManEx</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>CreateSession</c> method was the following:  <c>HRESULT CreateSession ([optional, defaultvalue(string.Empty)] BSTR connection, [optional, defaultvalue(0)] long flags, [optional] IDispatch* connectionOptions, [out, retval] IDispatch** ReturnValue)</c>;</para></remarks>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManEx.CreateConnectionOptions">
            <summary><para><c>CreateConnectionOptions</c> method of <c>IWSManEx</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>CreateConnectionOptions</c> method was the following:  <c>HRESULT CreateConnectionOptions ([out, retval] IDispatch** ReturnValue)</c>;</para></remarks>
        </member>
        <member name="P:Microsoft.WSMan.Management.IWSManEx.CommandLine">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.WSMan.Management.IWSManEx.Error">
            <summary><para><c>Error</c> property of <c>IWSManEx</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>Error</c> property was the following:  <c>BSTR Error</c>;</para></remarks>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManEx.CreateResourceLocator(System.String)">
            <summary><para><c>CreateResourceLocator</c> method of <c>IWSManEx</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>CreateResourceLocator</c> method was the following:  <c>HRESULT CreateResourceLocator ([optional, defaultvalue(string.Empty)] BSTR strResourceLocator, [out, retval] IDispatch** ReturnValue)</c>;</para></remarks>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManEx.SessionFlagUTF8">
            <summary><para><c>SessionFlagUTF8</c> method of <c>IWSManEx</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>SessionFlagUTF8</c> method was the following:  <c>HRESULT SessionFlagUTF8 ([out, retval] long* ReturnValue)</c>;</para></remarks>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManEx.SessionFlagCredUsernamePassword">
            <summary><para><c>SessionFlagCredUsernamePassword</c> method of <c>IWSManEx</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>SessionFlagCredUsernamePassword</c> method was the following:  <c>HRESULT SessionFlagCredUsernamePassword ([out, retval] long* ReturnValue)</c>;</para></remarks>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManEx.SessionFlagSkipCACheck">
            <summary><para><c>SessionFlagSkipCACheck</c> method of <c>IWSManEx</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>SessionFlagSkipCACheck</c> method was the following:  <c>HRESULT SessionFlagSkipCACheck ([out, retval] long* ReturnValue)</c>;</para></remarks>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManEx.SessionFlagSkipCNCheck">
            <summary><para><c>SessionFlagSkipCNCheck</c> method of <c>IWSManEx</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>SessionFlagSkipCNCheck</c> method was the following:  <c>HRESULT SessionFlagSkipCNCheck ([out, retval] long* ReturnValue)</c>;</para></remarks>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManEx.SessionFlagUseDigest">
            <summary><para><c>SessionFlagUseDigest</c> method of <c>IWSManEx</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>SessionFlagUseDigest</c> method was the following:  <c>HRESULT SessionFlagUseDigest ([out, retval] long* ReturnValue)</c>;</para></remarks>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManEx.SessionFlagUseNegotiate">
            <summary><para><c>SessionFlagUseNegotiate</c> method of <c>IWSManEx</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>SessionFlagUseNegotiate</c> method was the following:  <c>HRESULT SessionFlagUseNegotiate ([out, retval] long* ReturnValue)</c>;</para></remarks>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManEx.SessionFlagUseBasic">
            <summary><para><c>SessionFlagUseBasic</c> method of <c>IWSManEx</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>SessionFlagUseBasic</c> method was the following:  <c>HRESULT SessionFlagUseBasic ([out, retval] long* ReturnValue)</c>;</para></remarks>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManEx.SessionFlagUseKerberos">
            <summary><para><c>SessionFlagUseKerberos</c> method of <c>IWSManEx</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>SessionFlagUseKerberos</c> method was the following:  <c>HRESULT SessionFlagUseKerberos ([out, retval] long* ReturnValue)</c>;</para></remarks>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManEx.SessionFlagNoEncryption">
            <summary><para><c>SessionFlagNoEncryption</c> method of <c>IWSManEx</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>SessionFlagNoEncryption</c> method was the following:  <c>HRESULT SessionFlagNoEncryption ([out, retval] long* ReturnValue)</c>;</para></remarks>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManEx.SessionFlagEnableSPNServerPort">
            <summary><para><c>SessionFlagEnableSPNServerPort</c> method of <c>IWSManEx</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>SessionFlagEnableSPNServerPort</c> method was the following:  <c>HRESULT SessionFlagEnableSPNServerPort ([out, retval] long* ReturnValue)</c>;</para></remarks>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManEx.SessionFlagUseNoAuthentication">
            <summary><para><c>SessionFlagUseNoAuthentication</c> method of <c>IWSManEx</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>SessionFlagUseNoAuthentication</c> method was the following:  <c>HRESULT SessionFlagUseNoAuthentication ([out, retval] long* ReturnValue)</c>;</para></remarks>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManEx.EnumerationFlagNonXmlText">
            <summary><para><c>EnumerationFlagNonXmlText</c> method of <c>IWSManEx</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>EnumerationFlagNonXmlText</c> method was the following:  <c>HRESULT EnumerationFlagNonXmlText ([out, retval] long* ReturnValue)</c>;</para></remarks>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManEx.EnumerationFlagReturnEPR">
            <summary><para><c>EnumerationFlagReturnEPR</c> method of <c>IWSManEx</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>EnumerationFlagReturnEPR</c> method was the following:  <c>HRESULT EnumerationFlagReturnEPR ([out, retval] long* ReturnValue)</c>;</para></remarks>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManEx.EnumerationFlagReturnObjectAndEPR">
            <summary><para><c>EnumerationFlagReturnObjectAndEPR</c> method of <c>IWSManEx</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>EnumerationFlagReturnObjectAndEPR</c> method was the following:  <c>HRESULT EnumerationFlagReturnObjectAndEPR ([out, retval] long* ReturnValue)</c>;</para></remarks>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManEx.GetErrorMessage(System.UInt32)">
            <summary><para><c>GetErrorMessage</c> method of <c>IWSManEx</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>GetErrorMessage</c> method was the following:  <c>HRESULT GetErrorMessage (unsigned long errorNumber, [out, retval] BSTR* ReturnValue)</c>;</para></remarks>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManEx.EnumerationFlagHierarchyDeep">
            <summary><para><c>EnumerationFlagHierarchyDeep</c> method of <c>IWSManEx</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>EnumerationFlagHierarchyDeep</c> method was the following:  <c>HRESULT EnumerationFlagHierarchyDeep ([out, retval] long* ReturnValue)</c>;</para></remarks>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManEx.EnumerationFlagHierarchyShallow">
            <summary><para><c>EnumerationFlagHierarchyShallow</c> method of <c>IWSManEx</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>EnumerationFlagHierarchyShallow</c> method was the following:  <c>HRESULT EnumerationFlagHierarchyShallow ([out, retval] long* ReturnValue)</c>;</para></remarks>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManEx.EnumerationFlagHierarchyDeepBasePropsOnly">
            <summary><para><c>EnumerationFlagHierarchyDeepBasePropsOnly</c> method of <c>IWSManEx</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>EnumerationFlagHierarchyDeepBasePropsOnly</c> method was the following:  <c>HRESULT EnumerationFlagHierarchyDeepBasePropsOnly ([out, retval] long* ReturnValue)</c>;</para></remarks>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManEx.EnumerationFlagReturnObject">
            <summary><para><c>EnumerationFlagReturnObject</c> method of <c>IWSManEx</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>EnumerationFlagReturnObject</c> method was the following:  <c>HRESULT EnumerationFlagReturnObject ([out, retval] long* ReturnValue)</c>;</para></remarks>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManEx.EnumerationFlagAssociationInstance">
            <summary><para><c>CommandLine</c> property of <c>IWSManEx</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>CommandLine</c> property was the following:  <c>BSTR CommandLine</c>;</para></remarks>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManEx.EnumerationFlagAssociatedInstance">
            <summary><para><c>CommandLine</c> property of <c>IWSManEx</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>CommandLine</c> property was the following:  <c>BSTR CommandLine</c>;</para></remarks>
        </member>
        <member name="T:Microsoft.WSMan.Management.IWSManResourceLocator">
            <summary><para><c>IWSManResourceLocator</c> interface.</para></summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.IWSManResourceLocator.ResourceUri">
            <summary><para><c>resourceUri</c> property of <c>IWSManResourceLocator</c> interface.  </para><para>Set the resource URI. Must contain path only -- query string is not allowed here.</para></summary>
            <remarks><para>An original IDL definition of <c>resourceUri</c> property was the following:  <c>BSTR resourceUri</c>;</para></remarks>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManResourceLocator.AddSelector(System.String,System.Object)">
            <summary><para><c>AddSelector</c> method of <c>IWSManResourceLocator</c> interface.  </para><para>Add selector to resource locator</para></summary>
            <remarks><para>An original IDL definition of <c>AddSelector</c> method was the following:  <c>HRESULT AddSelector (BSTR resourceSelName, VARIANT selValue)</c>;</para></remarks>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManResourceLocator.ClearSelectors">
            <summary><para><c>ClearSelectors</c> method of <c>IWSManResourceLocator</c> interface.  </para><para>Clear all selectors</para></summary>
            <remarks><para>An original IDL definition of <c>ClearSelectors</c> method was the following:  <c>HRESULT ClearSelectors (void)</c>;</para></remarks>
        </member>
        <member name="P:Microsoft.WSMan.Management.IWSManResourceLocator.FragmentPath">
            <summary><para><c>FragmentPath</c> property of <c>IWSManResourceLocator</c> interface.  </para><para>Gets the fragment path</para></summary>
            <remarks><para>An original IDL definition of <c>FragmentPath</c> property was the following:  <c>BSTR FragmentPath</c>;</para></remarks>
        </member>
        <member name="P:Microsoft.WSMan.Management.IWSManResourceLocator.FragmentDialect">
            <summary><para><c>FragmentDialect</c> property of <c>IWSManResourceLocator</c> interface.  </para><para>Gets the Fragment dialect</para></summary>
            <remarks><para>An original IDL definition of <c>FragmentDialect</c> property was the following:  <c>BSTR FragmentDialect</c>;</para></remarks>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManResourceLocator.AddOption(System.String,System.Object,System.Int32)">
            <summary><para><c>AddOption</c> method of <c>IWSManResourceLocator</c> interface.  </para><para>Add option to resource locator</para></summary>
            <remarks><para>An original IDL definition of <c>AddOption</c> method was the following:  <c>HRESULT AddOption (BSTR OptionName, VARIANT OptionValue, [optional, defaultvalue(0)] long mustComply)</c>;</para></remarks>
        </member>
        <member name="P:Microsoft.WSMan.Management.IWSManResourceLocator.MustUnderstandOptions">
            <summary><para><c>MustUnderstandOptions</c> property of <c>IWSManResourceLocator</c> interface.  </para><para>Sets the MustUnderstandOptions value</para></summary>
            <remarks><para>An original IDL definition of <c>MustUnderstandOptions</c> property was the following:  <c>long MustUnderstandOptions</c>;</para></remarks>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManResourceLocator.ClearOptions">
            <summary><para><c>ClearOptions</c> method of <c>IWSManResourceLocator</c> interface.  </para><para>Clear all options</para></summary>
            <remarks><para>An original IDL definition of <c>ClearOptions</c> method was the following:  <c>HRESULT ClearOptions (void)</c>;</para></remarks>
        </member>
        <member name="P:Microsoft.WSMan.Management.IWSManResourceLocator.Error">
            <summary><para><c>Error</c> property of <c>IWSManResourceLocator</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>Error</c> property was the following:  <c>BSTR Error</c>;</para></remarks>
        </member>
        <member name="T:Microsoft.WSMan.Management.IWSManSession">
            <summary><para><c>IWSManSession</c> interface.</para></summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManSession.Get(System.Object,System.Int32)">
            <summary><para><c>Get</c> method of <c>IWSManSession</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>Get</c> method was the following:  <c>HRESULT Get (VARIANT resourceUri, [optional, defaultvalue(0)] long flags, [out, retval] BSTR* ReturnValue)</c>;</para></remarks>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManSession.Put(System.Object,System.String,System.Int32)">
            <summary><para><c>Put</c> method of <c>IWSManSession</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>Put</c> method was the following:  <c>HRESULT Put (VARIANT resourceUri, BSTR resource, [optional, defaultvalue(0)] long flags, [out, retval] BSTR* ReturnValue)</c>;</para></remarks>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManSession.Create(System.Object,System.String,System.Int32)">
            <summary><para><c>Create</c> method of <c>IWSManSession</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>Create</c> method was the following:  <c>HRESULT Create (VARIANT resourceUri, BSTR resource, [optional, defaultvalue(0)] long flags, [out, retval] BSTR* ReturnValue)</c>;</para></remarks>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManSession.Delete(System.Object,System.Int32)">
            <summary><para><c>Delete</c> method of <c>IWSManSession</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>Delete</c> method was the following:  <c>HRESULT Delete (VARIANT resourceUri, [optional, defaultvalue(0)] long flags)</c>;</para></remarks>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManSession.Invoke(System.String,System.Object,System.String,System.Int32)">
            <summary>
            </summary>
            <param name="actionURI"></param>
            <param name="resourceUri"></param>
            <param name="parameters"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManSession.Enumerate(System.Object,System.String,System.String,System.Int32)">
            <summary><para><c>Enumerate</c> method of <c>IWSManSession</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>Enumerate</c> method was the following:  <c>HRESULT Enumerate (VARIANT resourceUri, [optional, defaultvalue(string.Empty)] BSTR filter, [optional, defaultvalue(string.Empty)] BSTR dialect, [optional, defaultvalue(0)] long flags, [out, retval] IDispatch** ReturnValue)</c>;</para></remarks>
        </member>
        <member name="M:Microsoft.WSMan.Management.IWSManSession.Identify(System.Int32)">
            <summary><para><c>Identify</c> method of <c>IWSManSession</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>Identify</c> method was the following:  <c>HRESULT Identify ([optional, defaultvalue(0)] long flags, [out, retval] BSTR* ReturnValue)</c>;</para></remarks>
        </member>
        <member name="P:Microsoft.WSMan.Management.IWSManSession.Error">
            <summary><para><c>Error</c> property of <c>IWSManSession</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>Error</c> property was the following:  <c>BSTR Error</c>;</para></remarks>
        </member>
        <member name="P:Microsoft.WSMan.Management.IWSManSession.BatchItems">
            <summary><para><c>BatchItems</c> property of <c>IWSManSession</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>BatchItems</c> property was the following:  <c>long BatchItems</c>;</para></remarks>
        </member>
        <member name="P:Microsoft.WSMan.Management.IWSManSession.Timeout">
            <summary><para><c>Timeout</c> property of <c>IWSManSession</c> interface.</para></summary>
            <remarks><para>An original IDL definition of <c>Timeout</c> property was the following:  <c>long Timeout</c>;</para></remarks>
        </member>
        <member name="T:Microsoft.WSMan.Management.IWSManResourceLocatorInternal">
            <summary><para><c>IWSManResourceLocatorInternal</c> interface.</para></summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.WSManClass">
            <summary><para><c>WSMan</c> interface.</para></summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.GPClass">
            <summary><para><c>GPClass</c> interface.</para></summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.GpoNativeApi">
            <summary><para><c>GpoNativeApi</c></para></summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.InvokeWSManActionCommand">
            <summary>
            Executes action on a target object specified by RESOURCE_URI, where
            parameters are specified by key value pairs.
            eg., Call StartService method on the spooler service
            Invoke-WSManAction -Action StartService -ResourceURI wmicimv2/Win32_Service
            -SelectorSet {Name=Spooler}
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.InvokeWSManActionCommand.Action">
            <summary>
            The following is the definition of the input parameter "Action".
            Indicates the method which needs to be executed on the management object
            specified by the ResourceURI and selectors.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.InvokeWSManActionCommand.ApplicationName">
            <summary>
            The following is the definition of the input parameter "ApplicationName".
            ApplicationName identifies the remote endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.InvokeWSManActionCommand.ComputerName">
            <summary>
            The following is the definition of the input parameter "ComputerName".
            Executes the management operation on the specified computer(s). The default
            is the local computer. Type the fully qualified domain name, NETBIOS name or
            IP address to indicate the remote host(s)
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.InvokeWSManActionCommand.ConnectionURI">
            <summary>
            The following is the definition of the input parameter "ConnectionURI".
            Specifies the transport, server, port, and ApplicationName of the new
            runspace. The format of this string is:
            transport://server:port/ApplicationName.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.InvokeWSManActionCommand.FilePath">
            <summary>
            The following is the definition of the input parameter "FilePath".
            Updates the management resource specified by the ResourceURI and SelectorSet
            via this input file.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.InvokeWSManActionCommand.OptionSet">
            <summary>
            The following is the definition of the input parameter "OptionSet".
            OptionSet is a hashtable and is used to pass a set of switches to the
            service to modify or refine the nature of the request.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.InvokeWSManActionCommand.Port">
            <summary>
            The following is the definition of the input parameter "Port".
            Specifies the port to be used when connecting to the ws management service.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.InvokeWSManActionCommand.SelectorSet">
            <summary>
            The following is the definition of the input parameter "SelectorSet".
            SelectorSet is a hash table which helps in identify an instance of the
            management resource if there are more than 1 instance of the resource
            class.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.InvokeWSManActionCommand.SessionOption">
            <summary>
            The following is the definition of the input parameter "SessionOption".
            Defines a set of extended options for the WSMan session. This hashtable can
            be created using New-WSManSessionOption.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.InvokeWSManActionCommand.UseSSL">
            <summary>
            The following is the definition of the input parameter "UseSSL".
            Uses the Secure Sockets Layer (SSL) protocol to establish a connection to
            the remote computer. If SSL is not available on the port specified by the
            Port parameter, the command fails.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.InvokeWSManActionCommand.ValueSet">
            <summary>
            The following is the definition of the input parameter "ValueSet".
            ValueSet is a hahs table which helps to modify resource represented by the
            ResourceURI and SelectorSet.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.InvokeWSManActionCommand.ResourceURI">
            <summary>
            The following is the definition of the input parameter "ResourceURI".
            URI of the resource class/instance representation.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.InvokeWSManActionCommand.BeginProcessing">
            <summary>
            BeginProcessing method.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.InvokeWSManActionCommand.ProcessRecord">
            <summary>
            ProcessRecord method.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.InvokeWSManActionCommand.Dispose">
            <summary>
            Public dispose method.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.InvokeWSManActionCommand.Dispose(Microsoft.WSMan.Management.IWSManSession)">
            <summary>
            Public dispose method.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.InvokeWSManActionCommand.EndProcessing">
            <summary>
            BeginProcessing method.
            </summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.NewWSManSessionOptionCommand">
            <summary>
            Creates a WSMan Session option hashtable which can be passed into WSMan
            cmdlets:
            Get-WSManInstance
            Set-WSManInstance
            Invoke-WSManAction
            Connect-WSMan.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.NewWSManSessionOptionCommand.ProxyAccessType">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.NewWSManSessionOptionCommand.ProxyAuthentication">
            <summary>
            The following is the definition of the input parameter "ProxyAuthentication".
            This parameter takes a set of authentication methods the user can select
            from.  The available options should be as follows:
            - Negotiate: Use the default authentication (ad defined by the underlying
            protocol) for establishing a remote connection.
            - Basic:  Use basic authentication for establishing a remote connection
            - Digest: Use Digest authentication for establishing a remote connection.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.NewWSManSessionOptionCommand.ProxyCredential">
            <summary>
            The following is the definition of the input parameter "ProxyCredential".
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.NewWSManSessionOptionCommand.SkipCACheck">
            <summary>
            The following is the definition of the input parameter "SkipCACheck".
            When connecting over HTTPS, the client does not validate that the server
            certificate is signed by a trusted certificate authority (CA). Use only when
            the remote computer is trusted by other means, for example, if the remote
            computer is part of a network that is physically secure and isolated or the
            remote computer is listed as a trusted host in WinRM configuration.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.NewWSManSessionOptionCommand.SkipCNCheck">
            <summary>
            The following is the definition of the input parameter "SkipCNCheck".
            Indicates that certificate common name (CN) of the server need not match the
            hostname of the server. Used only in remote operations using https. This
            option should only be used for trusted machines.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.NewWSManSessionOptionCommand.SkipRevocationCheck">
            <summary>
            The following is the definition of the input parameter "SkipRevocation".
            Indicates that certificate common name (CN) of the server need not match the
            hostname of the server. Used only in remote operations using https. This
            option should only be used for trusted machines.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.NewWSManSessionOptionCommand.SPNPort">
            <summary>
            The following is the definition of the input parameter "SPNPort".
            Appends port number to the connection Service Principal Name SPN of the
            remote server.
            SPN is used when authentication mechanism is Kerberos or Negotiate.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.NewWSManSessionOptionCommand.OperationTimeout">
            <summary>
            The following is the definition of the input parameter "Timeout".
            Defines the timeout in ms for the wsman operation.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.NewWSManSessionOptionCommand.NoEncryption">
            <summary>
            The following is the definition of the input parameter "UnEncrypted".
            Specifies that no encryption will be used when doing remote operations over
            http. Unencrypted traffic is not allowed by default and must be enabled in
            the local configuration.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.NewWSManSessionOptionCommand.UseUTF16">
            <summary>
            The following is the definition of the input parameter "UTF16".
            Indicates the request is encoded in UTF16 format rather than UTF8 format;
            UTF8 is the default.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.NewWSManSessionOptionCommand.BeginProcessing">
            <summary>
            BeginProcessing method.
            </summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.TestWSManCommand">
            <summary>
            Issues an operation against the remote machine to ensure that the wsman
            service is running.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.TestWSManCommand.ComputerName">
            <summary>
            The following is the definition of the input parameter "ComputerName".
            Executes the management operation on the specified computer. The default is
            the local computer. Type the fully qualified domain name, NETBIOS name or IP
            address to indicate the remote host.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.TestWSManCommand.Authentication">
            <summary>
            The following is the definition of the input parameter "Authentication".
            This parameter takes a set of authentication methods the user can select
            from. The available method are an enum called AuthenticationMechanism in the
            System.Management.Automation.Runspaces namespace. The available options
            should be as follows:
            - Default : Use the default authentication (ad defined by the underlying
            protocol) for establishing a remote connection.
            - Negotiate
            - Kerberos
            - Basic:  Use basic authentication for establishing a remote connection.
            -CredSSP: Use CredSSP authentication for establishing a remote connection
            which will enable the user to perform credential delegation. (i.e. second
            hop)
            </summary>
            <remarks>
            Overriding to use a different default than the one in AuthenticatingWSManCommand base class
            </remarks>
        </member>
        <member name="P:Microsoft.WSMan.Management.TestWSManCommand.Port">
            <summary>
            The following is the definition of the input parameter "Port".
            Specifies the port to be used when connecting to the ws management service.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.TestWSManCommand.UseSSL">
            <summary>
            The following is the definition of the input parameter "UseSSL".
            Uses the Secure Sockets Layer (SSL) protocol to establish a connection to
            the remote computer. If SSL is not available on the port specified by the
            Port parameter, the command fails.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.TestWSManCommand.ApplicationName">
            <summary>
            The following is the definition of the input parameter "ApplicationName".
            ApplicationName identifies the remote endpoint.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.TestWSManCommand.ProcessRecord">
            <summary>
            ProcessRecord method.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.TestWSManCommand.Dispose">
            <summary>
            Public dispose method.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.TestWSManCommand.Dispose(Microsoft.WSMan.Management.IWSManSession)">
            <summary>
            Public dispose method.
            </summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.SetWSManQuickConfigCommand">
            <summary>
            Performs configuration actions to enable the local machine for remote
            management. Steps include:
            1. Check if WinRM service is running. If not start the WinRM service
            2. Set the WinRM service type to auto start
            3. Create a listener to accept request on any IP address. By default
            transport is http
            4. Enable firewall exception for WS-Management traffic.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.SetWSManQuickConfigCommand.UseSSL">
            <summary>
            The following is the definition of the input parameter "UseSSL".
            Indicates a https listener to be created. If this switch is not specified
            then by default a http listener will be created.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.SetWSManQuickConfigCommand.Force">
            <summary>
            Property that sets force parameter. This will allow
            configuring WinRM without prompting the user.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.SetWSManQuickConfigCommand.SkipNetworkProfileCheck">
            <summary>
            Property that will allow configuring WinRM with Public profile exception enabled.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.SetWSManQuickConfigCommand.BeginProcessing">
            <summary>
            BeginProcessing method.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.SetWSManQuickConfigCommand.Dispose">
            <summary>
            Public dispose method.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.SetWSManQuickConfigCommand.Dispose(Microsoft.WSMan.Management.IWSManSession)">
            <summary>
            Public dispose method.
            </summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.AuthenticatingWSManCommand">
            <summary>
            Common base class for all WSMan cmdlets that
            take Authentication, CertificateThumbprint and Credential parameters.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.AuthenticatingWSManCommand.Credential">
            <summary>
            The following is the definition of the input parameter "Credential".
            Specifies a user account that has permission to perform this action. The
            default is the current user.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.AuthenticatingWSManCommand.Authentication">
            <summary>
            The following is the definition of the input parameter "Authentication".
            This parameter takes a set of authentication methods the user can select
            from. The available method are an enum called Authentication in the
            System.Management.Automation.Runspaces namespace. The available options
            should be as follows:
            - Default : Use the default authentication (ad defined by the underlying
            protocol) for establishing a remote connection.
            - Negotiate
            - Kerberos
            - Basic:  Use basic authentication for establishing a remote connection.
            -CredSSP: Use CredSSP authentication for establishing a remote connection
            which will enable the user to perform credential delegation. (i.e. second
            hop)
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.AuthenticatingWSManCommand.CertificateThumbprint">
            <summary>
            Specifies the certificate thumbprint to be used to impersonate the user on the
            remote machine.
            </summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.ConnectWSManCommand">
            <summary>
            Connect wsman cmdlet.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.ConnectWSManCommand.ApplicationName">
            <summary>
            The following is the definition of the input parameter "ApplicationName".
            ApplicationName identifies the remote endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.ConnectWSManCommand.ComputerName">
            <summary>
            The following is the definition of the input parameter "ComputerName".
            Executes the management operation on the specified computer(s). The default
            is the local computer. Type the fully qualified domain name, NETBIOS name or
            IP address to indicate the remote host(s)
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.ConnectWSManCommand.ConnectionURI">
            <summary>
            The following is the definition of the input parameter "ConnectionURI".
            Specifies the transport, server, port, and ApplicationName of the new
            runspace. The format of this string is:
            transport://server:port/ApplicationName.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.ConnectWSManCommand.OptionSet">
            <summary>
            The following is the definition of the input parameter "OptionSet".
            OptionSet is a hash table and is used to pass a set of switches to the
            service to modify or refine the nature of the request.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.ConnectWSManCommand.Port">
            <summary>
            The following is the definition of the input parameter "Port".
            Specifies the port to be used when connecting to the ws management service.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.ConnectWSManCommand.SessionOption">
            <summary>
            The following is the definition of the input parameter "SessionOption".
            Defines a set of extended options for the WSMan session.  This hashtable can
            be created using New-WSManSessionOption.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.ConnectWSManCommand.UseSSL">
            <summary>
            The following is the definition of the input parameter "UseSSL".
            Uses the Secure Sockets Layer (SSL) protocol to establish a connection to
            the remote computer. If SSL is not available on the port specified by the
            Port parameter, the command fails.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.ConnectWSManCommand.BeginProcessing">
            <summary>
            BeginProcessing method.
            </summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.DisconnectWSManCommand">
            <summary>
            The following is the definition of the input parameter "ComputerName".
            Executes the management operation on the specified computer(s). The default
            is the local computer. Type the fully qualified domain name, NETBIOS name or
            IP address to indicate the remote host(s)
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.DisconnectWSManCommand.ComputerName">
            <summary>
            The following is the definition of the input parameter "ComputerName".
            Executes the management operation on the specified computer(s). The default
            is the local computer. Type the fully qualified domain name, NETBIOS name or
            IP address to indicate the remote host(s)
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.DisconnectWSManCommand.Dispose">
            <summary>
            Public dispose method.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.DisconnectWSManCommand.Dispose(System.Object)">
            <summary>
            Public dispose method.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.DisconnectWSManCommand.BeginProcessing">
            <summary>
            BeginProcessing method.
            </summary>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManHelper.Sessions.SessionObjCache">
            <summary>
            Dictionary object to store the connection.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManHelper.AddtoDictionary(System.String,System.Object)">
            <summary>
            Add a session to dictionary.
            </summary>
            <param name="key">Connection string.</param>
            <param name="value">Session object.</param>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManHelper.ValidateSpecifiedAuthentication(Microsoft.WSMan.Management.AuthenticationMechanism,System.Management.Automation.PSCredential,System.String)">
             <summary>
             Used to resolve authentication from the parameters chosen by the user.
             User has the following options:
             1. AuthMechanism + Credential
             2. CertificateThumbPrint
            
             All the above are mutually exclusive.
             </summary>
             <exception cref="T:System.InvalidOperationException">
             If there is ambiguity as specified above.
             </exception>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManHelper.CreateWsManConnection(System.String,System.Uri,System.Int32,System.String,System.String,System.Boolean,Microsoft.WSMan.Management.AuthenticationMechanism,Microsoft.WSMan.Management.SessionOption,System.Management.Automation.PSCredential,System.String)">
            <summary>
            This method is used by Connect-WsMan Cmdlet and New-Item of WsMan Provider to create connection to WsMan.
            </summary>
            <param name="ParameterSetName"></param>
            <param name="connectionuri"></param>
            <param name="port"></param>
            <param name="computername"></param>
            <param name="applicationname"></param>
            <param name="usessl"></param>
            <param name="authentication"></param>
            <param name="sessionoption"></param>
            <param name="credential"></param>
            <param name="certificateThumbprint"></param>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManHelper.ValidateCreadSSPRegistryRetry(System.Boolean,System.String[],System.String)">
            <summary>
            Verifies all the registry keys are set as expected. In case of failure .. try ecery second for 60 seconds before returning false.
            </summary>
            <param name="AllowFreshCredentialsValueShouldBePresent">True if trying to Enable CredSSP.</param>
            <param name="DelegateComputer">Names of the delegate computer.</param>
            <param name="applicationname">Name of the application.</param>
            <returns>True if valid.</returns>
        </member>
        <member name="M:Microsoft.WSMan.Management.WSManResourceLoader.GetResourceString(System.String)">
            <summary>
            Get the resource value from WinRm.ini
            from %windir%\system32\winrm\[Hexadecimal Language Folder]\winrm.ini.
            </summary>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="F:Microsoft.WSMan.Management.WSManResourceLoader.ResourceValueCache">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.GetWSManInstanceCommand">
            <summary>
            Executes action on a target object specified by RESOURCE_URI, where
            parameters are specified by key value pairs.
            eg., Call StartService method on the spooler service
            Invoke-WSManAction -Action StartService -ResourceURI wmicimv2/Win32_Service
            -SelectorSet {Name=Spooler}
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.GetWSManInstanceCommand.ApplicationName">
            <summary>
            The following is the definition of the input parameter "ApplicationName".
            ApplicationName identifies the remote endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.GetWSManInstanceCommand.BasePropertiesOnly">
            <summary>
            The following is the definition of the input parameter "BasePropertiesOnly".
            Enumerate only those properties that are part of the base class
            specification in the Resource URI. When
            Shallow is specified then this flag has no effect.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.GetWSManInstanceCommand.ComputerName">
            <summary>
            The following is the definition of the input parameter "ComputerName".
            Executes the management operation on the specified computer(s). The default
            is the local computer. Type the fully qualified domain name, NETBIOS name or
            IP address to indicate the remote host(s)
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.GetWSManInstanceCommand.ConnectionURI">
            <summary>
            The following is the definition of the input parameter "ConnectionURI".
            Specifies the transport, server, port, and Prefix, needed to connect to the
            remote machine. The format of this string is:
            transport://server:port/Prefix.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.GetWSManInstanceCommand.Dialect">
            <summary>
            The following is the definition of the input parameter "Dialect".
            Defines the dialect for the filter predicate.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.GetWSManInstanceCommand.Enumerate">
            <summary>
            The following is the definition of the input parameter "Enumerate".
            Switch indicates list all instances of a management resource. Equivalent to
            WSManagement Enumerate.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.GetWSManInstanceCommand.Filter">
            <summary>
            The following is the definition of the input parameter "Filter".
            Indicates the filter expression for the enumeration.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.GetWSManInstanceCommand.Fragment">
            <summary>
            The following is the definition of the input parameter "Fragment".
            Specifies a section inside the instance that is to be updated or retrieved
            for the given operation.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.GetWSManInstanceCommand.OptionSet">
            <summary>
            The following is the definition of the input parameter "OptionSet".
            OptionSet is a hashtable and is used to pass a set of switches to the
            service to modify or refine the nature of the request.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.GetWSManInstanceCommand.Port">
            <summary>
            The following is the definition of the input parameter "Port".
            Specifies the port to be used when connecting to the ws management service.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.GetWSManInstanceCommand.Associations">
            <summary>
            The following is the definition of the input parameter "Associations".
            Associations indicates retrieval of association instances as opposed to
            associated instances. This can only be used when specifying the Dialect as
            Association.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.GetWSManInstanceCommand.ResourceURI">
            <summary>
            The following is the definition of the input parameter "ResourceURI".
            URI of the resource class/instance representation.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.GetWSManInstanceCommand.ReturnType">
            <summary>
            The following is the definition of the input parameter "ReturnType".
            Indicates the type of data returned. Possible options are 'Object', 'EPR',
            and 'ObjectAndEPR'. Default is Object.
            If Object is specified or if this parameter is absent then only the objects
            are returned
            If EPR is specified then only the EPRs of the objects
            are returned. EPRs contain information about the Resource URI and selectors
            for the instance
            If ObjectAndEPR is specified, then both the object and the associated EPRs
            are returned.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.GetWSManInstanceCommand.SelectorSet">
            <summary>
            The following is the definition of the input parameter "SelectorSet".
            SelectorSet is a hash table which helps in identify an instance of the
            management resource if there are more than 1 instance of the resource
            class.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.GetWSManInstanceCommand.SessionOption">
            <summary>
            The following is the definition of the input parameter "SessionOption".
            Defines a set of extended options for the WSMan session.  This can be
            created by using the cmdlet New-WSManSessionOption.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.GetWSManInstanceCommand.Shallow">
            <summary>
            The following is the definition of the input parameter "Shallow".
            Enumerate only instances of the base class specified in the resource URI. If
            this flag is not specified, instances of the base class specified in the URI
            and all its derived classes are returned.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.GetWSManInstanceCommand.UseSSL">
            <summary>
            The following is the definition of the input parameter "UseSSL".
            Uses the Secure Sockets Layer (SSL) protocol to establish a connection to
            the remote computer. If SSL is not available on the port specified by the
            Port parameter, the command fails.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.GetWSManInstanceCommand.ProcessRecord">
            <summary>
            ProcessRecord method.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.GetWSManInstanceCommand.Dispose">
            <summary>
            Public dispose method.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.GetWSManInstanceCommand.Dispose(Microsoft.WSMan.Management.IWSManSession)">
            <summary>
            Public dispose method.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.GetWSManInstanceCommand.EndProcessing">
            <summary>
            BeginProcessing method.
            </summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.SetWSManInstanceCommand">
            <summary>
            Executes action on a target object specified by RESOURCE_URI, where
            parameters are specified by key value pairs.
            eg., Call StartService method on the spooler service
            Set-WSManInstance -Action StartService -ResourceURI wmicimv2/Win32_Service
            -SelectorSet {Name=Spooler}
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.SetWSManInstanceCommand.ApplicationName">
            <summary>
            The following is the definition of the input parameter "ApplicationName".
            ApplicationName identifies the remote endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.SetWSManInstanceCommand.ComputerName">
            <summary>
            The following is the definition of the input parameter "ComputerName".
            Executes the management operation on the specified computer(s). The default
            is the local computer. Type the fully qualified domain name, NETBIOS name or
            IP address to indicate the remote host(s)
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.SetWSManInstanceCommand.ConnectionURI">
            <summary>
            The following is the definition of the input parameter "ConnectionURI".
            Specifies the transport, server, port, and ApplicationName of the new
            runspace. The format of this string is:
            transport://server:port/ApplicationName.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.SetWSManInstanceCommand.Dialect">
            <summary>
            The following is the definition of the input parameter "Dialect".
            Defines the dialect for the filter predicate.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.SetWSManInstanceCommand.FilePath">
            <summary>
            The following is the definition of the input parameter "FilePath".
            Updates the management resource specified by the ResourceURI and SelectorSet
            via this input file.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.SetWSManInstanceCommand.Fragment">
            <summary>
            The following is the definition of the input parameter "Fragment".
            Specifies a section inside the instance that is to be updated or retrieved
            for the given operation.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.SetWSManInstanceCommand.OptionSet">
            <summary>
            The following is the definition of the input parameter "OptionSet".
            OptionSet is a hahs table which help modify or refine the nature of the
            request. These are similar to switches used in command line shells in that
            they are service-specific.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.SetWSManInstanceCommand.Port">
            <summary>
            The following is the definition of the input parameter "Port".
            Specifies the port to be used when connecting to the ws management service.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.SetWSManInstanceCommand.ResourceURI">
            <summary>
            The following is the definition of the input parameter "ResourceURI".
            URI of the resource class/instance representation.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.SetWSManInstanceCommand.SelectorSet">
            <summary>
            The following is the definition of the input parameter "SelectorSet".
            SelectorSet is a hash table which helps in identify an instance of the
            management resource if there are more than 1 instance of the resource
            class.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.SetWSManInstanceCommand.SessionOption">
            <summary>
            The following is the definition of the input parameter "SessionOption".
            Defines a set of extended options for the WSMan session. This can be created
            by using the cmdlet New-WSManSessionOption.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.SetWSManInstanceCommand.UseSSL">
            <summary>
            The following is the definition of the input parameter "UseSSL".
            Uses the Secure Sockets Layer (SSL) protocol to establish a connection to
            the remote computer. If SSL is not available on the port specified by the
            Port parameter, the command fails.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.SetWSManInstanceCommand.ValueSet">
            <summary>
            The following is the definition of the input parameter "ValueSet".
            ValueSet is a hash table which helps to modify resource represented by the
            ResourceURI and SelectorSet.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.SetWSManInstanceCommand.ProcessRecord">
            <summary>
            ProcessRecord method.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.SetWSManInstanceCommand.Dispose">
            <summary>
            Public dispose method.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.SetWSManInstanceCommand.Dispose(Microsoft.WSMan.Management.IWSManSession)">
            <summary>
            Public dispose method.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.SetWSManInstanceCommand.EndProcessing">
            <summary>
            BeginProcessing method.
            </summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.RemoveWSManInstanceCommand">
            <summary>
            Executes action on a target object specified by RESOURCE_URI, where
            parameters are specified by key value pairs.
            eg., Call StartService method on the spooler service
            Set-WSManInstance -Action StartService -ResourceURI wmicimv2/Win32_Service
            -SelectorSet {Name=Spooler}
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.RemoveWSManInstanceCommand.ApplicationName">
            <summary>
            The following is the definition of the input parameter "ApplicationName".
            ApplicationName identifies the remote endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.RemoveWSManInstanceCommand.ComputerName">
            <summary>
            The following is the definition of the input parameter "ComputerName".
            Executes the management operation on the specified computer(s). The default
            is the local computer. Type the fully qualified domain name, NETBIOS name or
            IP address to indicate the remote host(s)
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.RemoveWSManInstanceCommand.ConnectionURI">
            <summary>
            The following is the definition of the input parameter "ConnectionURI".
            Specifies the transport, server, port, and ApplicationName of the new
            runspace. The format of this string is:
            transport://server:port/ApplicationName.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.RemoveWSManInstanceCommand.OptionSet">
            <summary>
            The following is the definition of the input parameter "OptionSet".
            OptionSet is a hahs table which help modify or refine the nature of the
            request. These are similar to switches used in command line shells in that
            they are service-specific.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.RemoveWSManInstanceCommand.Port">
            <summary>
            The following is the definition of the input parameter "Port".
            Specifies the port to be used when connecting to the ws management service.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.RemoveWSManInstanceCommand.ResourceURI">
            <summary>
            The following is the definition of the input parameter "ResourceURI".
            URI of the resource class/instance representation.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.RemoveWSManInstanceCommand.SelectorSet">
            <summary>
            The following is the definition of the input parameter "SelectorSet".
            SelectorSet is a hash table which helps in identify an instance of the
            management resource if there are more than 1 instance of the resource
            class.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.RemoveWSManInstanceCommand.SessionOption">
            <summary>
            The following is the definition of the input parameter "SessionOption".
            Defines a set of extended options for the WSMan session. This can be created
            by using the cmdlet New-WSManSessionOption.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.RemoveWSManInstanceCommand.UseSSL">
            <summary>
            The following is the definition of the input parameter "UseSSL".
            Uses the Secure Sockets Layer (SSL) protocol to establish a connection to
            the remote computer. If SSL is not available on the port specified by the
            Port parameter, the command fails.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.RemoveWSManInstanceCommand.ProcessRecord">
            <summary>
            ProcessRecord method.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.RemoveWSManInstanceCommand.Dispose">
            <summary>
            Public dispose method.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.RemoveWSManInstanceCommand.Dispose(Microsoft.WSMan.Management.IWSManSession)">
            <summary>
            Public dispose method.
            </summary>
        </member>
        <member name="T:Microsoft.WSMan.Management.NewWSManInstanceCommand">
            <summary>
            Creates an instance of a management resource identified by the resource URI
            using specified ValueSet or input File.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.NewWSManInstanceCommand.ApplicationName">
            <summary>
            The following is the definition of the input parameter "ApplicationName".
            ApplicationName identifies the remote endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.NewWSManInstanceCommand.ComputerName">
            <summary>
            The following is the definition of the input parameter "ComputerName".
            Executes the management operation on the specified computer(s). The default
            is the local computer. Type the fully qualified domain name, NETBIOS name or
            IP address to indicate the remote host(s)
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.NewWSManInstanceCommand.ConnectionURI">
            <summary>
            The following is the definition of the input parameter "ConnectionURI".
            Specifies the transport, server, port, and ApplicationName of the new
            runspace. The format of this string is:
            transport://server:port/ApplicationName.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.NewWSManInstanceCommand.FilePath">
            <summary>
            The following is the definition of the input parameter "FilePath".
            Updates the management resource specified by the ResourceURI and SelectorSet
            via this input file.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.NewWSManInstanceCommand.OptionSet">
            <summary>
            The following is the definition of the input parameter "OptionSet".
            OptionSet is a hash table and is used to pass a set of switches to the
            service to modify or refine the nature of the request.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.NewWSManInstanceCommand.Port">
            <summary>
            The following is the definition of the input parameter "Port".
            Specifies the port to be used when connecting to the ws management service.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.NewWSManInstanceCommand.ResourceURI">
            <summary>
            The following is the definition of the input parameter "ResourceURI".
            URI of the resource class/instance representation.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.NewWSManInstanceCommand.SelectorSet">
            <summary>
            The following is the definition of the input parameter "SelectorSet".
            SelectorSet is a hash table which helps in identify an instance of the
            management resource if there are more than 1 instance of the resource
            class.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.NewWSManInstanceCommand.SessionOption">
            <summary>
            The following is the definition of the input parameter "SessionOption".
            Defines a set of extended options for the WSMan session.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.NewWSManInstanceCommand.UseSSL">
            <summary>
            The following is the definition of the input parameter "UseSSL".
            Uses the Secure Sockets Layer (SSL) protocol to establish a connection to
            the remote computer. If SSL is not available on the port specified by the
            Port parameter, the command fails.
            </summary>
        </member>
        <member name="P:Microsoft.WSMan.Management.NewWSManInstanceCommand.ValueSet">
            <summary>
            The following is the definition of the input parameter "ValueSet".
            ValueSet is a hash table which helps to modify resource represented by the
            ResourceURI and SelectorSet.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.NewWSManInstanceCommand.BeginProcessing">
            <summary>
            BeginProcessing method.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.NewWSManInstanceCommand.ProcessRecord">
            <summary>
            ProcessRecord method.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.NewWSManInstanceCommand.Dispose">
            <summary>
            Public dispose method.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.NewWSManInstanceCommand.Dispose(Microsoft.WSMan.Management.IWSManSession)">
            <summary>
            Public dispose method.
            </summary>
        </member>
        <member name="M:Microsoft.WSMan.Management.NewWSManInstanceCommand.EndProcessing">
            <summary>
            EndProcessing method.
            </summary>
        </member>
        <member name="T:WsManResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="M:WsManResources.#ctor">
            <summary>constructor</summary>
        </member>
        <member name="P:WsManResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:WsManResources.Culture">
            <summary>
              Overrides the current threads CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:WsManResources.InvalidFileName">
            <summary>
              Looks up a localized string similar to 
               This command cannot be used because file does not exist.Check the file existence and run your command.
             
            </summary>
        </member>
        <member name="P:WsManResources.NewItemShouldContinueClientCertCaption">
            <summary>
              Looks up a localized string similar to 
               Creates a new ClientCertificate item.
             
            </summary>
        </member>
        <member name="P:WsManResources.NotProperURI">
            <summary>
              Looks up a localized string similar to 
               This command cannot be executed because the Connection URI is not in correct format. Please check the connection uri and Run your command again.
             
            </summary>
        </member>
        <member name="P:WsManResources.CredSSPContinueQuery">
             <summary>
               Looks up a localized string similar to 
                CredSSP authentication allows the user credentials on this computer to be sent to a remote computer. If you use CredSSP authentication for a connection to a malicious or compromised computer, that computer will have access to your user name and password. For more information, see the Enable-WSManCredSSP Help topic.
            Do you want to enable CredSSP authentication?
              
             </summary>
        </member>
        <member name="P:WsManResources.NewItemShouldContinueListenerCaption">
            <summary>
              Looks up a localized string similar to 
               Creates a new Listener item.
             
            </summary>
        </member>
        <member name="P:WsManResources.ShouldContinueSecurityQuery">
             <summary>
               Looks up a localized string similar to 
                This command modifies the security settings on a resource in the following WinRM plug-in: {0}.
            Do you want to continue?
              
             </summary>
        </member>
        <member name="P:WsManResources.SetItemWhatIfAndConfirmText">
            <summary>
              Looks up a localized string similar to 
               "Set-Item" on the WinRM configuration setting "{0}" to update the value to "{1}"
             
            </summary>
        </member>
        <member name="P:WsManResources.EnableCredSSPPolicyValidateError">
            <summary>
              Looks up a localized string similar to 
               This command cannot be executed because the setting cannot be enabled.
             
            </summary>
        </member>
        <member name="P:WsManResources.NewItemShouldContinueListenerQuery">
             <summary>
               Looks up a localized string similar to 
                This command creates a new Listener item.
            
            Do you want to continue?
              
             </summary>
        </member>
        <member name="P:WsManResources.ErrorElevationNeeded">
            <summary>
              Looks up a localized string similar to 
               Access is denied. You need to run this cmdlet from an elevated process.
             
            </summary>
        </member>
        <member name="P:WsManResources.DriveRootError">
            <summary>
              Looks up a localized string similar to 
               This command cannot be used because WsMan drive root is not supported on this version of Windows OS.
             
            </summary>
        </member>
        <member name="P:WsManResources.WSManServiceStartCaption">
            <summary>
              Looks up a localized string similar to 
               Start WinRM Service
             
            </summary>
        </member>
        <member name="P:WsManResources.CredSSPServerContinueQuery">
             <summary>
               Looks up a localized string similar to 
                CredSSP authentication allows the server to accept user credentials from a remote computer. If you enable CredSSP authentication on the server, the server will have access to the user name and password of the client computer if the client computer sends them. For more information, see the Enable-WSManCredSSP Help topic.
            Do you want to enable CredSSP authentication?
              
             </summary>
        </member>
        <member name="P:WsManResources.QuickConfigContinueCaption">
            <summary>
              Looks up a localized string similar to 
               WinRM Quick Configuration
             
            </summary>
        </member>
        <member name="P:WsManResources.Vendor">
            <summary>
              Looks up a localized string similar to 
               Microsoft
             
            </summary>
        </member>
        <member name="P:WsManResources.NoChangeValue">
            <summary>
              Looks up a localized string similar to 
               This command cannot set the input value because these values are Primary keys or Container items of the resource object. Change the input value and Run your command.
             
            </summary>
        </member>
        <member name="P:WsManResources.CredSSPContinueCaption">
            <summary>
              Looks up a localized string similar to 
               CredSSP Authentication Configuration for WS-Management
             
            </summary>
        </member>
        <member name="P:WsManResources.SetItemShouldContinueCaption">
            <summary>
              Looks up a localized string similar to 
               Set the value of the item
             
            </summary>
        </member>
        <member name="P:WsManResources.TrustedHostValueTypeError">
            <summary>
              Looks up a localized string similar to 
               Cannot convert 'System.Object[]' to the type 'System.String' required by the parameter. Specified method is not supported.
             
            </summary>
        </member>
        <member name="P:WsManResources.CredSSPServiceNotConfigured">
            <summary>
              Looks up a localized string similar to 
               This computer is not configured to receive credentials from a remote client computer.
             
            </summary>
        </member>
        <member name="P:WsManResources.DisconnectFailure">
            <summary>
              Looks up a localized string similar to 
               This command cannot be used from the current path. Move to root path of the provider using cd\ and run your command again.
             
            </summary>
        </member>
        <member name="P:WsManResources.CmdletNotAvailable">
            <summary>
              Looks up a localized string similar to 
               This PowerShell cmdlet is not available on for Windows XP and Windows Server 2003.
             
            </summary>
        </member>
        <member name="P:WsManResources.NoAttributeMatch">
            <summary>
              Looks up a localized string similar to 
               This command cannot be used because the parameter matches a non-text property on the ResourceURI.Check the input parameters and run your command.
             
            </summary>
        </member>
        <member name="P:WsManResources.AmbiguosAuthentication">
            <summary>
              Looks up a localized string similar to 
               A {0} cannot be specified when {1} is specified.
             
            </summary>
        </member>
        <member name="P:WsManResources.InvalidComputerName">
            <summary>
              Looks up a localized string similar to 
               The WinRM client cannot complete the operation.Check if the computer name is valid.
             
            </summary>
        </member>
        <member name="P:WsManResources.CredSSPClientAndDelegateMustBeSpecified">
            <summary>
              Looks up a localized string similar to 
               The {0} parameter is mandatory when the {1} parameter value is {2}.
             
            </summary>
        </member>
        <member name="P:WsManResources.value">
            <summary>
              Looks up a localized string similar to 
               This command cannot be used because Parameter Value is not supplied. Check the value again and run your command.
             
            </summary>
        </member>
        <member name="P:WsManResources.ItemDoesNotExist">
            <summary>
              Looks up a localized string similar to 
               This command cannot be used because path does not exist.Check the path existence and run your command.
             
            </summary>
        </member>
        <member name="P:WsManResources.ShouldContinueSecurityCaption">
            <summary>
              Looks up a localized string similar to 
               Security Configuration for WinRM Plug-in.
             
            </summary>
        </member>
        <member name="P:WsManResources.SetItemNotSupported">
            <summary>
              Looks up a localized string similar to 
               This command cannot be used in the current path because this cmdlet is not supported at this level of Provider path.
             
            </summary>
        </member>
        <member name="P:WsManResources.NoDelegateFreshCred">
            <summary>
              Looks up a localized string similar to 
               The machine is not configured to allow delegating fresh credentials.
             
            </summary>
        </member>
        <member name="P:WsManResources.SetItemServiceRestartWarning">
            <summary>
              Looks up a localized string similar to 
               The configuration changes you made will only be effective after the WinRM service is restarted.  To restart the WinRM service, run the following command: 'Restart-Service winrm'
             
            </summary>
        </member>
        <member name="P:WsManResources.QuickConfigContinueQuery">
             <summary>
               Looks up a localized string similar to 
                Running the Set-WSManQuickConfig command has significant security implications, as it enables remote management through the WinRM service on this computer.
            This command:
                1. Checks whether the WinRM service is running. If the WinRM service is not running, the service is started.
                2. Sets the WinRM service startup type to automatic.
                3. Creates a listener to accept requests on any IP address. By default, the transport is HTTP.
                4. Enables a firewall exception for WS-Management traffic.
                5. Enables Kerberos and Negotiate service authentication.
            Do you want to enable remote management through the WinRM service on this computer?
              
             </summary>
        </member>
        <member name="P:WsManResources.SetItemOnRunAsPasswordNoRunAsUser">
            <summary>
              Looks up a localized string similar to 
               The value for RunAsPassword cannot be set without a value set for RunAsUser. Set the value for both RunAsUser and RunAsPassword in Powershell by calling the Set-Item cmdlet with the value for -Path attribute equal to the value of RunAsUser.
             
            </summary>
        </member>
        <member name="P:WsManResources.SetItemWarningForGlobalQuota">
            <summary>
              Looks up a localized string similar to 
               The updated configuration might affect the operation of the plugins having a per plugin quota value greater than {0}. Verify the configuration of all the registered plugins and change the per plugin quota values for the affected plugins.
             
            </summary>
        </member>
        <member name="P:WsManResources.SetItemShouldContinueQuery">
             <summary>
               Looks up a localized string similar to 
                This command set the value of the Item.
            
            Do you want to continue?
              
             </summary>
        </member>
        <member name="P:WsManResources.DelegateFreshCred">
            <summary>
              Looks up a localized string similar to 
               The machine is configured to allow delegating fresh credentials to the following target(s):
             
            </summary>
        </member>
        <member name="P:WsManResources.ConfigStorage">
            <summary>
              Looks up a localized string similar to 
               Root of WsMan Config Storage.
             
            </summary>
        </member>
        <member name="P:WsManResources.WinRMServiceError">
            <summary>
              Looks up a localized string similar to 
               This command cannot be executed because the WinRM Service is not started.
             
            </summary>
        </member>
        <member name="P:WsManResources.InvalidPath">
            <summary>
              Looks up a localized string similar to 
               This command cannot be used because root path does not exist.Check the root path and run your command.
             
            </summary>
        </member>
        <member name="P:WsManResources.RemoveItemNotSupported">
            <summary>
              Looks up a localized string similar to 
               This command cannot be used in the current path because Remove-Item is not supported at this level of Provider path.
             
            </summary>
        </member>
        <member name="P:WsManResources.SetItemTrustedHostsWarningQuery">
            <summary>
              Looks up a localized string similar to 
               This command modifies the TrustedHosts list for the WinRM client. The computers in the TrustedHosts list might not be authenticated. The client might send credential information to these computers. Are you sure that you want to modify this list?
             
            </summary>
        </member>
        <member name="P:WsManResources.SetItemRootSDDLWarningQuery">
            <summary>
              Looks up a localized string similar to 
               This command modifies the RootSDDL setting for the WinRM service.  The RootSDDL stores the default security settings for any WinRM securable resource that does not specify its own SDDL. Changing the SDDL might affect security for many WinRM resources. Are you sure that you want to modify these default settings?
             
            </summary>
        </member>
        <member name="P:WsManResources.NewWSManSessionOptionCred">
            <summary>
              Looks up a localized string similar to 
               This command cannot be used without credential because the authentication algorithm is Basic or Digest. Use Credentials parameter to specify value and run your command.
             
            </summary>
        </member>
        <member name="P:WsManResources.SetItemWarnigForPPQ">
            <summary>
              Looks up a localized string similar to 
               The updated configuration is effective only if it is less than or equal to the value of global quota {0}. Verify the value for the global quota using the PowerShell cmdlet "Get-Item {0}".
             
            </summary>
        </member>
        <member name="P:WsManResources.DisableCredSSPPolicyValidateError">
            <summary>
              Looks up a localized string similar to 
               This command cannot be executed because the setting cannot be disabled.
             
            </summary>
        </member>
        <member name="P:WsManResources.ResourceURIMissingInResourceDir">
            <summary>
              Looks up a localized string similar to 
               Unable to find value for "{0}" element in the path {1}.
             
            </summary>
        </member>
        <member name="P:WsManResources.NewWSManSessionOptionAuth">
            <summary>
              Looks up a localized string similar to 
               This command cannot be used without Basic or Digest authentication algorithm because credentials are specified.Use Basic or Digest authentication algorithm and run your command.
             
            </summary>
        </member>
        <member name="P:WsManResources.SetItemGeneralSecurityCaption">
            <summary>
              Looks up a localized string similar to 
               WinRM Security Configuration.
             
            </summary>
        </member>
        <member name="P:WsManResources.NewItemNotSupported">
            <summary>
              Looks up a localized string similar to 
               This command cannot be used in the current path because New-Item is not supported at this level of Provider path.
             
            </summary>
        </member>
        <member name="P:WsManResources.WinrmNotConfigured">
            <summary>
              Looks up a localized string similar to 
               This command cannot be used because the configuration is corrupted. Run WinRM invoke Restore WinRM/config to restore the default configuration
             
            </summary>
        </member>
        <member name="P:WsManResources.InvalidValueType">
            <summary>
              Looks up a localized string similar to 
               This command cannot be used because the parameter value type is invalid. {0} configuration expects a value of Type {1}. Verify that the value is correct and try again.
             
            </summary>
        </member>
        <member name="P:WsManResources.WSManServiceStartQuery">
             <summary>
               Looks up a localized string similar to 
                WinRM service is not started currently. Running this command will start the WinRM service.
            
            Do you want to continue?
              
             </summary>
        </member>
        <member name="P:WsManResources.NoResourceMatch">
            <summary>
              Looks up a localized string similar to 
               This command cannot be used because the parameter does not match any properties on the ResourceURI.Check the input parameters and run your command.
             
            </summary>
        </member>
        <member name="P:WsManResources.CredSSPServiceConfigured">
            <summary>
              Looks up a localized string similar to 
               This computer is configured to receive credentials from a remote client computer.
             
            </summary>
        </member>
        <member name="P:WsManResources.CredSSPRoleAndDelegateCannotBeSpecified">
            <summary>
              Looks up a localized string similar to 
               The {0} parameter cannot be used when the {1} parameter value is {2}. The {0} parameter can be used only when the {1} parameter value is {3}.
             
            </summary>
        </member>
        <member name="P:WsManResources.SetItemServiceRestartWarningRemote">
            <summary>
              Looks up a localized string similar to 
               The configuration changes you made will only be effective after the WinRM service is restarted on {0}.
             
            </summary>
        </member>
        <member name="P:WsManResources.ConnectFailure">
            <summary>
              Looks up a localized string similar to 
               This command cannot be used from the current path. Move to root path of the provider using cd\ and run your command again.
             
            </summary>
        </member>
        <member name="P:WsManResources.Description">
            <summary>
              Looks up a localized string similar to 
               This PowerShell snap-in contains cmdlets (such as Get-WSManInstance and Set-WSManInstance) that are used by the PowerShell host to manage WSMan operations.
             
            </summary>
        </member>
        <member name="P:WsManResources.LocalHost">
            <summary>
              Looks up a localized string similar to 
               This command cannot be used to remove the computer 'localhost' because it will always be connected. Give some other connected computer and run your command.
             
            </summary>
        </member>
        <member name="P:WsManResources.NewItemShouldContinueClientCertQuery">
             <summary>
               Looks up a localized string similar to 
                This command creates a new ClientCertificate item.
            
            Do you want to continue?
              
             </summary>
        </member>
        <member name="P:WsManResources.ClearItemOnRunAsPassword">
            <summary>
              Looks up a localized string similar to 
               The RunAsPassword value cannot be removed. Remove the values for RunAsUser and RunAsPassword in PowerShell by calling the Clear-Item cmdlet with the value for -Path attribute equal to the value of RunAsUser.
             
            </summary>
        </member>
        <member name="P:WsManResources.NewDriveRootDoesNotExist">
            <summary>
              Looks up a localized string similar to 
               Unable to create a drive with the specified root. The root path does not exist.
             
            </summary>
        </member>
        <member name="P:WsManResources.MultipleResourceMatch">
            <summary>
              Looks up a localized string similar to 
               This command cannot be used because the parameter matches multiple properties on the ResourceURI.Check the input parameters and run your command.
             
            </summary>
        </member>
    </members>
</doc>
